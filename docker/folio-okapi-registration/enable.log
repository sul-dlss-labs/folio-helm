------------------ [mod-authtoken] Getting descriptor ------------------
------------------ [mod-authtoken-2.9.0-SNAPSHOT.91] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:20:38 GMT
Content-Type: application/json
Content-Length: 1171
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-authtoken-2.9.0-SNAPSHOT.91
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 47894us

{
  "id" : "mod-authtoken-2.9.0-SNAPSHOT.91",
  "name" : "authtoken",
  "requires" : [ {
    "id" : "permissions",
    "version" : "5.3"
  }, {
    "id" : "users",
    "version" : "15.0"
  } ],
  "provides" : [ {
    "id" : "authtoken",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/token",
      "permissionsRequired" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/refreshtoken",
      "permissionsRequired" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/refresh",
      "permissionsRequired" : [ ]
    } ]
  } ],
  "filters" : [ {
    "methods" : [ "*" ],
    "pathPattern" : "/*",
    "phase" : "auth",
    "type" : "headers"
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-authtoken:2.9.0-SNAPSHOT.91",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0 -Dcache.permissions=true"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-authtoken-2.9.0-SNAPSHOT.91] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:20:38 GMT
Content-Type: text/plain
Content-Length: 48
Connection: keep-alive
vary: origin

Duplicate instId mod-authtoken-2.9.0-SNAPSHOT.91
------------------ [mod-authtoken-2.9.0-SNAPSHOT.91] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:20:38 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-authtoken-2.9.0-SNAPSHOT.91] Enabling module for tenant ------------------
[{"id":"mod-authtoken-2.9.0-SNAPSHOT.91","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:20:38 GMT
Content-Type: application/json
Content-Length: 75
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 180444us

[ {
  "id" : "mod-authtoken-2.9.0-SNAPSHOT.91",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-calendar] Getting descriptor ------------------
------------------ [mod-calendar-1.13.0-SNAPSHOT.121] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:20:43 GMT
Content-Type: application/json
Content-Length: 3895
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-calendar-1.13.0-SNAPSHOT.121
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 111337us

{
  "id" : "mod-calendar-1.13.0-SNAPSHOT.121",
  "name" : "Calendar module",
  "requires" : [ ],
  "provides" : [ {
    "id" : "calendar",
    "version" : "4.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/calendar/periods",
      "permissionsRequired" : [ "calendar.opening-hours.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/calendar/periods/{servicePointId}/period",
      "permissionsRequired" : [ "calendar.periods.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/calendar/periods/{servicePointId}/period",
      "permissionsRequired" : [ "calendar.periods.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/calendar/periods/{servicePointId}/period/{periodId}",
      "permissionsRequired" : [ "calendar.periods.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/calendar/periods/{servicePointId}/period/{periodId}",
      "permissionsRequired" : [ "calendar.periods.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/calendar/periods/{servicePointId}/period/{periodId}",
      "permissionsRequired" : [ "calendar.periods.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/calendar/periods/{servicePointId}/calculateopening",
      "permissionsRequired" : [ "calendar.opening-hours.collection.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "calendar.opening-hours.collection.get",
    "displayName" : "List calendar opening hours",
    "description" : ""
  }, {
    "permissionName" : "calendar.periods.collection.get",
    "displayName" : "List calendar periods descriptions",
    "description" : ""
  }, {
    "permissionName" : "calendar.periods.item.get",
    "displayName" : "Get period description",
    "description" : ""
  }, {
    "permissionName" : "calendar.periods.item.post",
    "displayName" : "Add new calendar period description",
    "description" : ""
  }, {
    "permissionName" : "calendar.periods.item.put",
    "displayName" : "Update existing calendar period description",
    "description" : ""
  }, {
    "permissionName" : "calendar.periods.item.delete",
    "displayName" : "Remove calendar period description",
    "description" : ""
  }, {
    "permissionName" : "calendar.all",
    "displayName" : "Calendar - all permissions",
    "description" : "All permission for mod-calendar module",
    "subPermissions" : [ "calendar.opening-hours.collection.get", "calendar.periods.collection.get", "calendar.periods.item.post", "calendar.periods.item.get", "calendar.periods.item.put", "calendar.periods.item.delete" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-calendar:1.13.0-SNAPSHOT.121",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-calendar-1.13.0-SNAPSHOT.121] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:20:43 GMT
Content-Type: text/plain
Content-Length: 49
Connection: keep-alive
vary: origin

Duplicate instId mod-calendar-1.13.0-SNAPSHOT.121
------------------ [mod-calendar-1.13.0-SNAPSHOT.121] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:20:43 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-calendar-1.13.0-SNAPSHOT.121] Enabling module for tenant ------------------
[{"id":"mod-calendar-1.13.0-SNAPSHOT.121","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:20:44 GMT
Content-Type: application/json
Content-Length: 76
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 139668us

[ {
  "id" : "mod-calendar-1.13.0-SNAPSHOT.121",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-circulation] Getting descriptor ------------------
------------------ [mod-circulation-22.1.0-SNAPSHOT.877] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:20:48 GMT
Content-Type: application/json
Content-Length: 73372
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-circulation-22.1.0-SNAPSHOT.877
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 103902us

{
  "id" : "mod-circulation-22.1.0-SNAPSHOT.877",
  "name" : "Circulation Module",
  "requires" : [ {
    "id" : "loan-storage",
    "version" : "7.1"
  }, {
    "id" : "circulation-rules-storage",
    "version" : "1.0"
  }, {
    "id" : "item-storage",
    "version" : "8.7"
  }, {
    "id" : "instance-storage",
    "version" : "4.0 5.0 6.0 7.0"
  }, {
    "id" : "holdings-storage",
    "version" : "1.3 2.0 3.0 4.0"
  }, {
    "id" : "request-storage",
    "version" : "3.4"
  }, {
    "id" : "request-storage-batch",
    "version" : "0.3"
  }, {
    "id" : "users",
    "version" : "14.2 15.0"
  }, {
    "id" : "locations",
    "version" : "3.0"
  }, {
    "id" : "material-types",
    "version" : "2.0"
  }, {
    "id" : "loan-policy-storage",
    "version" : "1.2 2.0"
  }, {
    "id" : "request-policy-storage",
    "version" : "1.0"
  }, {
    "id" : "fixed-due-date-schedules-storage",
    "version" : "2.0"
  }, {
    "id" : "service-points",
    "version" : "3.0"
  }, {
    "id" : "calendar",
    "version" : "3.0 4.0"
  }, {
    "id" : "patron-notice-policy-storage",
    "version" : "0.11"
  }, {
    "id" : "patron-notice",
    "version" : "1.0"
  }, {
    "id" : "configuration",
    "version" : "2.0"
  }, {
    "id" : "cancellation-reason-storage",
    "version" : "1.1"
  }, {
    "id" : "loan-types",
    "version" : "2.2"
  }, {
    "id" : "scheduled-notice-storage",
    "version" : "0.1"
  }, {
    "id" : "feesfines",
    "version" : "16.3"
  }, {
    "id" : "location-units",
    "version" : "2.0"
  }, {
    "id" : "patron-action-session-storage",
    "version" : "0.1"
  }, {
    "id" : "check-in-storage",
    "version" : "0.2"
  }, {
    "id" : "pubsub-event-types",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publishers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-subscribers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publish",
    "version" : "0.1"
  }, {
    "id" : "automated-patron-blocks",
    "version" : "0.1"
  }, {
    "id" : "notes",
    "version" : "1.0 2.0"
  } ],
  "provides" : [ {
    "id" : "requests-reports",
    "version" : "0.8",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/requests-reports/hold-shelf-clearance/{id}",
      "permissionsRequired" : [ "circulation.requests.hold-shelf-clearance-report.get" ],
      "modulePermissions" : [ "modperms.circulation.requests.hold-shelf-clearance-report.get" ]
    } ]
  }, {
    "id" : "inventory-reports",
    "version" : "0.4",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory-reports/items-in-transit",
      "permissionsRequired" : [ "circulation.inventory.items-in-transit-report.get" ],
      "modulePermissions" : [ "modperms.inventory.items-in-transit-report.get" ]
    } ]
  }, {
    "id" : "pick-slips",
    "version" : "0.3",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/pick-slips/{servicePointId}",
      "permissionsRequired" : [ "circulation.pick-slips.get" ],
      "modulePermissions" : [ "modperms.circulation.pick-slips.get" ]
    } ]
  }, {
    "id" : "request-move",
    "version" : "0.7",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/requests/{id}/move",
      "permissionsRequired" : [ "circulation.requests.item.move.post" ],
      "modulePermissions" : [ "modperms.circulation.requests.item.move.post" ]
    } ]
  }, {
    "id" : "loan-anonymization",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/loan-anonymization/by-user/{userId}",
      "permissionsRequired" : [ "circulation.loans.collection.anonymize.user.post" ],
      "modulePermissions" : [ "modperms.circulation.loans.anonymize" ]
    } ]
  }, {
    "id" : "declare-item-lost",
    "version" : "0.3",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/loans/{id}/declare-item-lost",
      "permissionsRequired" : [ "circulation.loans.declare-item-lost.post" ],
      "modulePermissions" : [ "modperms.circulation.loans.declare-item-lost.post" ]
    } ]
  }, {
    "id" : "change-due-date",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/loans/{id}/change-due-date",
      "permissionsRequired" : [ "circulation.loans.change-due-date.post" ],
      "modulePermissions" : [ "modperms.circulation.loans.change-due-date.post" ]
    } ]
  }, {
    "id" : "claim-item-returned",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/loans/{id}/claim-item-returned",
      "permissionsRequired" : [ "circulation.loans.claim-item-returned.post" ],
      "modulePermissions" : [ "modperms.circulation.loans.claim-item-returned.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/loans/{id}/declare-claimed-returned-item-as-missing",
      "permissionsRequired" : [ "circulation.loans.declare-claimed-returned-item-as-missing.post" ],
      "modulePermissions" : [ "modperms.circulation.loans.declare-claimed-returned-item-as-missing.post" ]
    } ]
  }, {
    "id" : "circulation",
    "version" : "11.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/check-out-by-barcode",
      "permissionsRequired" : [ "circulation.check-out-by-barcode.post" ],
      "permissionsDesired" : [ "circulation.override-patron-block", "circulation.override-item-limit-block", "circulation.override-item-not-loanable-block" ],
      "modulePermissions" : [ "modperms.circulation.check-out-by-barcode.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/check-in-by-barcode",
      "permissionsRequired" : [ "circulation.check-in-by-barcode.post" ],
      "modulePermissions" : [ "modperms.circulation.check-in-by-barcode.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/renew-by-barcode",
      "permissionsRequired" : [ "circulation.renew-by-barcode.post" ],
      "permissionsDesired" : [ "circulation.override-patron-block", "circulation.override-renewal-block" ],
      "modulePermissions" : [ "circulation.renew-loan" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/renew-by-id",
      "permissionsRequired" : [ "circulation.renew-by-id.post" ],
      "modulePermissions" : [ "circulation.renew-loan" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/loans",
      "permissionsRequired" : [ "circulation.loans.collection.get" ],
      "modulePermissions" : [ "modperms.circulation.loans.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/loans",
      "permissionsRequired" : [ "circulation.loans.item.post" ],
      "modulePermissions" : [ "modperms.circulation.loans.item.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/circulation/loans",
      "permissionsRequired" : [ "circulation.loans.collection.delete" ],
      "modulePermissions" : [ "circulation-storage.loans.collection.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/loans/{id}",
      "permissionsRequired" : [ "circulation.loans.item.get" ],
      "modulePermissions" : [ "modperms.circulation.loans.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/circulation/loans/{id}",
      "permissionsRequired" : [ "circulation.loans.item.put" ],
      "modulePermissions" : [ "modperms.circulation.loans.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/circulation/loans/{id}",
      "permissionsRequired" : [ "circulation.loans.item.delete" ],
      "modulePermissions" : [ "circulation-storage.loans.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/requests",
      "permissionsRequired" : [ "circulation.requests.collection.get" ],
      "modulePermissions" : [ "modperms.circulation.requests.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/requests",
      "permissionsRequired" : [ "circulation.requests.item.post" ],
      "permissionsDesired" : [ "circulation.override-patron-block" ],
      "modulePermissions" : [ "modperms.circulation.requests.item.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/circulation/requests",
      "permissionsRequired" : [ "circulation.requests.collection.delete" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/requests/{id}",
      "permissionsRequired" : [ "circulation.requests.item.get" ],
      "modulePermissions" : [ "modperms.circulation.requests.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/circulation/requests/{id}",
      "permissionsRequired" : [ "circulation.requests.item.put" ],
      "modulePermissions" : [ "modperms.circulation.requests.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/circulation/requests/{id}",
      "permissionsRequired" : [ "circulation.requests.item.delete" ],
      "modulePermissions" : [ "modperms.circulation.requests.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/requests/queue/{id}",
      "permissionsRequired" : [ "circulation.requests.queue.collection.get" ],
      "modulePermissions" : [ "modperms.circulation.requests.queue.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/requests/queue/{itemId}/reorder",
      "permissionsRequired" : [ "circulation.requests.queue.reorder.collection.post" ],
      "modulePermissions" : [ "modperms.circulation.requests.queue.reorder.collection.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/requests/instances",
      "permissionsRequired" : [ "circulation.requests.instances.item.post" ],
      "modulePermissions" : [ "modperms.circulation.requests.instances.item.post" ]
    } ]
  }, {
    "id" : "circulation-rules",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules",
      "permissionsRequired" : [ "circulation.rules.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/circulation/rules",
      "permissionsRequired" : [ "circulation.rules.put" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.put" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/loan-policy",
      "permissionsRequired" : [ "circulation.rules.loan-policy.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/loan-policy-all",
      "permissionsRequired" : [ "circulation.rules.loan-policy-all.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/overdue-fine-policy",
      "permissionsRequired" : [ "circulation.rules.overdue-fine-policy.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/overdue-fine-policy-all",
      "permissionsRequired" : [ "circulation.rules.overdue-fine-policy-all.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/lost-item-policy",
      "permissionsRequired" : [ "circulation.rules.lost-item-policy.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/lost-item-policy-all",
      "permissionsRequired" : [ "circulation.rules.lost-item-all.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/request-policy",
      "permissionsRequired" : [ "circulation.rules.request-policy.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/request-policy-all",
      "permissionsRequired" : [ "circulation.rules.request-policy-all.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/notice-policy",
      "permissionsRequired" : [ "circulation.rules.notice-policy.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation/rules/notice-policy-all",
      "permissionsRequired" : [ "circulation.rules.notice-policy-all.get" ],
      "modulePermissions" : [ "circulation-storage.circulation-rules.get", "inventory-storage.locations.item.get" ]
    } ]
  }, {
    "id" : "patron-action-session",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/end-patron-action-session",
      "permissionsRequired" : [ "circulation.end-patron-action-session.post" ],
      "modulePermissions" : [ "patron-action-session-storage.patron-action-sessions.collection.get", "circulation-storage.loans.collection.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.material-types.collection.get", "circulation-storage.loan-policies.collection.get", "users.item.get", "circulation.rules.notice-policy.get", "circulation-storage.patron-notice-policies.item.get", "patron-notice.post", "patron-action-session-storage.patron-action-sessions.item.delete", "pubsub.publish.post" ]
    } ]
  }, {
    "id" : "_timer",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/notice-session-expiration-by-timeout",
      "unit" : "minute",
      "delay" : "3",
      "modulePermissions" : [ "patron-action-session-storage.expired-session-patron-ids.collection.get", "patron-action-session-storage.patron-action-sessions.collection.get", "circulation-storage.loans.collection.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.material-types.collection.get", "circulation-storage.loan-policies.collection.get", "users.item.get", "users.collection.get", "circulation-storage.circulation-rules.get", "circulation.rules.notice-policy.get", "circulation-storage.patron-notice-policies.item.get", "patron-notice.post", "patron-action-session-storage.patron-action-sessions.item.delete", "configuration.entries.collection.get", "pubsub.publish.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/loan-scheduled-notices-processing",
      "unit" : "minute",
      "delay" : "5",
      "modulePermissions" : [ "scheduled-notice-storage.scheduled-notices.collection.get", "scheduled-notice-storage.scheduled-notices.item.delete", "scheduled-notice-storage.scheduled-notices.item.put", "circulation-storage.loans.item.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "inventory-storage.items.item.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.material-types.item.get", "inventory-storage.holdings.item.get", "inventory-storage.loan-types.item.get", "inventory-storage.service-points.item.get", "inventory-storage.instances.item.get", "circulation.rules.loan-policy.get", "configuration.entries.collection.get", "patron-notice.post", "users.item.get", "templates.item.get", "pubsub.publish.post", "circulation-storage.circulation-rules.get", "circulation.rules.notice-policy.get", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "accounts.item.get", "accounts.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/due-date-not-real-time-scheduled-notices-processing",
      "unit" : "minute",
      "delay" : "2",
      "modulePermissions" : [ "scheduled-notice-storage.scheduled-notices.collection.get", "scheduled-notice-storage.scheduled-notices.item.delete", "scheduled-notice-storage.scheduled-notices.item.put", "circulation-storage.loans.item.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.fixed-due-date-schedules.collection.get", "inventory-storage.items.item.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.material-types.item.get", "inventory-storage.holdings.item.get", "inventory-storage.loan-types.item.get", "inventory-storage.service-points.item.get", "inventory-storage.instances.item.get", "circulation.rules.loan-policy.get", "configuration.entries.collection.get", "patron-notice.post", "users.item.get", "templates.item.get", "pubsub.publish.post", "circulation-storage.circulation-rules.get", "circulation.rules.notice-policy.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/request-scheduled-notices-processing",
      "unit" : "minute",
      "delay" : "2",
      "modulePermissions" : [ "scheduled-notice-storage.scheduled-notices.collection.get", "scheduled-notice-storage.scheduled-notices.item.delete", "scheduled-notice-storage.scheduled-notices.item.put", "inventory-storage.items.item.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.material-types.item.get", "inventory-storage.holdings.item.get", "inventory-storage.loan-types.item.get", "inventory-storage.service-points.item.get", "inventory-storage.instances.item.get", "circulation-storage.loans.collection.get", "circulation-storage.requests.item.get", "patron-notice.post", "users.item.get", "usergroups.collection.get", "configuration.entries.collection.get", "pubsub.publish.post", "circulation-storage.circulation-rules.get", "circulation.rules.notice-policy.get", "templates.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/fee-fine-scheduled-notices-processing",
      "unit" : "minute",
      "delay" : "2",
      "modulePermissions" : [ "scheduled-notice-storage.scheduled-notices.item.get", "scheduled-notice-storage.scheduled-notices.collection.get", "scheduled-notice-storage.scheduled-notices.item.delete", "scheduled-notice-storage.scheduled-notices.item.put", "configuration.entries.item.get", "configuration.entries.collection.get", "patron-notice.post", "accounts.item.get", "accounts.collection.get", "feefineactions.item.get", "feefineactions.collection.get", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.circulation-rules.get", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.item.get", "inventory-storage.instances.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "users.item.get", "users.collection.get", "pubsub.publish.post", "templates.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/scheduled-anonymize-processing",
      "unit" : "minute",
      "delay" : "60",
      "modulePermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "circulation-storage.request-policies.item.get", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "circulation.rules.notice-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "inventory.items.collection.get", "users.item.get", "users.collection.get", "proxiesfor.collection.get", "configuration.entries.collection.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "patron-notice.post", "anonymize-storage-loans.post", "accounts.collection.get", "feefineactions.collection.get", "pubsub.publish.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/scheduled-age-to-lost",
      "unit" : "minute",
      "delay" : "30",
      "modulePermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.patron-notice-policies.collection.get", "circulation-storage.patron-notice-policies.item.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.collection.get", "inventory-storage.material-types.collection.get", "lost-item-fees-policies.item.get", "lost-item-fees-policies.collection.get", "pubsub.publish.post", "users.item.get", "users.collection.get", "scheduled-notice-storage.scheduled-notices.item.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/scheduled-age-to-lost-fee-charging",
      "unit" : "minute",
      "delay" : "35",
      "modulePermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.collection.get", "inventory-storage.material-types.collection.get", "lost-item-fees-policies.item.get", "lost-item-fees-policies.collection.get", "owners.collection.get", "feefines.collection.get", "accounts.item.post", "feefineactions.item.post", "pubsub.publish.post", "users.item.get", "users.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.patron-notice-policies.item.get", "circulation-storage.patron-notice-policies.collection.get", "circulation.rules.notice-policy.get", "inventory-storage.locations.item.get", "scheduled-notice-storage.scheduled-notices.item.post" ]
    } ]
  }, {
    "id" : "circulation-event-handlers",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/circulation/handlers/loan-related-fee-fine-closed",
      "permissionsRequired" : [ "pubsub.events.post" ],
      "modulePermissions" : [ "modperms.circulation.handlers.loan-related-fee-fine-closed.post" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant",
      "modulePermissions" : [ "pubsub.event-types.post", "pubsub.publishers.post", "pubsub.subscribers.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/_/tenant"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "circulation.requests.queue.reorder.collection.post",
    "displayName" : "circulation - reorder queue for an item",
    "description" : "change request positions in queue for an item"
  }, {
    "permissionName" : "circulation.check-out-by-barcode.post",
    "displayName" : "circulation - check out item by barcode",
    "description" : "check out an item using barcodes for item and loanee"
  }, {
    "permissionName" : "circulation.check-in-by-barcode.post",
    "displayName" : "circulation - checkin loan by barcode",
    "description" : "checkin a loan using barcodes for item and loanee"
  }, {
    "permissionName" : "circulation.renew-by-barcode.post",
    "displayName" : "circulation - renew loan by barcode",
    "description" : "renew a loan using barcodes for item and loanee"
  }, {
    "permissionName" : "circulation.renew-by-id.post",
    "displayName" : "circulation - renew loan using id",
    "description" : "renew a loan using IDs for item and loanee"
  }, {
    "permissionName" : "circulation.loans.collection.get",
    "displayName" : "circulation - get loan collection",
    "description" : "get loan collection"
  }, {
    "permissionName" : "circulation.loans.collection.delete",
    "displayName" : "circulation - delete entire loan collection",
    "description" : "delete entire loan collection"
  }, {
    "permissionName" : "circulation.loans.item.get",
    "displayName" : "circulation - get individual loan",
    "description" : "get individual loan"
  }, {
    "permissionName" : "circulation.loans.item.post",
    "displayName" : "circulation - create individual loan",
    "description" : "create individual loan"
  }, {
    "permissionName" : "circulation.loans.item.put",
    "displayName" : "circulation - modify loan",
    "description" : "modify individual loan"
  }, {
    "permissionName" : "circulation.loans.collection.anonymize.user.post",
    "displayName" : "circulation - anonymize loans",
    "description" : "anonymize loans"
  }, {
    "permissionName" : "circulation.loans.item.delete",
    "displayName" : "circulation - delete individual loan",
    "description" : "delete individual loan"
  }, {
    "permissionName" : "circulation.loans.declare-item-lost.post",
    "displayName" : "circulation - declare the loaned item lost",
    "description" : "declares the loaned item lost"
  }, {
    "permissionName" : "circulation.loans.change-due-date.post",
    "displayName" : "circulation - change loan due date",
    "description" : "changes the due date of the loan"
  }, {
    "permissionName" : "circulation.loans.claim-item-returned.post",
    "displayName" : "circulation - declare the loaned item as claimed returned",
    "description" : "declares the loaned item as claimed returned"
  }, {
    "permissionName" : "circulation.loans.declare-claimed-returned-item-as-missing.post",
    "displayName" : "circulation -  declare the claimed returned loaned item as missing",
    "description" : "declare the claimed returned loaned item as missing"
  }, {
    "permissionName" : "circulation.rules.get",
    "displayName" : "Circulation - get circulation rules",
    "description" : "Get circulation rules"
  }, {
    "permissionName" : "circulation.rules.put",
    "displayName" : "Circulation - modify circulation rules",
    "description" : "Modify circulation rules"
  }, {
    "permissionName" : "circulation.rules.loan-policy.get",
    "displayName" : "Circulation - use circulation rules to get matching loan policy",
    "description" : "Apply circulation rules to get matching loan policy"
  }, {
    "permissionName" : "circulation.rules.loan-policy-all.get",
    "displayName" : "Circulation - use circulation rules to get all matching loan policies",
    "description" : "Apply circulation rules to get all matching loan policies"
  }, {
    "permissionName" : "circulation.rules.request-policy.get",
    "displayName" : "Circulation - use circulation rules to get matching request policy",
    "description" : "Apply circulation rules to get matching request policy"
  }, {
    "permissionName" : "circulation.rules.request-policy-all.get",
    "displayName" : "Circulation - use circulation rules to get all matching request policies",
    "description" : "Apply circulation rules to get all matching request policies"
  }, {
    "permissionName" : "circulation.rules.notice-policy.get",
    "displayName" : "Circulation - use circulation rules to get matching notice policy",
    "description" : "Apply circulation rules to get matching notice policy"
  }, {
    "permissionName" : "circulation.rules.notice-policy-all.get",
    "displayName" : "Circulation - use circulation rules to get all matching notice policies",
    "description" : "Apply circulation rules to get all matching notice policies"
  }, {
    "permissionName" : "circulation.requests.collection.get",
    "displayName" : "circulation - get request collection",
    "description" : "get request collection"
  }, {
    "permissionName" : "circulation.requests.collection.delete",
    "displayName" : "circulation - delete entire request collection",
    "description" : "delete entire request collection"
  }, {
    "permissionName" : "circulation.requests.item.get",
    "displayName" : "circulation - get individual request",
    "description" : "get individual request"
  }, {
    "permissionName" : "circulation.requests.item.post",
    "displayName" : "circulation - create individual requests",
    "description" : "create individual request"
  }, {
    "permissionName" : "circulation.requests.item.put",
    "displayName" : "circulation - modify request",
    "description" : "modify individual request"
  }, {
    "permissionName" : "circulation.requests.item.delete",
    "displayName" : "circulation - delete individual request",
    "description" : "delete individual request"
  }, {
    "permissionName" : "circulation.requests.item.move.post",
    "displayName" : "circulation - move individual requests to another item",
    "description" : "move individual request to another item"
  }, {
    "permissionName" : "circulation.requests.queue.collection.get",
    "displayName" : "circulation - request queue for an item",
    "description" : "get request queue for an item"
  }, {
    "permissionName" : "circulation.requests.instances.item.post",
    "displayName" : "circulation - create instance level request",
    "description" : "create a request given an instance"
  }, {
    "permissionName" : "circulation.requests.hold-shelf-clearance-report.get",
    "displayName" : "circulation - request hold shelf clearance report",
    "description" : "get all hold shelf clearance requests to generating a report"
  }, {
    "permissionName" : "circulation.inventory.items-in-transit-report.get",
    "displayName" : "circulation - items in transit report",
    "description" : "get all items in transit to generating a report"
  }, {
    "permissionName" : "circulation.pick-slips.get",
    "displayName" : "circulation - pick slips",
    "description" : "get items for pick slips generation"
  }, {
    "permissionName" : "circulation.end-patron-action-session.post",
    "displayName" : "circulation - end patron action session",
    "description" : "end patron action session"
  }, {
    "permissionName" : "circulation.all",
    "displayName" : "circulation - all permissions",
    "description" : "Entire set of permissions needed to use the circulation",
    "subPermissions" : [ "circulation.check-out-by-barcode.post", "circulation.check-in-by-barcode.post", "circulation.renew-by-barcode.post", "circulation.renew-by-id.post", "circulation.loans.collection.get", "circulation.loans.item.get", "circulation.loans.item.post", "circulation.loans.item.put", "circulation.loans.item.delete", "circulation.loans.collection.delete", "circulation.loans.change-due-date.post", "circulation.loans.claim-item-returned.post", "circulation.loans.declare-claimed-returned-item-as-missing.post", "circulation.rules.put", "circulation.rules.get", "circulation.rules.loan-policy.get", "circulation.rules.loan-policy-all.get", "circulation.rules.request-policy.get", "circulation.rules.request-policy-all.get", "circulation.rules.notice-policy.get", "circulation.rules.notice-policy-all.get", "circulation.requests.collection.get", "circulation.requests.item.get", "circulation.requests.item.post", "circulation.requests.item.put", "circulation.requests.item.delete", "circulation.requests.item.move.post", "circulation.requests.collection.delete", "circulation.requests.queue.collection.get", "circulation.requests.queue.reorder.collection.post", "circulation.requests.instances.item.post", "circulation.requests.hold-shelf-clearance-report.get", "circulation.inventory.items-in-transit-report.get", "circulation.pick-slips.get" ]
  }, {
    "permissionName" : "modperms.circulation.requests.hold-shelf-clearance-report.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "users.collection.get", "users.item.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.handlers.loan-related-fee-fine-closed.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "inventory-storage.holdings.item.get", "inventory-storage.instances.item.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.service-points.item.get", "inventory-storage.material-types.item.get", "inventory-storage.loan-types.item.get", "inventory-storage.service-points.item.get", "lost-item-fees-policies.item.get", "accounts.collection.get", "users.item.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.item.move.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.requests.item.put", "circulation-storage.requests.item.post", "circulation-storage.request-batch.item.post", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.get", "circulation-storage.request-policies.item.get", "circulation-storage.loans.item.put", "circulation-storage.loans.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.patron-notice-policies.item.get", "circulation-storage.cancellation-reasons.item.get", "circulation.rules.notice-policy.get", "circulation.internal.apply-rules", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "proxiesfor.collection.get", "patron-notice.post", "configuration.entries.collection.get", "calendar.opening-hours.collection.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.check-out-by-barcode.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "calendar.opening-hours.collection.get", "circulation-storage.loans.item.post", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.request-batch.item.post", "circulation-storage.request-policies.item.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation.rules.overdue-fine-policy.get", "circulation.rules.lost-item-policy.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "proxiesfor.collection.get", "configuration.entries.collection.get", "scheduled-notice-storage.scheduled-notices.item.post", "patron-action-session-storage.patron-action-sessions.item.post", "overdue-fines-policies.item.get", "overdue-fines-policies.collection.get", "lost-item-fees-policies.item.get", "lost-item-fees-policies.collection.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.check-in-by-barcode.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "circulation-storage.request-policies.item.get", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.notice-policy.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "addresstypes.item.get", "proxiesfor.collection.get", "patron-notice.post", "patron-action-session-storage.patron-action-sessions.item.post", "feefines.collection.get", "feefines.item.post", "feefineactions.collection.get", "feefineactions.item.post", "owners.collection.get", "check-in-storage.check-ins.item.post", "overdue-fines-policies.item.get", "lost-item-fees-policies.item.get", "accounts.item.put", "accounts.collection.get", "accounts.item.post", "pubsub.publish.post", "scheduled-notice-storage.scheduled-notices.item.delete", "accounts.refund.post", "accounts.cancel.post", "configuration.entries.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "circulation.renew-loan",
    "displayName" : "Renew a loan",
    "description" : "Permissions needed to renew a loan",
    "subPermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "circulation-storage.request-policies.item.get", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "circulation.rules.notice-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "proxiesfor.collection.get", "calendar.opening-hours.collection.get", "configuration.entries.collection.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "patron-notice.post", "feefines.collection.get", "feefines.item.post", "feefineactions.item.post", "owners.collection.get", "accounts.item.post", "pubsub.publish.post", "automated-patron-blocks.collection.get", "scheduled-notice-storage.scheduled-notices.item.delete", "overdue-fines-policies.item.get", "lost-item-fees-policies.item.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.anonymize",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.request-policies.item.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "proxiesfor.collection.get", "configuration.entries.collection.get", "circulation.rules.notice-policy.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "patron-notice.post", "anonymize-storage-loans.post", "feefineactions.collection.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.item.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.post", "circulation-storage.loans.item.get", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "circulation-storage.request-policies.item.get", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "proxiesfor.collection.get", "inventory-storage.material-types.item.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.collection.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.collection.get", "users.item.get", "inventory-storage.locations.collection.get", "accounts.collection.get", "usergroups.collection.get", "usergroups.item.get", "feefineactions.collection.get", "feefineactions.item.get", "overdue-fines-policies.collection.get", "lost-item-fees-policies.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.item.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "accounts.collection.get", "usergroups.collection.get", "usergroups.item.get", "overdue-fines-policies.collection.get", "lost-item-fees-policies.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.collection.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "inventory-storage.items.collection.get", "inventory-storage.items.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "inventory-storage.location-units.libraries.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.item.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "circulation-storage.loan-policies.item.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.item.post", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.get", "circulation-storage.requests.item.put", "circulation-storage.request-policies.item.get", "circulation-storage.request-batch.item.post", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.loan-policy.get", "circulation.rules.notice-policy.get", "circulation.rules.request-policy.get", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.items.item.put", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "proxiesfor.collection.get", "patron-notice.post", "calendar.opening-hours.collection.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "configuration.entries.collection.get", "manualblocks.collection.get", "pubsub.publish.post", "automated-patron-blocks.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.item.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "inventory-storage.items.collection.get", "inventory-storage.items.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "inventory-storage.location-units.libraries.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.item.delete",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "inventory-storage.items.collection.get", "inventory-storage.items.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "inventory-storage.location-units.libraries.collection.get", "circulation-storage.requests.item.delete", "circulation-storage.request-batch.item.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.item.put",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "calendar.opening-hours.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "circulation-storage.loans.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.item.put", "circulation-storage.requests.item.post", "circulation-storage.request-batch.item.post", "circulation-storage.request-policies.item.get", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.get", "circulation-storage.patron-notice-policies.item.get", "circulation-storage.cancellation-reasons.item.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "circulation.rules.notice-policy.get", "inventory-storage.items.item.put", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "proxiesfor.collection.get", "patron-notice.post", "configuration.entries.collection.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.queue.collection.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "inventory-storage.items.collection.get", "inventory-storage.items.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.queue.reorder.collection.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.requests.item.get", "circulation-storage.request-batch.item.post", "circulation-storage.requests.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "inventory-storage.items.collection.get", "inventory-storage.items.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.requests.instances.item.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loan-policies.item.get", "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "circulation-storage.loans.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.requests.item.post", "circulation-storage.requests.item.put", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.get", "circulation-storage.request-batch.item.post", "circulation-storage.request-policies.item.get", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "circulation.rules.notice-policy.get", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.loan-types.item.get", "users.item.get", "users.collection.get", "usergroups.collection.get", "usergroups.item.get", "proxiesfor.collection.get", "patron-notice.post", "calendar.opening-hours.collection.get", "configuration.entries.collection.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "manualblocks.collection.get", "automated-patron-blocks.collection.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.declare-item-lost.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "inventory-storage.holdings.item.get", "inventory-storage.instances.item.get", "inventory-storage.locations.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.service-points.item.get", "inventory-storage.material-types.item.get", "inventory-storage.loan-types.item.get", "inventory-storage.service-points.item.get", "lost-item-fees-policies.item.get", "owners.collection.get", "feefines.collection.get", "accounts.item.post", "users.item.get", "feefineactions.item.post", "pubsub.publish.post", "note.types.collection.get", "notes.item.post", "notes.domain.all" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.change-due-date.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation.rules.loan-policy.get", "circulation.rules.notice-policy.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "circulation-storage.patron-notice-policies.item.get", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "users.item.get", "pubsub.publish.post", "patron-notice.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.claim-item-returned.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "inventory-storage.holdings.item.get", "inventory-storage.instances.item.get", "users.item.get", "notes.collection.get", "notes.item.post", "note.types.collection.get", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.declare-claimed-returned-item-as-missing.post",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.get", "circulation-storage.loans.item.put", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "inventory-storage.holdings.item.get", "inventory-storage.instances.item.get", "users.item.get", "notes.item.post", "note.types.collection.get", "notes.domain.all", "pubsub.publish.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.loans.item.put",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "circulation-storage.loans.item.put", "circulation-storage.loans.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.request-policies.item.get", "circulation-storage.requests.item.put", "circulation-storage.requests.collection.get", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.patron-notice-policies.item.get", "circulation.rules.loan-policy.get", "circulation.rules.request-policy.get", "circulation.rules.notice-policy.get", "inventory-storage.items.item.get", "inventory-storage.items.item.put", "inventory-storage.items.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "proxiesfor.collection.get", "proxiesfor.collection.get", "users.item.get", "scheduled-notice-storage.scheduled-notices.collection.delete", "scheduled-notice-storage.scheduled-notices.item.post", "pubsub.publish.post", "configuration.entries.collection.get", "patron-notice.post" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.inventory.items-in-transit-report.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.locations.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get" ],
    "visible" : false
  }, {
    "permissionName" : "modperms.circulation.pick-slips.get",
    "displayName" : "module permissions for one op",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.item.get", "inventory-storage.instances.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.institutions.collection.get", "circulation-storage.requests.item.get", "circulation-storage.requests.collection.get", "users.item.get", "users.collection.get", "addresstypes.item.get", "addresstypes.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "circulation.internal.apply-rules",
    "displayName" : "Apply circulation rules",
    "description" : "Internal permission set for applying circulation rules",
    "subPermissions" : [ "circulation.rules.loan-policy.get", "circulation-storage.loan-policies.collection.get", "circulation-storage.loan-policies.item.get", "circulation.rules.request-policy.get", "circulation-storage.request-policies.item.get", "circulation-storage.request-policies.collection.get", "circulation.rules.notice-policy.get", "circulation-storage.patron-notice-policies.item.get", "circulation-storage.patron-notice-policies.collection.get" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-circulation:22.1.0-SNAPSHOT.877",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "SCHEDULED_ANONYMIZATION_NUMBER_OF_LOANS_TO_CHECK",
      "value" : "50000"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 1073741824,
        "PortBindings" : {
          "9801/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-circulation-22.1.0-SNAPSHOT.877] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:20:49 GMT
Content-Type: text/plain
Content-Length: 52
Connection: keep-alive
vary: origin

Duplicate instId mod-circulation-22.1.0-SNAPSHOT.877
------------------ [mod-circulation-22.1.0-SNAPSHOT.877] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:20:49 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-circulation-22.1.0-SNAPSHOT.877] Enabling module for tenant ------------------
[{"id":"mod-circulation-22.1.0-SNAPSHOT.877","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 504 Gateway Time-out
Date: Tue, 24 Aug 2021 18:21:49 GMT
Content-Type: text/html
Content-Length: 160
Connection: keep-alive

<html>
<head><title>504 Gateway Time-out</title></head>
<body>
<center><h1>504 Gateway Time-out</h1></center>
<hr><center>nginx</center>
</body>
</html>

Done!
------------------ [mod-circulation-storage] Getting descriptor ------------------
------------------ [mod-circulation-storage-13.1.0-SNAPSHOT.289] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:21:54 GMT
Content-Type: application/json
Content-Length: 37103
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-circulation-storage-13.1.0-SNAPSHOT.289
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 45035us

{
  "id" : "mod-circulation-storage-13.1.0-SNAPSHOT.289",
  "name" : "Circulation Storage Module",
  "requires" : [ {
    "id" : "pubsub-event-types",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publishers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-subscribers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publish",
    "version" : "0.1"
  } ],
  "provides" : [ {
    "id" : "request-storage-batch",
    "version" : "0.3",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/request-storage-batch/requests",
      "permissionsRequired" : [ "circulation-storage.request-batch.item.post" ]
    } ]
  }, {
    "id" : "loan-storage",
    "version" : "7.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-storage/loans",
      "permissionsRequired" : [ "circulation-storage.loans.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-storage/loans/{id}",
      "permissionsRequired" : [ "circulation-storage.loans.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/loan-storage/loans",
      "permissionsRequired" : [ "circulation-storage.loans.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/loan-storage/loans/{id}",
      "permissionsRequired" : [ "circulation-storage.loans.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/loan-storage/loans/{id}",
      "permissionsRequired" : [ "circulation-storage.loans.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/loan-storage/loans",
      "permissionsRequired" : [ "circulation-storage.loans.collection.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-storage/loan-history",
      "permissionsRequired" : [ "circulation-storage.loans-history.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/loan-storage/loans/anonymize/{userId}",
      "permissionsRequired" : [ "circulation-storage.loans.collection.anonymize.user.post" ]
    } ]
  }, {
    "id" : "anonymize-storage-loans",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/anonymize-storage-loans",
      "permissionsRequired" : [ "anonymize-storage-loans.post" ]
    } ]
  }, {
    "id" : "circulation-rules-storage",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/circulation-rules-storage",
      "permissionsRequired" : [ "circulation-storage.circulation-rules.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/circulation-rules-storage",
      "permissionsRequired" : [ "circulation-storage.circulation-rules.put" ]
    } ]
  }, {
    "id" : "loan-policy-storage",
    "version" : "2.3",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-policy-storage/loan-policies",
      "permissionsRequired" : [ "circulation-storage.loan-policies.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-policy-storage/loan-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.loan-policies.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/loan-policy-storage/loan-policies",
      "permissionsRequired" : [ "circulation-storage.loan-policies.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/loan-policy-storage/loan-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.loan-policies.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/loan-policy-storage/loan-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.loan-policies.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/loan-policy-storage/loan-policies",
      "permissionsRequired" : [ "circulation-storage.loan-policies.collection.delete" ]
    } ]
  }, {
    "id" : "request-storage",
    "version" : "3.4",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/request-storage/requests",
      "permissionsRequired" : [ "circulation-storage.requests.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/request-storage/requests/{id}",
      "permissionsRequired" : [ "circulation-storage.requests.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/request-storage/requests",
      "permissionsRequired" : [ "circulation-storage.requests.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/request-storage/requests/{id}",
      "permissionsRequired" : [ "circulation-storage.requests.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/request-storage/requests/{id}",
      "permissionsRequired" : [ "circulation-storage.requests.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/request-storage/requests",
      "permissionsRequired" : [ "circulation-storage.requests.collection.delete" ]
    } ]
  }, {
    "id" : "fixed-due-date-schedules-storage",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
      "permissionsRequired" : [ "circulation-storage.fixed-due-date-schedules.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
      "permissionsRequired" : [ "circulation-storage.fixed-due-date-schedules.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
      "permissionsRequired" : [ "circulation-storage.fixed-due-date-schedules.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
      "permissionsRequired" : [ "circulation-storage.fixed-due-date-schedules.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/fixed-due-date-schedule-storage/fixed-due-date-schedules/{id}",
      "permissionsRequired" : [ "circulation-storage.fixed-due-date-schedules.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/fixed-due-date-schedule-storage/fixed-due-date-schedules",
      "permissionsRequired" : [ "circulation-storage.fixed-due-date-schedules.collection.delete" ]
    } ]
  }, {
    "id" : "staff-slips-storage",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/staff-slips-storage/staff-slips",
      "permissionsRequired" : [ "circulation-storage.staff-slips.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/staff-slips-storage/staff-slips",
      "permissionsRequired" : [ "circulation-storage.staff-slips.item.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/staff-slips-storage/staff-slips",
      "permissionsRequired" : [ "circulation-storage.staff-slips.collection.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/staff-slips-storage/staff-slips/{id}",
      "permissionsRequired" : [ "circulation-storage.staff-slips.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/staff-slips-storage/staff-slips/{id}",
      "permissionsRequired" : [ "circulation-storage.staff-slips.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/staff-slips-storage/staff-slips/{id}",
      "permissionsRequired" : [ "circulation-storage.staff-slips.item.delete" ]
    } ]
  }, {
    "id" : "cancellation-reason-storage",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/cancellation-reason-storage/cancellation-reasons",
      "permissionsRequired" : [ "circulation-storage.cancellation-reasons.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/cancellation-reason-storage/cancellation-reasons/{id}",
      "permissionsRequired" : [ "circulation-storage.cancellation-reasons.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/cancellation-reason-storage/cancellation-reasons",
      "permissionsRequired" : [ "circulation-storage.cancellation-reasons.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/cancellation-reason-storage/cancellation-reasons/{id}",
      "permissionsRequired" : [ "circulation-storage.cancellation-reasons.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/cancellation-reason-storage/cancellation-reasons",
      "permissionsRequired" : [ "circulation-storage.cancellation-reasons.collection.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/cancellation-reason-storage/cancellation-reasons/{id}",
      "permissionsRequired" : [ "circulation-storage.cancellation-reasons.item.delete" ]
    } ]
  }, {
    "id" : "patron-notice-policy-storage",
    "version" : "0.13",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/patron-notice-policy-storage/patron-notice-policies",
      "permissionsRequired" : [ "circulation-storage.patron-notice-policies.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/patron-notice-policy-storage/patron-notice-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.patron-notice-policies.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/patron-notice-policy-storage/patron-notice-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.patron-notice-policies.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-notice-policy-storage/patron-notice-policies",
      "permissionsRequired" : [ "circulation-storage.patron-notice-policies.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-notice-policy-storage/patron-notice-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.patron-notice-policies.item.get" ]
    } ]
  }, {
    "id" : "request-policy-storage",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/request-policy-storage/request-policies",
      "permissionsRequired" : [ "circulation-storage.request-policies.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/request-policy-storage/request-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.request-policies.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/request-policy-storage/request-policies",
      "permissionsRequired" : [ "circulation-storage.request-policies.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/request-policy-storage/request-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.request-policies.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/request-policy-storage/request-policies/{id}",
      "permissionsRequired" : [ "circulation-storage.request-policies.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/request-policy-storage/request-policies",
      "permissionsRequired" : [ "circulation-storage.request-policies.collection.delete" ]
    } ]
  }, {
    "id" : "request-preference-storage",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/request-preference-storage/request-preference",
      "permissionsRequired" : [ "circulation-storage.request-preferences.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/request-preference-storage/request-preference/{id}",
      "permissionsRequired" : [ "circulation-storage.request-preferences.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/request-preference-storage/request-preference/{id}",
      "permissionsRequired" : [ "circulation-storage.request-preferences.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/request-preference-storage/request-preference",
      "permissionsRequired" : [ "circulation-storage.request-preferences.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/request-preference-storage/request-preference/{id}",
      "permissionsRequired" : [ "circulation-storage.request-preferences.item.get" ]
    } ]
  }, {
    "id" : "scheduled-notice-storage",
    "version" : "0.4",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/scheduled-notice-storage/scheduled-notices",
      "permissionsRequired" : [ "scheduled-notice-storage.scheduled-notices.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/scheduled-notice-storage/scheduled-notices/{id}",
      "permissionsRequired" : [ "scheduled-notice-storage.scheduled-notices.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/scheduled-notice-storage/scheduled-notices",
      "permissionsRequired" : [ "scheduled-notice-storage.scheduled-notices.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/scheduled-notice-storage/scheduled-notices/{id}",
      "permissionsRequired" : [ "scheduled-notice-storage.scheduled-notices.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/scheduled-notice-storage/scheduled-notices",
      "permissionsRequired" : [ "scheduled-notice-storage.scheduled-notices.collection.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/scheduled-notice-storage/scheduled-notices/{id}",
      "permissionsRequired" : [ "scheduled-notice-storage.scheduled-notices.item.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant",
      "modulePermissions" : [ "pubsub.event-types.post", "pubsub.publishers.post", "pubsub.subscribers.post" ]
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "patron-action-session-storage",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-action-session-storage/patron-action-sessions",
      "permissionsRequired" : [ "patron-action-session-storage.patron-action-sessions.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-action-session-storage/patron-action-sessions/{id}",
      "permissionsRequired" : [ "patron-action-session-storage.patron-action-sessions.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/patron-action-session-storage/patron-action-sessions",
      "permissionsRequired" : [ "patron-action-session-storage.patron-action-sessions.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/patron-action-session-storage/patron-action-sessions/{id}",
      "permissionsRequired" : [ "patron-action-session-storage.patron-action-sessions.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/patron-action-session-storage/patron-action-sessions/{id}",
      "permissionsRequired" : [ "patron-action-session-storage.patron-action-sessions.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-action-session-storage/expired-session-patron-ids",
      "permissionsRequired" : [ "patron-action-session-storage.expired-session-patron-ids.collection.get" ]
    } ]
  }, {
    "id" : "check-in-storage",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/check-in-storage/check-ins",
      "permissionsRequired" : [ "check-in-storage.check-ins.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/check-in-storage/check-ins",
      "permissionsRequired" : [ "check-in-storage.check-ins.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/check-in-storage/check-ins/{id}",
      "permissionsRequired" : [ "check-in-storage.check-ins.item.get" ]
    } ]
  }, {
    "id" : "_timer",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/scheduled-request-expiration",
      "unit" : "minute",
      "delay" : "2",
      "modulePermissions" : [ "pubsub.publish.post" ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "check-in-storage.check-ins.collection.get",
    "displayName" : "Check-in storage - get check-ins collection",
    "description" : "Get check-ins collection from storage"
  }, {
    "permissionName" : "check-in-storage.check-ins.item.post",
    "displayName" : "Check-in storage - create a check-in record",
    "description" : "Create a check-in record"
  }, {
    "permissionName" : "check-in-storage.check-ins.item.get",
    "displayName" : "Check-in storage - get a check-in record by id",
    "description" : "Get individual check-in by id"
  }, {
    "permissionName" : "circulation-storage.loans.collection.get",
    "displayName" : "Circulation storage - get loan collection",
    "description" : "Get loan collection from storage"
  }, {
    "permissionName" : "circulation-storage.loans.collection.delete",
    "displayName" : "Circulation storage - delete entire loan collection",
    "description" : "Delete entire loan collection from storage"
  }, {
    "permissionName" : "circulation-storage.loans.item.get",
    "displayName" : "Circulation storage - get individual loan",
    "description" : "Get individual loan from storage"
  }, {
    "permissionName" : "circulation-storage.loans.item.post",
    "displayName" : "Circulation storage - create individual loan",
    "description" : "Create individual loan in storage"
  }, {
    "permissionName" : "circulation-storage.loans.item.put",
    "displayName" : "Circulation storage - modify loan",
    "description" : "Modify loan in storage"
  }, {
    "permissionName" : "circulation-storage.loans.item.delete",
    "displayName" : "Circulation storage - delete individual loan",
    "description" : "Delete individual loan from storage"
  }, {
    "permissionName" : "circulation-storage.loans.collection.anonymize.user.post",
    "displayName" : "Circulation storage - anonymize loans for a user",
    "description" : "Anonymize closed loans for a single user"
  }, {
    "permissionName" : "anonymize-storage-loans.post",
    "displayName" : "circulation - anonymize loans",
    "description" : "anonymize a list of loans"
  }, {
    "permissionName" : "circulation-storage.circulation-rules.get",
    "displayName" : "Circulation storage - get circulation rules",
    "description" : "Get circulation rules from storage"
  }, {
    "permissionName" : "circulation-storage.circulation-rules.put",
    "displayName" : "Circulation storage - modify circulation rules",
    "description" : "Modify circulation rules in storage"
  }, {
    "permissionName" : "circulation-storage.loan-policies.collection.get",
    "displayName" : "Circulation storage - get loan policy collection",
    "description" : "Get loan policy collection from storage"
  }, {
    "permissionName" : "circulation-storage.loan-policies.collection.delete",
    "displayName" : "Circulation storage - delete entire loan collection",
    "description" : "Delete entire loan collection from storage"
  }, {
    "permissionName" : "circulation-storage.loan-policies.item.get",
    "displayName" : "Circulation storage - get individual loan policy",
    "description" : "Get individual loan policy from storage"
  }, {
    "permissionName" : "circulation-storage.loan-policies.item.post",
    "displayName" : "Circulation storage - create individual loan policy",
    "description" : "Create individual loan policy in storage"
  }, {
    "permissionName" : "circulation-storage.loan-policies.item.put",
    "displayName" : "Circulation storage - modify loan policy",
    "description" : "Modify loan policy in storage"
  }, {
    "permissionName" : "circulation-storage.loan-policies.item.delete",
    "displayName" : "Circulation storage - delete individual loan policy",
    "description" : "Delete individual loan policy from storage"
  }, {
    "permissionName" : "circulation-storage.loans-history.collection.get",
    "displayName" : "Circulation storage - get loan history collection",
    "description" : "Get loan history collection from storage"
  }, {
    "permissionName" : "circulation-storage.requests.collection.get",
    "displayName" : "Circulation storage - get request collection",
    "description" : "Get request collection from storage"
  }, {
    "permissionName" : "circulation-storage.requests.collection.delete",
    "displayName" : "Circulation storage - delete entire request collection",
    "description" : "Delete entire request collection from storage"
  }, {
    "permissionName" : "circulation-storage.requests.item.get",
    "displayName" : "Circulation storage - get individual request",
    "description" : "Get individual request from storage"
  }, {
    "permissionName" : "circulation-storage.requests.item.post",
    "displayName" : "Circulation storage - create individual request",
    "description" : "Create individual request in storage"
  }, {
    "permissionName" : "circulation-storage.requests.item.put",
    "displayName" : "Circulation storage - modify request",
    "description" : "Modify request in storage"
  }, {
    "permissionName" : "circulation-storage.request-batch.item.post",
    "displayName" : "Circulation storage batch - modify requests",
    "description" : "Modify requests in storage"
  }, {
    "permissionName" : "circulation-storage.requests.item.delete",
    "displayName" : "Circulation storage - delete individual request",
    "description" : "Delete individual request from storage"
  }, {
    "permissionName" : "circulation-storage.fixed-due-date-schedules.collection.get",
    "displayName" : "Circulation storage - get fixed due date collection",
    "description" : "Get fixed due date collection from storage"
  }, {
    "permissionName" : "circulation-storage.fixed-due-date-schedules.item.get",
    "displayName" : "Circulation storage - get individual fixed due date",
    "description" : "Get individual fixed due date from storage"
  }, {
    "permissionName" : "circulation-storage.fixed-due-date-schedules.item.post",
    "displayName" : "Circulation storage - create individual fixed due date",
    "description" : "Create individual fixed due date from storage"
  }, {
    "permissionName" : "circulation-storage.fixed-due-date-schedules.item.put",
    "displayName" : "Circulation storage - modify individual fixed due date",
    "description" : "Modify individual fixed due date from storage"
  }, {
    "permissionName" : "circulation-storage.fixed-due-date-schedules.item.delete",
    "displayName" : "Circulation storage - delete individual fixed due date",
    "description" : "Delete individual fixed due date from storage"
  }, {
    "permissionName" : "circulation-storage.fixed-due-date-schedules.collection.delete",
    "displayName" : "Circulation storage - delete collection of fixed due date",
    "description" : "Delete collection of fixed due date from storage"
  }, {
    "permissionName" : "circulation-storage.staff-slips.collection.get",
    "displayName" : "Circulation storage - get staff slip collection from storage",
    "description" : "Get staff slip collection from storage"
  }, {
    "permissionName" : "circulation-storage.staff-slips.collection.delete",
    "displayName" : "Circulation storage - delete entire staff slipp collection",
    "description" : "Delete entire staff slip collection"
  }, {
    "permissionName" : "circulation-storage.staff-slips.item.post",
    "displayName" : "Circulation storage - create indavidual staff slip in storage",
    "description" : "Create individual staff slip in storage"
  }, {
    "permissionName" : "circulation-storage.staff-slips.item.get",
    "displayName" : "Circulation storage - get indavidual staff slip from storage",
    "description" : "Get individual staff slip from storage"
  }, {
    "permissionName" : "circulation-storage.staff-slips.item.delete",
    "displayName" : "Circulation storage - delete indavidual staff slip from storage",
    "description" : "Delete individual staff slip from storage"
  }, {
    "permissionName" : "circulation-storage.staff-slips.item.put",
    "displayName" : "Circulation storage - modify indavidual staff slip in storage",
    "description" : "Modify individual staff slip in storage"
  }, {
    "permissionName" : "circulation-storage.cancellation-reasons.collection.get",
    "displayName" : "Circulation storage - get cancellation reasons collection",
    "description" : "Get cancellation reasons from storage"
  }, {
    "permissionName" : "circulation-storage.cancellation-reasons.item.get",
    "displayName" : "Circulation storage - get individual cancellation reason",
    "description" : "Get individual cancellation reason by id"
  }, {
    "permissionName" : "circulation-storage.cancellation-reasons.item.post",
    "displayName" : "Circulation storage - create individual cancellation reason",
    "description" : "Create individual cancellation reason"
  }, {
    "permissionName" : "circulation-storage.cancellation-reasons.item.put",
    "displayName" : "Circulation storage - put individual cancellation reason",
    "description" : "Modify individual cancellation reason by id"
  }, {
    "permissionName" : "circulation-storage.cancellation-reasons.collection.delete",
    "displayName" : "Circulation storage - delete cancellation reasons",
    "description" : "Delete entire cancellation reasons collection"
  }, {
    "permissionName" : "circulation-storage.cancellation-reasons.item.delete",
    "displayName" : "Circulation storage - delete individual cancellation reason",
    "description" : "Delete individual cancellation reason by id"
  }, {
    "permissionName" : "circulation-storage.patron-notice-policies.item.post",
    "displayName" : "Circulation storage - post individual patron notice policy",
    "description" : "Post individual patron notice policy"
  }, {
    "permissionName" : "circulation-storage.patron-notice-policies.item.put",
    "displayName" : "Circulation storage - put individual patron notice policy",
    "description" : "Put individual patron notice policy by id"
  }, {
    "permissionName" : "circulation-storage.patron-notice-policies.item.delete",
    "displayName" : "Circulation storage - delete patron notice policy",
    "description" : "Delete patron notice policy by id"
  }, {
    "permissionName" : "circulation-storage.patron-notice-policies.collection.get",
    "displayName" : "Circulation storage - get patron notice policy collection",
    "description" : "Get patron notice policy collection from storage"
  }, {
    "permissionName" : "circulation-storage.patron-notice-policies.item.get",
    "displayName" : "Circulation storage - get individual patron notice policy",
    "description" : "Get individual patron notice policy by id"
  }, {
    "permissionName" : "circulation-storage.request-preferences.item.post",
    "displayName" : "Circulation storage - post individual request preference",
    "description" : "Post individual request preference"
  }, {
    "permissionName" : "circulation-storage.request-preferences.item.put",
    "displayName" : "Circulation storage - put individual request preference",
    "description" : "Put individual request preference by id"
  }, {
    "permissionName" : "circulation-storage.request-preferences.item.delete",
    "displayName" : "Circulation storage - delete request preference",
    "description" : "Delete request preference by id"
  }, {
    "permissionName" : "circulation-storage.request-preferences.collection.get",
    "displayName" : "Circulation storage - get request preference collection",
    "description" : "Get request preference collection from storage"
  }, {
    "permissionName" : "circulation-storage.request-preferences.item.get",
    "displayName" : "Circulation storage - get individual request preference",
    "description" : "Get individual request preference by id"
  }, {
    "permissionName" : "scheduled-notice-storage.scheduled-notices.collection.get",
    "displayName" : "Circulation storage - get scheduled notice collection",
    "description" : "Get scheduled notice collection from storage"
  }, {
    "permissionName" : "scheduled-notice-storage.scheduled-notices.item.get",
    "displayName" : "Circulation storage - get individual scheduled notice",
    "description" : "Get individual scheduled notice by id"
  }, {
    "permissionName" : "scheduled-notice-storage.scheduled-notices.item.post",
    "displayName" : "Circulation storage - post individual scheduled notice",
    "description" : "Create individual scheduled notice"
  }, {
    "permissionName" : "scheduled-notice-storage.scheduled-notices.item.put",
    "displayName" : "Circulation storage - put individual scheduled notice",
    "description" : "Put individual scheduled notice by id"
  }, {
    "permissionName" : "scheduled-notice-storage.scheduled-notices.item.delete",
    "displayName" : "Circulation storage - delete individual scheduled notice",
    "description" : "Delete individual scheduled notice by id"
  }, {
    "permissionName" : "scheduled-notice-storage.scheduled-notices.collection.delete",
    "displayName" : "Circulation storage - delete all scheduled notices",
    "description" : "Delete all scheduled notices from storage"
  }, {
    "permissionName" : "patron-action-session-storage.patron-action-sessions.collection.get",
    "displayName" : "Circulation storage - get patron action session collection",
    "description" : "Get patron action session collection from storage"
  }, {
    "permissionName" : "patron-action-session-storage.patron-action-sessions.item.get",
    "displayName" : "Circulation storage - get patron action session",
    "description" : "Get individual patron action session by id"
  }, {
    "permissionName" : "patron-action-session-storage.patron-action-sessions.item.post",
    "displayName" : "Circulation storage - post patron action session",
    "description" : "Create individual patron action session"
  }, {
    "permissionName" : "patron-action-session-storage.patron-action-sessions.item.put",
    "displayName" : "Circulation storage - put patron action session",
    "description" : "Put patron action session by id"
  }, {
    "permissionName" : "patron-action-session-storage.patron-action-sessions.item.delete",
    "displayName" : "Circulation storage - delete patron action session",
    "description" : "Delete patron action session by id"
  }, {
    "permissionName" : "circulation-storage.all",
    "displayName" : "Circulation storage module - all permissions",
    "description" : "Entire set of permissions needed to use the circulation storage module",
    "subPermissions" : [ "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "circulation-storage.loans.item.post", "circulation-storage.loans.item.put", "circulation-storage.loans.item.delete", "circulation-storage.loans.collection.delete", "circulation-storage.loans.collection.anonymize.user.post", "circulation-storage.loans-history.collection.get", "circulation-storage.circulation-rules.get", "circulation-storage.circulation-rules.put", "circulation-storage.loan-policies.collection.get", "circulation-storage.loan-policies.item.get", "circulation-storage.loan-policies.item.post", "circulation-storage.loan-policies.item.put", "circulation-storage.loan-policies.item.delete", "circulation-storage.loan-policies.collection.delete", "circulation-storage.requests.collection.get", "circulation-storage.requests.item.get", "circulation-storage.requests.item.post", "circulation-storage.requests.item.put", "circulation-storage.requests.item.delete", "circulation-storage.requests.collection.delete", "circulation-storage.fixed-due-date-schedules.collection.delete", "circulation-storage.fixed-due-date-schedules.item.delete", "circulation-storage.fixed-due-date-schedules.item.put", "circulation-storage.fixed-due-date-schedules.item.post", "circulation-storage.fixed-due-date-schedules.item.get", "circulation-storage.fixed-due-date-schedules.collection.get", "circulation-storage.staff-slips.item.delete", "circulation-storage.staff-slips.collection.delete", "circulation-storage.staff-slips.collection.get", "circulation-storage.staff-slips.item.post", "circulation-storage.staff-slips.item.put", "circulation-storage.staff-slips.item.get", "circulation-storage.cancellation-reasons.collection.get", "circulation-storage.cancellation-reasons.item.get", "circulation-storage.cancellation-reasons.item.post", "circulation-storage.cancellation-reasons.item.put", "circulation-storage.cancellation-reasons.collection.delete", "circulation-storage.cancellation-reasons.item.delete", "circulation-storage.patron-notice-policies.item.post", "circulation-storage.patron-notice-policies.item.put", "circulation-storage.patron-notice-policies.item.delete", "circulation-storage.patron-notice-policies.collection.get", "circulation-storage.patron-notice-policies.item.get", "circulation-storage.request-preferences.item.post", "circulation-storage.request-preferences.item.put", "circulation-storage.request-preferences.item.delete", "circulation-storage.request-preferences.collection.get", "circulation-storage.request-preferences.item.get", "circulation-storage.request-policies.collection.get", "circulation-storage.request-policies.item.get", "circulation-storage.request-policies.collection.delete", "circulation-storage.request-policies.item.delete", "circulation-storage.request-policies.item.post", "circulation-storage.request-policies.item.put", "circulation-storage.request-batch.item.post", "scheduled-notice-storage.scheduled-notices.collection.get", "scheduled-notice-storage.scheduled-notices.item.get", "scheduled-notice-storage.scheduled-notices.item.post", "scheduled-notice-storage.scheduled-notices.item.put", "scheduled-notice-storage.scheduled-notices.item.delete", "scheduled-notice-storage.scheduled-notices.collection.delete", "anonymize-storage-loans.post", "patron-action-session-storage.patron-action-sessions.collection.get", "patron-action-session-storage.patron-action-sessions.item.get", "patron-action-session-storage.patron-action-sessions.item.post", "patron-action-session-storage.patron-action-sessions.item.put", "patron-action-session-storage.patron-action-sessions.item.delete", "patron-action-session-storage.expired-session-patron-ids.collection.get", "check-in-storage.check-ins.collection.get", "check-in-storage.check-ins.item.post", "check-in-storage.check-ins.item.get" ]
  }, {
    "permissionName" : "circulation-storage.request-policies.collection.get",
    "displayName" : "Circulation storage - get request policy collection",
    "description" : "Get request policy collection from storage"
  }, {
    "permissionName" : "circulation-storage.request-policies.collection.delete",
    "displayName" : "Circulation storage - delete entire request policy collection",
    "description" : "Delete entire request policy collection from storage"
  }, {
    "permissionName" : "circulation-storage.request-policies.item.get",
    "displayName" : "Circulation storage - get individual request policy",
    "description" : "Get individual request policy from storage"
  }, {
    "permissionName" : "circulation-storage.request-policies.item.post",
    "displayName" : "Circulation storage - create individual request policy",
    "description" : "Create individual request policy in storage"
  }, {
    "permissionName" : "circulation-storage.request-policies.item.put",
    "displayName" : "Circulation storage - modify individual request policy",
    "description" : "Modify request policy in storage"
  }, {
    "permissionName" : "circulation-storage.request-policies.item.delete",
    "displayName" : "Circulation storage - delete individual request policy",
    "description" : "Delete individual request policy from storage"
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-circulation-storage:13.1.0-SNAPSHOT.289",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 536870912,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-circulation-storage-13.1.0-SNAPSHOT.289] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:21:54 GMT
Content-Type: text/plain
Content-Length: 60
Connection: keep-alive
vary: origin

Duplicate instId mod-circulation-storage-13.1.0-SNAPSHOT.289
------------------ [mod-circulation-storage-13.1.0-SNAPSHOT.289] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:21:54 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-circulation-storage-13.1.0-SNAPSHOT.289] Enabling module for tenant ------------------
[{"id":"mod-circulation-storage-13.1.0-SNAPSHOT.289","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:21:54 GMT
Content-Type: application/json
Content-Length: 87
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 71482us

[ {
  "id" : "mod-circulation-storage-13.1.0-SNAPSHOT.289",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-codex-inventory] Getting descriptor ------------------
------------------ [mod-codex-inventory-2.1.0-SNAPSHOT.89] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:21:59 GMT
Content-Type: application/json
Content-Length: 1288
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-codex-inventory-2.1.0-SNAPSHOT.89
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 46632us

{
  "id" : "mod-codex-inventory-2.1.0-SNAPSHOT.89",
  "name" : "Codex wrapper for Inventory",
  "requires" : [ {
    "id" : "instance-storage",
    "version" : "7.0 8.0"
  }, {
    "id" : "contributor-name-types",
    "version" : "1.0"
  }, {
    "id" : "instance-types",
    "version" : "1.0 2.0"
  }, {
    "id" : "instance-formats",
    "version" : "1.0 2.0"
  }, {
    "id" : "identifier-types",
    "version" : "1.0"
  }, {
    "id" : "locations",
    "version" : "2.1 3.0"
  } ],
  "provides" : [ {
    "id" : "codex",
    "version" : "3.2",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-instances",
      "permissionsRequired" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-instances/{id}",
      "permissionsRequired" : [ ]
    } ]
  } ],
  "permissionSets" : [ ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-codex-inventory:2.1.0-SNAPSHOT.89",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-codex-inventory-2.1.0-SNAPSHOT.89] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:21:59 GMT
Content-Type: text/plain
Content-Length: 54
Connection: keep-alive
vary: origin

Duplicate instId mod-codex-inventory-2.1.0-SNAPSHOT.89
------------------ [mod-codex-inventory-2.1.0-SNAPSHOT.89] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:21:59 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-codex-inventory-2.1.0-SNAPSHOT.89] Enabling module for tenant ------------------
[{"id":"mod-codex-inventory-2.1.0-SNAPSHOT.89","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:21:59 GMT
Content-Type: application/json
Content-Length: 81
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 66426us

[ {
  "id" : "mod-codex-inventory-2.1.0-SNAPSHOT.89",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-codex-mux] Getting descriptor ------------------
------------------ [mod-codex-mux-2.12.0-SNAPSHOT.104] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:22:04 GMT
Content-Type: application/json
Content-Length: 3855
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-codex-mux-2.12.0-SNAPSHOT.104
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 109937us

{
  "id" : "mod-codex-mux-2.12.0-SNAPSHOT.104",
  "name" : "Codex Multiplexer",
  "requires" : [ ],
  "provides" : [ {
    "id" : "codex",
    "version" : "3.3",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-instances",
      "permissionsRequired" : [ "codex-mux.instances.collection.get" ],
      "modulePermissions" : [ "codex-ekb.instances.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-instances/{id}",
      "permissionsRequired" : [ "codex-mux.instances.item.get" ],
      "modulePermissions" : [ "codex-ekb.instances.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-instances-sources",
      "permissionsRequired" : [ "codex-mux.instances-sources.collection.get" ],
      "modulePermissions" : [ "codex-ekb.instances-sources.collection.get" ]
    } ]
  }, {
    "id" : "codex-packages",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-packages",
      "permissionsRequired" : [ "codex-mux.packages.collection.get" ],
      "modulePermissions" : [ "codex-ekb.packages.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-packages/{id}",
      "permissionsRequired" : [ "codex-mux.packages.item.get" ],
      "modulePermissions" : [ "codex-ekb.packages.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/codex-packages-sources",
      "permissionsRequired" : [ "codex-mux.packages-sources.collection.get" ],
      "modulePermissions" : [ "codex-ekb.packages-sources.collection.get" ]
    } ]
  }, {
    "id" : "_jsonSchemas",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/jsonSchemas",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "_ramls",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/ramls",
      "permissionsRequired" : [ ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "codex-mux.instances.collection.get",
    "displayName" : "get codex instances",
    "description" : "Get codex instances"
  }, {
    "permissionName" : "codex-mux.instances.item.get",
    "displayName" : "get codex instance",
    "description" : "Get codex instance"
  }, {
    "permissionName" : "codex-mux.instances-sources.collection.get",
    "displayName" : "get codex instances sources",
    "description" : "Get codex instances sources"
  }, {
    "permissionName" : "codex-mux.packages.collection.get",
    "displayName" : "get codex packages",
    "description" : "Get codex packages"
  }, {
    "permissionName" : "codex-mux.packages.item.get",
    "displayName" : "get codex package",
    "description" : "Get codex package"
  }, {
    "permissionName" : "codex-mux.packages-sources.collection.get",
    "displayName" : "get codex package sources",
    "description" : "Get codex package sources"
  }, {
    "permissionName" : "codex-mux.all",
    "displayName" : "Codex Multiplexer - all permissions",
    "description" : "All permissions for Codex Multiplexer",
    "subPermissions" : [ "codex-mux.instances.collection.get", "codex-mux.instances.item.get", "codex-mux.instances-sources.collection.get", "codex-mux.packages.collection.get", "codex-mux.packages.item.get", "codex-mux.packages-sources.collection.get" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-codex-mux:2.12.0-SNAPSHOT.104",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-codex-mux-2.12.0-SNAPSHOT.104] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:22:04 GMT
Content-Type: text/plain
Content-Length: 50
Connection: keep-alive
vary: origin

Duplicate instId mod-codex-mux-2.12.0-SNAPSHOT.104
------------------ [mod-codex-mux-2.12.0-SNAPSHOT.104] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:22:04 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-codex-mux-2.12.0-SNAPSHOT.104] Enabling module for tenant ------------------
[{"id":"mod-codex-mux-2.12.0-SNAPSHOT.104","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:22:04 GMT
Content-Type: application/json
Content-Length: 77
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 43168us

[ {
  "id" : "mod-codex-mux-2.12.0-SNAPSHOT.104",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-configuration] Getting descriptor ------------------
------------------ [mod-configuration-5.8.0-SNAPSHOT.95] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:22:09 GMT
Content-Type: application/json
Content-Length: 4030
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-configuration-5.8.0-SNAPSHOT.95
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 31228us

{
  "id" : "mod-configuration-5.8.0-SNAPSHOT.95",
  "name" : "Configuration",
  "provides" : [ {
    "id" : "configuration",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/configurations/entries",
      "permissionsRequired" : [ "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/configurations/entries/{id}",
      "permissionsRequired" : [ "configuration.entries.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/configurations/entries",
      "permissionsRequired" : [ "configuration.entries.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/configurations/entries/{id}",
      "permissionsRequired" : [ "configuration.entries.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/configurations/entries/{id}",
      "permissionsRequired" : [ "configuration.entries.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/configurations/audit",
      "permissionsRequired" : [ "configuration.audit.collection.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "DELETE", "GET" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "configuration.entries.collection.get",
    "displayName" : "configuration - get configuration entries collection",
    "description" : "get configuration entries from storage"
  }, {
    "permissionName" : "configuration.entries.item.get",
    "displayName" : "configuration - get configuration entry",
    "description" : "get individual configuration entry from storage"
  }, {
    "permissionName" : "configuration.entries.item.post",
    "displayName" : "configuration - create configuration entry",
    "description" : "create individual configuration entry in storage"
  }, {
    "permissionName" : "configuration.entries.item.put",
    "displayName" : "configuration - modify configuration entry",
    "description" : "modify individual configuration entry in storage"
  }, {
    "permissionName" : "configuration.entries.item.delete",
    "displayName" : "configuration - delete configuration entry",
    "description" : "delete individual configuration entry in storage"
  }, {
    "permissionName" : "configuration.audit.collection.get",
    "displayName" : "configuration - get configuration audit entries collection",
    "description" : "get configuration audit entries from storage"
  }, {
    "permissionName" : "configuration.all",
    "displayName" : "configuration module - all permissions",
    "description" : "entire set of permissions needed to use the configuration module",
    "subPermissions" : [ "configuration.entries.collection.get", "configuration.entries.item.get", "configuration.entries.item.post", "configuration.entries.item.put", "configuration.entries.item.delete", "configuration.audit.collection.get" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-configuration:5.8.0-SNAPSHOT.95",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-configuration-5.8.0-SNAPSHOT.95] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:22:09 GMT
Content-Type: text/plain
Content-Length: 52
Connection: keep-alive
vary: origin

Duplicate instId mod-configuration-5.8.0-SNAPSHOT.95
------------------ [mod-configuration-5.8.0-SNAPSHOT.95] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:22:09 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-configuration-5.8.0-SNAPSHOT.95] Enabling module for tenant ------------------
[{"id":"mod-configuration-5.8.0-SNAPSHOT.95","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:22:09 GMT
Content-Type: application/json
Content-Length: 79
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 55817us

[ {
  "id" : "mod-configuration-5.8.0-SNAPSHOT.95",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-data-export] Getting descriptor ------------------
------------------ [mod-data-export-4.1.1-SNAPSHOT.253] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:22:14 GMT
Content-Type: application/json
Content-Length: 15788
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-data-export-4.1.1-SNAPSHOT.253
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 73770us

{
  "id" : "mod-data-export-4.1.1-SNAPSHOT.253",
  "name" : "Data Export Module",
  "requires" : [ {
    "id" : "source-storage-source-records",
    "version" : "3.0"
  }, {
    "id" : "users",
    "version" : "15.3"
  }, {
    "id" : "instance-storage",
    "version" : "7.7 8.0"
  }, {
    "id" : "holdings-storage",
    "version" : "4.5 5.0"
  }, {
    "id" : "item-storage",
    "version" : "8.9 9.0"
  }, {
    "id" : "nature-of-content-terms",
    "version" : "1.0"
  }, {
    "id" : "identifier-types",
    "version" : "1.2"
  }, {
    "id" : "contributor-name-types",
    "version" : "1.2"
  }, {
    "id" : "locations",
    "version" : "3.0"
  }, {
    "id" : "location-units",
    "version" : "2.0"
  }, {
    "id" : "material-types",
    "version" : "2.2"
  }, {
    "id" : "instance-types",
    "version" : "2.0"
  }, {
    "id" : "instance-formats",
    "version" : "2.0"
  }, {
    "id" : "configuration",
    "version" : "2.0"
  }, {
    "id" : "electronic-access-relationships",
    "version" : "1.0"
  }, {
    "id" : "modes-of-issuance",
    "version" : "1.1"
  }, {
    "id" : "holdings-note-types",
    "version" : "1.0"
  }, {
    "id" : "item-note-types",
    "version" : "1.0"
  }, {
    "id" : "call-number-types",
    "version" : "1.0"
  }, {
    "id" : "inventory-record-bulk",
    "version" : "1.0"
  } ],
  "provides" : [ {
    "id" : "data-export",
    "version" : "4.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/export",
      "permissionsRequired" : [ "data-export.export.post" ],
      "modulePermissions" : [ "users.item.get", "source-storage.sourceRecords.get", "inventory-storage.instances.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.items.collection.get", "configuration.entries.collection.get", "inventory-storage.nature-of-content-terms.collection.get", "inventory-storage.identifier-types.collection.get", "inventory-storage.contributor-name-types.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.loan-types.collection.get", "inventory-storage.material-types.collection.get", "inventory-storage.instance-types.collection.get", "inventory-storage.instance-formats.collection.get", "inventory-storage.electronic-access-relationships.collection.get", "inventory-storage.holdings-note-types.collection.get", "inventory-storage.item-note-types.collection.get", "inventory-storage.call-number-types.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/quick-export",
      "permissionsRequired" : [ "data-export.quick.export.post" ],
      "modulePermissions" : [ "users.item.get", "source-storage.sourceRecords.get", "inventory-storage.instances.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.items.collection.get", "configuration.entries.collection.get", "inventory-storage.nature-of-content-terms.collection.get", "inventory-storage.identifier-types.collection.get", "inventory-storage.contributor-name-types.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.loan-types.collection.get", "inventory-storage.material-types.collection.get", "inventory-storage.instance-types.collection.get", "inventory-storage.instance-formats.collection.get", "inventory-storage.electronic-access-relationships.collection.get", "inventory-storage.holdings-note-types.collection.get", "inventory-storage.item-note-types.collection.get", "inventory-storage.call-number-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/file-definitions/{fileDefinitionId}",
      "permissionsRequired" : [ "data-export.file-definitions.item.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/file-definitions",
      "permissionsRequired" : [ "data-export.file-definitions.item.post" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/file-definitions/{fileDefinitionId}/upload",
      "permissionsRequired" : [ "data-export.file-definitions.upload.post" ],
      "modulePermissions" : [ "inventory-storage.record-bulk.ids.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/job-executions",
      "permissionsRequired" : [ "data-export.job-executions.items.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/data-export/job-executions/{id}",
      "permissionsRequired" : [ "data-export.job-executions.item.delete" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/job-executions/{jobId}/download/{fileId}",
      "permissionsRequired" : [ "data-export.job-executions.items.download.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/job-profiles",
      "permissionsRequired" : [ "data-export.job-profiles.item.post" ],
      "modulePermissions" : [ "users.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/job-profiles",
      "permissionsRequired" : [ "data-export.job-profiles.collection.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/job-profiles/{jobProfileId}",
      "permissionsRequired" : [ "data-export.job-profiles.item.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/data-export/job-profiles/{jobProfileId}",
      "permissionsRequired" : [ "data-export.job-profiles.item.put" ],
      "modulePermissions" : [ "users.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/data-export/job-profiles/{jobProfileId}",
      "permissionsRequired" : [ "data-export.job-profiles.item.delete" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/mapping-profiles",
      "permissionsRequired" : [ "data-export.mapping-profiles.item.post" ],
      "modulePermissions" : [ "users.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/mapping-profiles",
      "permissionsRequired" : [ "data-export.mapping-profiles.collection.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/mapping-profiles/{mappingProfileId}",
      "permissionsRequired" : [ "data-export.mapping-profiles.item.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/data-export/mapping-profiles/{mappingProfileId}",
      "permissionsRequired" : [ "data-export.mapping-profiles.item.put" ],
      "modulePermissions" : [ "users.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/data-export/mapping-profiles/{mappingProfileId}",
      "permissionsRequired" : [ "data-export.mapping-profiles.item.delete" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/transformation-fields",
      "permissionsRequired" : [ "data-export.transformation-fields.collection.get" ],
      "modulePermissions" : [ "inventory-storage.identifier-types.collection.get", "inventory-storage.alternative-title-types.collection.get", "inventory-storage.contributor-name-types.collection.get", "inventory-storage.electronic-access-relationships.collection.get", "inventory-storage.instance-types.collection.get", "inventory-storage.modes-of-issuance.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/expire-jobs",
      "permissionsRequired" : [ "data-export.expire-jobs.post" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/data-export/logs",
      "permissionsRequired" : [ "data-export.logs.collection.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/clean-up-files",
      "permissionsRequired" : [ "data-export.clean-up-files.post" ],
      "modulePermissions" : [ ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "DELETE", "GET" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "_timer",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/expire-jobs",
      "unit" : "hour",
      "delay" : "6",
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/data-export/clean-up-files",
      "unit" : "hour",
      "delay" : "1",
      "modulePermissions" : [ ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "data-export.export.post",
    "displayName" : "Starts export process",
    "description" : "Entry point to start export for the given file definition using job profile"
  }, {
    "permissionName" : "data-export.quick.export.post",
    "displayName" : "Starts quick export process from inventory",
    "description" : "Entry point to start quick export process from inventory"
  }, {
    "permissionName" : "data-export.file-definitions.item.get",
    "displayName" : "Data Export - get file definition by id",
    "description" : "Entry point to get File Definition by id"
  }, {
    "permissionName" : "data-export.job-executions.collection.get",
    "displayName" : "Data Export - get job execution collection by query",
    "description" : "Entry point to get Job Executions by query"
  }, {
    "permissionName" : "data-export.job-executions.item.delete",
    "displayName" : "Data Export - delete job execution by Id",
    "description" : "Permission to delete Job Executions by Id"
  }, {
    "permissionName" : "data-export.file-definitions.upload.post",
    "displayName" : "Data Export - upload file",
    "description" : "Entry point to upload file"
  }, {
    "permissionName" : "data-export.file-definitions.item.post",
    "displayName" : "Data Export - create new file definition",
    "description" : "Entry point to post File Definition"
  }, {
    "permissionName" : "data-export.job-executions.items.download.get",
    "displayName" : "Data Export - get download link for job and a file",
    "description" : "Entry point to get link to download exported files"
  }, {
    "permissionName" : "data-export.job-profiles.item.post",
    "displayName" : "Data Export - create new job profile",
    "description" : "Entry point to post Job Profile"
  }, {
    "permissionName" : "data-export.job-profiles.collection.get",
    "displayName" : "Data Export - get job profiles collection by query",
    "description" : "Entry point to get Job Profiles by query"
  }, {
    "permissionName" : "data-export.job-profiles.item.get",
    "displayName" : "Data Export - get job profile by id",
    "description" : "Entry point to get Job Profiles by id"
  }, {
    "permissionName" : "data-export.job-profiles.item.put",
    "displayName" : "Data Export - update existing job profile by id",
    "description" : "Entry point to update Job Profile"
  }, {
    "permissionName" : "data-export.job-profiles.item.delete",
    "displayName" : "Data Export - delete job profile by id",
    "description" : "Entry point to delete Job Profile by id"
  }, {
    "permissionName" : "data-export.mapping-profiles.item.post",
    "displayName" : "Data Export - create new mapping profile",
    "description" : "Entry point to post Mapping Profile"
  }, {
    "permissionName" : "data-export.mapping-profiles.items.get",
    "displayName" : "Data Export - get mapping profiles collection by query",
    "description" : "Entry point to get Mapping Profiles by query"
  }, {
    "permissionName" : "data-export.mapping-profiles.item.get",
    "displayName" : "Data Export - get mapping profile by id",
    "description" : "Entry point to get Mapping Profiles by id"
  }, {
    "permissionName" : "data-export.mapping-profiles.item.put",
    "displayName" : "Data Export - update existing mapping profile by id",
    "description" : "Entry point to update Mapping Profile"
  }, {
    "permissionName" : "data-export.mapping-profiles.item.delete",
    "displayName" : "Data Export - delete mapping profile by id",
    "description" : "Entry point to delete Mapping Profile by id"
  }, {
    "permissionName" : "data-export.transformation-fields.collection.get",
    "displayName" : "Data Export - get mapping transformation fields collection",
    "description" : "Entry point to get mapping transformation fields for the fields"
  }, {
    "permissionName" : "data-export.expire-jobs.post",
    "displayName" : "Data Export - call to expire hung jobs",
    "description" : "Entry point to stop freezing job executions"
  }, {
    "permissionName" : "data-export.logs.collection.get",
    "displayName" : "Data Export - get error logs collection",
    "description" : "Entry point to get error logs by job execution id"
  }, {
    "permissionName" : "data-export.clean-up-files.post",
    "displayName" : "Data Export - call to clean up file definitions and related files",
    "description" : "Entry point to start clean up process of file definitions and related files"
  }, {
    "permissionName" : "data-export.all",
    "displayName" : "Data Export - all permissions",
    "description" : "Entire set of permissions needed to use the Data Export",
    "subPermissions" : [ "data-export.export.post", "data-export.file-definitions.item.get", "data-export.file-definitions.item.post", "data-export.file-definitions.upload.post", "data-export.job-executions.items.get", "data-export.job-executions.item.delete", "data-export.job-executions.items.download.get", "data-export.job-profiles.item.post", "data-export.job-profiles.collection.get", "data-export.job-profiles.item.get", "data-export.job-profiles.item.put", "data-export.job-profiles.item.delete", "data-export.mapping-profiles.item.post", "data-export.mapping-profiles.collection.get", "data-export.mapping-profiles.item.get", "data-export.mapping-profiles.item.put", "data-export.mapping-profiles.item.delete", "data-export.transformation-fields.collection.get", "data-export.expire-jobs.post", "data-export.logs.collection.get", "data-export.clean-up-files.post", "data-export.quick.export.post" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-data-export:4.1.1-SNAPSHOT.253",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 542293850,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-data-export-4.1.1-SNAPSHOT.253] Pushing module deployment descriptor ------------------
HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:22:14 GMT
Content-Type: application/json
Content-Length: 140
Connection: keep-alive
vary: origin
Location: /_/discovery/modules/mod-data-export-4.1.1-SNAPSHOT.253/mod-data-export-4.1.1-SNAPSHOT.253
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/discovery/modules : 201 39378us

{
  "instId" : "mod-data-export-4.1.1-SNAPSHOT.253",
  "srvcId" : "mod-data-export-4.1.1-SNAPSHOT.253",
  "url" : "http://mod-data-export"
}
------------------ [mod-data-export-4.1.1-SNAPSHOT.253] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:22:14 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-data-export-4.1.1-SNAPSHOT.253] Enabling module for tenant ------------------
[{"id":"mod-data-export-4.1.1-SNAPSHOT.253","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:07 GMT
Content-Type: text/plain
Content-Length: 178
Connection: keep-alive
vary: origin

POST request for mod-data-export-4.1.1-SNAPSHOT.253 /_/tenant failed with finishConnect(..) failed: Connection refused: mod-data-export.jgreben.svc.cluster.local/172.20.25.212:80
Done!
------------------ [mod-email] Getting descriptor ------------------
------------------ [mod-email-1.12.0-SNAPSHOT.57] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:13 GMT
Content-Type: application/json
Content-Length: 3053
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-email-1.12.0-SNAPSHOT.57
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 33317us

{
  "id" : "mod-email-1.12.0-SNAPSHOT.57",
  "name" : "email",
  "requires" : [ {
    "id" : "configuration",
    "version" : "2.0"
  } ],
  "provides" : [ {
    "id" : "email",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/email",
      "permissionsRequired" : [ "email.message.post" ],
      "modulePermissions" : [ "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/email",
      "permissionsRequired" : [ "email.message.collection.get" ]
    } ]
  }, {
    "id" : "delayedTasks",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/delayedTask/expiredMessages",
      "permissionsRequired" : [ "email.message.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "_timer",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/delayedTask/expiredMessages",
      "unit" : "minute",
      "delay" : "30"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "email.message.post",
    "displayName" : "message - send email notifications",
    "description" : "send email notifications"
  }, {
    "permissionName" : "email.message.collection.get",
    "displayName" : "get email messages",
    "description" : "get all email messages by query"
  }, {
    "permissionName" : "email.message.delete",
    "displayName" : "delete email message",
    "description" : "delete email messages by expiration date or status"
  }, {
    "permissionName" : "email.message.all",
    "displayName" : "email entries - all permissions",
    "description" : "Entire set of permissions needed to use the email module",
    "subPermissions" : [ "email.message.post", "email.message.collection.get", "email.message.delete" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-email:1.12.0-SNAPSHOT.57",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-email-1.12.0-SNAPSHOT.57] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:13 GMT
Content-Type: text/plain
Content-Length: 45
Connection: keep-alive
vary: origin

Duplicate instId mod-email-1.12.0-SNAPSHOT.57
------------------ [mod-email-1.12.0-SNAPSHOT.57] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:13 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-email-1.12.0-SNAPSHOT.57] Enabling module for tenant ------------------
[{"id":"mod-email-1.12.0-SNAPSHOT.57","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:13 GMT
Content-Type: application/json
Content-Length: 72
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 77137us

[ {
  "id" : "mod-email-1.12.0-SNAPSHOT.57",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-event-config] Getting descriptor ------------------
------------------ [mod-event-config-2.2.0-SNAPSHOT.49] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:18 GMT
Content-Type: application/json
Content-Length: 3398
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-event-config-2.2.0-SNAPSHOT.49
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 34954us

{
  "id" : "mod-event-config-2.2.0-SNAPSHOT.49",
  "name" : "mod-event-config",
  "requires" : [ ],
  "provides" : [ {
    "id" : "mod-event",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/eventConfig/{id}",
      "permissionsRequired" : [ "event.config.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/eventConfig",
      "permissionsRequired" : [ "event.config.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/eventConfig",
      "permissionsRequired" : [ "event.config.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/eventConfig/{id}",
      "permissionsRequired" : [ "event.config.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/eventConfig/{id}",
      "permissionsRequired" : [ "event.config.item.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "event.config.item.get",
    "displayName" : "Event Config - get event configuration from storage",
    "description" : "Get individual event configuration"
  }, {
    "permissionName" : "event.config.collection.get",
    "displayName" : "Event Config - get event configuration list",
    "description" : "Get a list of event configurations"
  }, {
    "permissionName" : "event.config.item.post",
    "displayName" : "Event Config - create event configuration",
    "description" : "Create event configuration"
  }, {
    "permissionName" : "event.config.item.put",
    "displayName" : "Event Config - modify event configuration",
    "description" : "Modify event configuration"
  }, {
    "permissionName" : "event.config.item.delete",
    "displayName" : "Event Config - delete event configuration",
    "description" : "Delete event configuration"
  }, {
    "permissionName" : "event.config.all",
    "displayName" : "Event configuration module - all permissions",
    "description" : "Entire set of permissions needed to use the event configuration modules",
    "subPermissions" : [ "event.config.item.get", "event.config.collection.get", "event.config.item.post", "event.config.item.put", "event.config.item.delete" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-event-config:2.2.0-SNAPSHOT.49",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-event-config-2.2.0-SNAPSHOT.49] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:18 GMT
Content-Type: text/plain
Content-Length: 51
Connection: keep-alive
vary: origin

Duplicate instId mod-event-config-2.2.0-SNAPSHOT.49
------------------ [mod-event-config-2.2.0-SNAPSHOT.49] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:18 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-event-config-2.2.0-SNAPSHOT.49] Enabling module for tenant ------------------
[{"id":"mod-event-config-2.2.0-SNAPSHOT.49","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:18 GMT
Content-Type: application/json
Content-Length: 78
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 51052us

[ {
  "id" : "mod-event-config-2.2.0-SNAPSHOT.49",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-feesfines] Getting descriptor ------------------
------------------ [mod-feesfines-16.2.0-SNAPSHOT.160] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:23 GMT
Content-Type: application/json
Content-Length: 31864
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-feesfines-16.2.0-SNAPSHOT.160
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 87763us

{
  "id" : "mod-feesfines-16.2.0-SNAPSHOT.160",
  "name" : "feesfines",
  "requires" : [ {
    "id" : "patron-notice",
    "version" : "1.0"
  }, {
    "id" : "inventory",
    "version" : "10.2"
  }, {
    "id" : "holdings-storage",
    "version" : "4.2"
  }, {
    "id" : "item-storage",
    "version" : "8.4"
  }, {
    "id" : "instance-storage",
    "version" : "7.4"
  }, {
    "id" : "locations",
    "version" : "3.0"
  }, {
    "id" : "location-units",
    "version" : "2.0"
  }, {
    "id" : "users",
    "version" : "15.1"
  }, {
    "id" : "pubsub-event-types",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publishers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-subscribers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publish",
    "version" : "0.1"
  } ],
  "provides" : [ {
    "id" : "feesfines",
    "version" : "16.3",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/feefines",
      "permissionsRequired" : [ "feefines.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/feefines/{id}",
      "permissionsRequired" : [ "feefines.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/feefines",
      "permissionsRequired" : [ "feefines.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/feefines/{id}",
      "permissionsRequired" : [ "feefines.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/feefines/{id}",
      "permissionsRequired" : [ "feefines.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/owners",
      "permissionsRequired" : [ "owners.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/owners/{id}",
      "permissionsRequired" : [ "owners.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/owners",
      "permissionsRequired" : [ "owners.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/owners/{id}",
      "permissionsRequired" : [ "owners.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/owners/{id}",
      "permissionsRequired" : [ "owners.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/accounts",
      "permissionsRequired" : [ "accounts.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/accounts/{id}",
      "permissionsRequired" : [ "accounts.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts",
      "permissionsRequired" : [ "accounts.item.post" ],
      "modulePermissions" : [ "patron-notice.post", "pubsub.publish.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/accounts/{id}",
      "permissionsRequired" : [ "accounts.item.put" ],
      "modulePermissions" : [ "patron-notice.post", "pubsub.publish.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/accounts/{id}",
      "permissionsRequired" : [ "accounts.item.delete" ],
      "modulePermissions" : [ "pubsub.publish.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/check-pay",
      "permissionsRequired" : [ "accounts.check-pay.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/check-waive",
      "permissionsRequired" : [ "accounts.check-waive.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/check-transfer",
      "permissionsRequired" : [ "accounts.check-transfer.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/check-refund",
      "permissionsRequired" : [ "accounts.check-refund.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/pay",
      "permissionsRequired" : [ "accounts.pay.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/waive",
      "permissionsRequired" : [ "accounts.waive.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/transfer",
      "permissionsRequired" : [ "accounts.transfer.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/cancel",
      "permissionsRequired" : [ "accounts.cancel.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts/{id}/refund",
      "permissionsRequired" : [ "accounts.refund.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/check-pay",
      "permissionsRequired" : [ "accounts.check-pay.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/check-transfer",
      "permissionsRequired" : [ "accounts.check-transfer.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/check-refund",
      "permissionsRequired" : [ "accounts.check-refund.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/check-waive",
      "permissionsRequired" : [ "accounts.check-waive.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/pay",
      "permissionsRequired" : [ "accounts.pay.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/waive",
      "permissionsRequired" : [ "accounts.waive.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/transfer",
      "permissionsRequired" : [ "accounts.transfer.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/cancel",
      "permissionsRequired" : [ "accounts.cancel.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/accounts-bulk/refund",
      "permissionsRequired" : [ "accounts.refund.post" ],
      "modulePermissions" : [ "pubsub.publish.post", "modperms.feesfines.patron-notices.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/feefineactions",
      "permissionsRequired" : [ "feefineactions.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/feefineactions/{id}",
      "permissionsRequired" : [ "feefineactions.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/feefineactions",
      "permissionsRequired" : [ "feefineactions.item.post" ],
      "modulePermissions" : [ "modperms.feesfines.patron-notices.post", "pubsub.publish.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/feefineactions/{id}",
      "permissionsRequired" : [ "feefineactions.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/feefineactions/{id}",
      "permissionsRequired" : [ "feefineactions.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/payments",
      "permissionsRequired" : [ "payments.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/payments/{id}",
      "permissionsRequired" : [ "payments.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/payments",
      "permissionsRequired" : [ "payments.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/payments/{id}",
      "permissionsRequired" : [ "payments.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/payments/{id}",
      "permissionsRequired" : [ "payments.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/waives",
      "permissionsRequired" : [ "waives.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/waives/{id}",
      "permissionsRequired" : [ "waives.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/waives",
      "permissionsRequired" : [ "waives.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/waives/{id}",
      "permissionsRequired" : [ "waives.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/waives/{id}",
      "permissionsRequired" : [ "waives.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/refunds",
      "permissionsRequired" : [ "refunds.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/refunds/{id}",
      "permissionsRequired" : [ "refunds.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/refunds",
      "permissionsRequired" : [ "refunds.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/refunds/{id}",
      "permissionsRequired" : [ "refunds.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/refunds/{id}",
      "permissionsRequired" : [ "refunds.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/transfers",
      "permissionsRequired" : [ "transfers.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/transfers/{id}",
      "permissionsRequired" : [ "transfers.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/transfers",
      "permissionsRequired" : [ "transfers.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/transfers/{id}",
      "permissionsRequired" : [ "transfers.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/transfers/{id}",
      "permissionsRequired" : [ "transfers.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/comments",
      "permissionsRequired" : [ "comments.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/comments/{id}",
      "permissionsRequired" : [ "comments.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/comments",
      "permissionsRequired" : [ "comments.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/comments/{id}",
      "permissionsRequired" : [ "comments.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/comments/{id}",
      "permissionsRequired" : [ "comments.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/transfer-criterias",
      "permissionsRequired" : [ "transfer-criterias.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/transfer-criterias/{id}",
      "permissionsRequired" : [ "transfer-criterias.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/transfer-criterias",
      "permissionsRequired" : [ "transfer-criterias.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/transfer-criterias/{id}",
      "permissionsRequired" : [ "transfer-criterias.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/transfer-criterias/{id}",
      "permissionsRequired" : [ "transfer-criterias.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/manualblocks",
      "permissionsRequired" : [ "manualblocks.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/manualblocks/{id}",
      "permissionsRequired" : [ "manualblocks.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/manualblocks",
      "permissionsRequired" : [ "manualblocks.item.post" ],
      "modulePermissions" : [ "pubsub.publish.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/manualblocks/{id}",
      "permissionsRequired" : [ "manualblocks.item.put" ],
      "modulePermissions" : [ "pubsub.publish.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/manualblocks/{id}",
      "permissionsRequired" : [ "manualblocks.item.delete" ],
      "modulePermissions" : [ "pubsub.publish.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/overdue-fines-policies",
      "permissionsRequired" : [ "overdue-fines-policies.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/overdue-fines-policies/{id}",
      "permissionsRequired" : [ "overdue-fines-policies.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/overdue-fines-policies",
      "permissionsRequired" : [ "overdue-fines-policies.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/overdue-fines-policies/{id}",
      "permissionsRequired" : [ "overdue-fines-policies.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/overdue-fines-policies/{id}",
      "permissionsRequired" : [ "overdue-fines-policies.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/lost-item-fees-policies",
      "permissionsRequired" : [ "lost-item-fees-policies.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/lost-item-fees-policies/{id}",
      "permissionsRequired" : [ "lost-item-fees-policies.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/lost-item-fees-policies",
      "permissionsRequired" : [ "lost-item-fees-policies.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/lost-item-fees-policies/{id}",
      "permissionsRequired" : [ "lost-item-fees-policies.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/lost-item-fees-policies/{id}",
      "permissionsRequired" : [ "lost-item-fees-policies.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/manual-block-templates",
      "permissionsRequired" : [ "manual-block-templates.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/manual-block-templates/{id}",
      "permissionsRequired" : [ "manual-block-templates.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/manual-block-templates",
      "permissionsRequired" : [ "manual-block-templates.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/manual-block-templates/{id}",
      "permissionsRequired" : [ "manual-block-templates.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/manual-block-templates/{id}",
      "permissionsRequired" : [ "manual-block-templates.item.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant",
      "modulePermissions" : [ "pubsub.event-types.post", "pubsub.publishers.post", "pubsub.subscribers.post" ]
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "feefine-reports",
    "version" : "2.2",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/feefine-reports/refund",
      "permissionsRequired" : [ "feefine-reports.refund.post" ],
      "modulePermissions" : [ "configuration.entries.collection.get", "users.item.get", "usergroups.item.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/feefine-reports/cash-drawer-reconciliation",
      "permissionsRequired" : [ "feefine-reports.cash-drawer-reconciliation.post" ],
      "modulePermissions" : [ "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/feefine-reports/cash-drawer-reconciliation/sources",
      "permissionsRequired" : [ "feefine-reports.cash-drawer-reconciliation.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/feefine-reports/financial-transactions-detail",
      "permissionsRequired" : [ "feefine-reports.financial-transactions-detail.post" ],
      "modulePermissions" : [ "configuration.entries.collection.get", "inventory-storage.service-points.item.get", "users.item.get", "usergroups.item.get", "inventory-storage.items.item.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.item.get", "inventory-storage.locations.item.get", "circulation-storage.loans.item.get", "circulation-storage.loan-policies.item.get" ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "feefines.collection.get",
    "displayName" : "feefines collection get",
    "description" : "Get a collection of feefines records"
  }, {
    "permissionName" : "feefines.item.get",
    "displayName" : "feefines item get",
    "description" : "Read an individual record in the Feefine module"
  }, {
    "permissionName" : "feefines.item.post",
    "displayName" : "feefines item post",
    "description" : "Create new records in the Feefine module"
  }, {
    "permissionName" : "feefines.item.put",
    "displayName" : "feefines item put",
    "description" : "Edit existing records in the Feefine module"
  }, {
    "permissionName" : "feefines.item.delete",
    "displayName" : "feefines item delete",
    "description" : "Delete records from the Feefine module"
  }, {
    "permissionName" : "owners.collection.get",
    "displayName" : "owners collection get",
    "description" : "Get a list of owner records"
  }, {
    "permissionName" : "owners.item.get",
    "displayName" : "owners item get",
    "description" : "Get a single owner item"
  }, {
    "permissionName" : "owners.item.post",
    "displayName" : "owners item post",
    "description" : "Create new Owners"
  }, {
    "permissionName" : "owners.item.put",
    "displayName" : "owners item put",
    "description" : "Edit existing Owners"
  }, {
    "permissionName" : "owners.item.delete",
    "displayName" : "owners item delete",
    "description" : "Delete Owners"
  }, {
    "permissionName" : "accounts.collection.get",
    "displayName" : "accounts collection get",
    "description" : "Get a list of account records"
  }, {
    "permissionName" : "accounts.item.get",
    "displayName" : "accounts item get",
    "description" : "Get a single account record"
  }, {
    "permissionName" : "accounts.item.post",
    "displayName" : "accounts item post",
    "description" : "Create a new account record"
  }, {
    "permissionName" : "accounts.item.put",
    "displayName" : "accounts item put",
    "description" : "Edit an account record"
  }, {
    "permissionName" : "accounts.item.delete",
    "displayName" : "accounts item delete",
    "description" : "Delete an account record"
  }, {
    "permissionName" : "accounts.check-pay.post",
    "displayName" : "accounts payment check post",
    "description" : "Checks if payment is allowed"
  }, {
    "permissionName" : "accounts.check-waive.post",
    "displayName" : "accounts waiver check post",
    "description" : "Checks if waiver is allowed"
  }, {
    "permissionName" : "accounts.check-transfer.post",
    "displayName" : "accounts transfer check post",
    "description" : "Checks if transfer is allowed"
  }, {
    "permissionName" : "accounts.check-refund.post",
    "displayName" : "accounts refund check post",
    "description" : "Checks if refund is allowed"
  }, {
    "permissionName" : "accounts.pay.post",
    "displayName" : "accounts payment post",
    "description" : "Makes payment for an account"
  }, {
    "permissionName" : "accounts.waive.post",
    "displayName" : "accounts waiver post",
    "description" : "Waives an account"
  }, {
    "permissionName" : "accounts.transfer.post",
    "displayName" : "accounts transfer post",
    "description" : "Transfers an account"
  }, {
    "permissionName" : "accounts.cancel.post",
    "displayName" : "accounts cancel post",
    "description" : "Cancels an account"
  }, {
    "permissionName" : "accounts.refund.post",
    "displayName" : "accounts refund post",
    "description" : "Refunds an account"
  }, {
    "permissionName" : "feefineactions.collection.get",
    "displayName" : "feefineactions collection get",
    "description" : "Get a list of feefineaction records"
  }, {
    "permissionName" : "feefineactions.item.get",
    "displayName" : "feefineactions item get",
    "description" : "Get a single feefineaction record"
  }, {
    "permissionName" : "feefineactions.item.post",
    "displayName" : "feefineactions item post",
    "description" : "Create a new feefineaction record"
  }, {
    "permissionName" : "feefineactions.item.put",
    "displayName" : "feefineactions item put",
    "description" : "Edit an feefineaction record"
  }, {
    "permissionName" : "feefineactions.item.delete",
    "displayName" : "feefineactions item delete",
    "description" : "Delete an feefineaction record"
  }, {
    "permissionName" : "payments.collection.get",
    "displayName" : "payments collection get",
    "description" : "Get a list of payment records"
  }, {
    "permissionName" : "payments.item.get",
    "displayName" : "payments item get",
    "description" : "Get a single payment record"
  }, {
    "permissionName" : "payments.item.post",
    "displayName" : "payments item post",
    "description" : "Create a new payment record"
  }, {
    "permissionName" : "accounts.pay.check.post",
    "displayName" : "accounts payment check post",
    "description" : "Checks if payment is valid"
  }, {
    "permissionName" : "payments.item.put",
    "displayName" : "payments item put",
    "description" : "Edit an payment record"
  }, {
    "permissionName" : "payments.item.delete",
    "displayName" : "payments item delete",
    "description" : "Delete an payment record"
  }, {
    "permissionName" : "waives.collection.get",
    "displayName" : "waives collection get",
    "description" : "Get a list of waive records"
  }, {
    "permissionName" : "waives.item.get",
    "displayName" : "waives item get",
    "description" : "Get a single waive record"
  }, {
    "permissionName" : "waives.item.post",
    "displayName" : "waives item post",
    "description" : "Create a new waive record"
  }, {
    "permissionName" : "waives.item.put",
    "displayName" : "waives item put",
    "description" : "Edit an waive record"
  }, {
    "permissionName" : "waives.item.delete",
    "displayName" : "waives item delete",
    "description" : "Delete an waive record"
  }, {
    "permissionName" : "refunds.collection.get",
    "displayName" : "refunds collection get",
    "description" : "Get a list of refund records"
  }, {
    "permissionName" : "refunds.item.get",
    "displayName" : "refunds item get",
    "description" : "Get a single refund record"
  }, {
    "permissionName" : "refunds.item.post",
    "displayName" : "refunds item post",
    "description" : "Create a new refund record"
  }, {
    "permissionName" : "refunds.item.put",
    "displayName" : "refunds item put",
    "description" : "Edit an refund record"
  }, {
    "permissionName" : "refunds.item.delete",
    "displayName" : "refunds item delete",
    "description" : "Delete an refund record"
  }, {
    "permissionName" : "transfers.collection.get",
    "displayName" : "transfers collection get",
    "description" : "Get a list of transfer records"
  }, {
    "permissionName" : "transfers.item.get",
    "displayName" : "transfers item get",
    "description" : "Get a single transfer record"
  }, {
    "permissionName" : "transfers.item.post",
    "displayName" : "transfers item post",
    "description" : "Create a new transfer record"
  }, {
    "permissionName" : "transfers.item.put",
    "displayName" : "transfers item put",
    "description" : "Edit an transfer record"
  }, {
    "permissionName" : "transfers.item.delete",
    "displayName" : "transfers item delete",
    "description" : "Delete an transfer record"
  }, {
    "permissionName" : "comments.collection.get",
    "displayName" : "comments collection get",
    "description" : "Get a list of comment records"
  }, {
    "permissionName" : "comments.item.get",
    "displayName" : "comments item get",
    "description" : "Get a single comment record"
  }, {
    "permissionName" : "comments.item.post",
    "displayName" : "comments item post",
    "description" : "Create a new comment record"
  }, {
    "permissionName" : "comments.item.put",
    "displayName" : "comments item put",
    "description" : "Edit an comment record"
  }, {
    "permissionName" : "comments.item.delete",
    "displayName" : "comments item delete",
    "description" : "Delete an comment record"
  }, {
    "permissionName" : "transfer-criterias.collection.get",
    "displayName" : "transfer criteria collection get",
    "description" : "Get a list of transfer criteria records"
  }, {
    "permissionName" : "transfer-criterias.item.get",
    "displayName" : "transfer criteria item get",
    "description" : "Get a single transfer criteria record"
  }, {
    "permissionName" : "transfer-criterias.item.post",
    "displayName" : "transfer criteria item post",
    "description" : "Create a new transfer criteria record"
  }, {
    "permissionName" : "transfer-criterias.item.put",
    "displayName" : "transfer criteria item put",
    "description" : "Edit an transfer criteria record"
  }, {
    "permissionName" : "transfer-criterias.item.delete",
    "displayName" : "transfer criteria item delete",
    "description" : "Delete an transfer criteria record"
  }, {
    "permissionName" : "manualblocks.collection.get",
    "displayName" : "manualblocks collection get",
    "description" : "Get a list of manualblock records"
  }, {
    "permissionName" : "manualblocks.item.get",
    "displayName" : "manualblocks item get",
    "description" : "Get a single manualblock record"
  }, {
    "permissionName" : "manualblocks.item.post",
    "displayName" : "manualblocks item post",
    "description" : "Create a new manualblock record"
  }, {
    "permissionName" : "manualblocks.item.put",
    "displayName" : "manualblocks item put",
    "description" : "Edit an manualblock record"
  }, {
    "permissionName" : "manualblocks.item.delete",
    "displayName" : "manualblocks item delete",
    "description" : "Delete an manualblock record"
  }, {
    "permissionName" : "overdue-fines-policies.collection.get",
    "displayName" : "Overdue-fines-policies collection get",
    "description" : "Get a list of overdue-fines-policies records"
  }, {
    "permissionName" : "overdue-fines-policies.item.get",
    "displayName" : "Overdue-fines-policies item get",
    "description" : "Get a single overdue-fines-policies record"
  }, {
    "permissionName" : "overdue-fines-policies.item.post",
    "displayName" : "Overdue-fines-policies item post",
    "description" : "Create a new overdue-fines-policies record"
  }, {
    "permissionName" : "overdue-fines-policies.item.put",
    "displayName" : "Overdue-fines-policies item put",
    "description" : "Edit an overdue-fines-policies record"
  }, {
    "permissionName" : "overdue-fines-policies.item.delete",
    "displayName" : "Overdue-fines-policies item delete",
    "description" : "Delete an overdue-fines-policies record"
  }, {
    "permissionName" : "lost-item-fees-policies.collection.get",
    "displayName" : "Lost-item-fees-policies collection get",
    "description" : "Get a list of lost-item-fees-policies records"
  }, {
    "permissionName" : "lost-item-fees-policies.item.get",
    "displayName" : "Lost-item-fees-policies item get",
    "description" : "Get a single lost-item-fees-policies record"
  }, {
    "permissionName" : "lost-item-fees-policies.item.post",
    "displayName" : "Lost-item-fees-policies item post",
    "description" : "Create a new lost-item-fees-policies record"
  }, {
    "permissionName" : "lost-item-fees-policies.item.put",
    "displayName" : "Lost-item-fees-policies item put",
    "description" : "Edit an lost-item-fees-policies record"
  }, {
    "permissionName" : "lost-item-fees-policies.item.delete",
    "displayName" : "Lost-item-fees-policies item delete",
    "description" : "Delete an lost-item-fees-policies record"
  }, {
    "permissionName" : "manual-block-templates.collection.get",
    "displayName" : "manual-block-template collection get",
    "description" : "Get a list of manual-block templates"
  }, {
    "permissionName" : "manual-block-templates.item.get",
    "displayName" : "manual-block-template item get",
    "description" : "Get a single manual-block template"
  }, {
    "permissionName" : "manual-block-templates.item.post",
    "displayName" : "manual-block-template item post",
    "description" : "Create a new manual-block template"
  }, {
    "permissionName" : "manual-block-templates.item.put",
    "displayName" : "manual-block-template item put",
    "description" : "Edit an manual-block template"
  }, {
    "permissionName" : "manual-block-templates.item.delete",
    "displayName" : "manual-block-template item delete",
    "description" : "Delete an manual-block template"
  }, {
    "permissionName" : "modperms.feesfines.patron-notices.post",
    "displayName" : "module permissions for sending patron notices",
    "description" : "to reduce X-Okapi-Token size",
    "subPermissions" : [ "patron-notice.post", "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.holdings.collection.get", "inventory-storage.instances.item.get", "inventory-storage.instances.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.institutions.collection.get", "users.item.get", "users.collection.get" ],
    "visible" : false
  }, {
    "permissionName" : "feefine-reports.refund.post",
    "displayName" : "module permissions for loading refund report",
    "description" : "Load a refund report"
  }, {
    "permissionName" : "feefine-reports.cash-drawer-reconciliation.post",
    "displayName" : "module permissions for loading cash drawer reconciliation report",
    "description" : "Load a cash drawer reconciliation report"
  }, {
    "permissionName" : "feefine-reports.financial-transactions-detail.post",
    "displayName" : "module permissions for loading financial transactions detail report",
    "description" : "Load a financial transactions detail report"
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-feesfines:16.2.0-SNAPSHOT.160",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-feesfines-16.2.0-SNAPSHOT.160] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:23 GMT
Content-Type: text/plain
Content-Length: 50
Connection: keep-alive
vary: origin

Duplicate instId mod-feesfines-16.2.0-SNAPSHOT.160
------------------ [mod-feesfines-16.2.0-SNAPSHOT.160] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:23 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-feesfines-16.2.0-SNAPSHOT.160] Enabling module for tenant ------------------
[{"id":"mod-feesfines-16.2.0-SNAPSHOT.160","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:24 GMT
Content-Type: application/json
Content-Length: 77
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 48076us

[ {
  "id" : "mod-feesfines-16.2.0-SNAPSHOT.160",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-inventory] Getting descriptor ------------------
------------------ [mod-inventory-17.1.0-SNAPSHOT.406] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:28 GMT
Content-Type: application/json
Content-Length: 26312
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-inventory-17.1.0-SNAPSHOT.406
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 36159us

{
  "id" : "mod-inventory-17.1.0-SNAPSHOT.406",
  "name" : "Inventory Module",
  "requires" : [ {
    "id" : "item-storage",
    "version" : "8.9"
  }, {
    "id" : "instance-storage",
    "version" : "7.8"
  }, {
    "id" : "instance-storage-batch",
    "version" : "0.2"
  }, {
    "id" : "holdings-storage",
    "version" : "2.0 3.0 4.0"
  }, {
    "id" : "material-types",
    "version" : "2.0"
  }, {
    "id" : "loan-types",
    "version" : "2.0"
  }, {
    "id" : "locations",
    "version" : "2.0 3.0"
  }, {
    "id" : "instance-types",
    "version" : "1.0 2.0"
  }, {
    "id" : "identifier-types",
    "version" : "1.0"
  }, {
    "id" : "contributor-name-types",
    "version" : "1.0"
  }, {
    "id" : "users",
    "version" : "15.0"
  }, {
    "id" : "instance-preceding-succeeding-titles",
    "version" : "0.1"
  }, {
    "id" : "request-storage",
    "version" : "3.3"
  }, {
    "id" : "source-storage-records",
    "version" : "3.0"
  }, {
    "id" : "bound-with-parts-storage",
    "version" : "1.0"
  } ],
  "provides" : [ {
    "id" : "inventory",
    "version" : "10.12",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/items",
      "permissionsRequired" : [ "inventory.items.collection.get" ],
      "modulePermissions" : [ "inventory-storage.items.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/items/{id}",
      "permissionsRequired" : [ "inventory.items.item.get" ],
      "modulePermissions" : [ "inventory-storage.items.item.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-withdrawn",
      "permissionsRequired" : [ "inventory.items.item.mark-withdrawn.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-in-process",
      "permissionsRequired" : [ "inventory.items.item.mark-in-process.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-in-process-non-requestable",
      "permissionsRequired" : [ "inventory.items.item.mark-in-process-non-requestable.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-intellectual-item",
      "permissionsRequired" : [ "inventory.items.item.mark-intellectual-item.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-long-missing",
      "permissionsRequired" : [ "inventory.items.item.mark-long-missing.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-missing",
      "permissionsRequired" : [ "inventory.items.item.mark-missing.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-restricted",
      "permissionsRequired" : [ "inventory.items.item.mark-restricted.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-unavailable",
      "permissionsRequired" : [ "inventory.items.item.mark-unavailable.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/{id}/mark-unknown",
      "permissionsRequired" : [ "inventory.items.item.mark-unknown.post" ],
      "modulePermissions" : [ "circulation-storage.requests.collection.get", "circulation-storage.requests.item.put", "inventory-storage.items.item.put", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items",
      "permissionsRequired" : [ "inventory.items.item.post" ],
      "modulePermissions" : [ "inventory-storage.items.item.post", "inventory-storage.items.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.bound-with-parts.collection.get", "users.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/inventory/items/{id}",
      "permissionsRequired" : [ "inventory.items.item.put" ],
      "modulePermissions" : [ "inventory-storage.items.item.get", "inventory-storage.items.collection.get", "inventory-storage.items.item.put", "users.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/inventory/items/{id}",
      "permissionsRequired" : [ "inventory.items.item.delete" ],
      "modulePermissions" : [ "inventory-storage.items.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/inventory/items",
      "permissionsRequired" : [ "inventory.items.collection.delete" ],
      "modulePermissions" : [ "inventory-storage.items.collection.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/instances",
      "permissionsRequired" : [ "inventory.instances.collection.get" ],
      "modulePermissions" : [ "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.preceding-succeeding-titles.collection.get", "inventory-storage.instance-relationships.collection.get", "inventory-storage.bound-with-parts.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.items.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/items-by-holdings-id",
      "permissionsRequired" : [ "inventory.items.collection.get" ],
      "modulePermissions" : [ "inventory-storage.bound-with-parts.collection.get", "inventory-storage.bound-with-parts.item.get", "inventory-storage.items.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.collection.get", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/instances/{id}",
      "permissionsRequired" : [ "inventory.instances.item.get" ],
      "modulePermissions" : [ "inventory-storage.instances.item.get", "inventory-storage.preceding-succeeding-titles.collection.get", "inventory-storage.instance-relationships.collection.get", "inventory-storage.bound-with-parts.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/instances",
      "permissionsRequired" : [ "inventory.instances.item.post" ],
      "modulePermissions" : [ "inventory-storage.instances.item.post", "inventory-storage.instances.item.get", "inventory-storage.preceding-succeeding-titles.collection.get", "inventory-storage.preceding-succeeding-titles.item.post", "inventory-storage.preceding-succeeding-titles.item.put", "inventory-storage.preceding-succeeding-titles.item.delete", "inventory-storage.instance-relationships.collection.get", "inventory-storage.instance-relationships.item.post", "inventory-storage.instance-relationships.item.put", "inventory-storage.instance-relationships.item.delete" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/inventory/instances/{id}",
      "permissionsRequired" : [ "inventory.instances.item.put" ],
      "modulePermissions" : [ "inventory-storage.instances.item.put", "inventory-storage.instances.item.get", "inventory-storage.instances.item.post", "inventory-storage.instances.item.delete", "source-storage.records.update", "inventory-storage.preceding-succeeding-titles.collection.get", "inventory-storage.preceding-succeeding-titles.item.post", "inventory-storage.preceding-succeeding-titles.item.put", "inventory-storage.preceding-succeeding-titles.item.delete", "inventory-storage.instance-relationships.collection.get", "inventory-storage.instance-relationships.item.post", "inventory-storage.instance-relationships.item.put", "inventory-storage.instance-relationships.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/inventory/instances/{id}",
      "permissionsRequired" : [ "inventory.instances.item.delete" ],
      "modulePermissions" : [ "inventory-storage.instances.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/inventory/instances",
      "permissionsRequired" : [ "inventory.instances.collection.delete" ],
      "modulePermissions" : [ "inventory-storage.instances.collection.delete" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/ingest/mods",
      "permissionsRequired" : [ "inventory.ingest.mods.post" ],
      "modulePermissions" : [ "inventory-storage.items.item.post", "inventory-storage.instances.item.post", "inventory-storage.instances.collection.get", "inventory-storage.holdings.item.post", "inventory-storage.holdings.collection.get", "inventory-storage.material-types.collection.get", "inventory-storage.loan-types.collection.get", "inventory-storage.locations.collection.get", "inventory-storage.instance-types.collection.get", "inventory-storage.identifier-types.collection.get", "inventory-storage.contributor-name-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/ingest/mods/status/{id}",
      "permissionsRequired" : [ "inventory.ingest.mods.status.get" ]
    } ]
  }, {
    "id" : "inventory-batch",
    "version" : "0.5",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/instances/batch",
      "permissionsRequired" : [ "inventory.instances.batch.post" ],
      "modulePermissions" : [ "inventory-storage.instances.item.post", "inventory-storage.instances.item.get", "inventory-storage.instances.item.put", "inventory-storage.instances.item.delete", "inventory-storage.instances.batch.post", "inventory-storage.preceding-succeeding-titles.collection.get", "inventory-storage.preceding-succeeding-titles.item.post", "inventory-storage.preceding-succeeding-titles.item.put", "inventory-storage.preceding-succeeding-titles.item.delete", "inventory-storage.instance-relationships.collection.get", "inventory-storage.instance-relationships.item.post", "inventory-storage.instance-relationships.item.put", "inventory-storage.instance-relationships.item.delete" ]
    } ]
  }, {
    "id" : "inventory-config",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory/config/instances/blocked-fields",
      "permissionsRequired" : [ "inventory.config.instances.blocked-fields.get" ],
      "modulePermissions" : [ ]
    } ]
  }, {
    "id" : "isbn-utils",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/isbn/convertTo13",
      "permissionsRequired" : [ "isbn-utils.convert-to-13.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/isbn/convertTo10",
      "permissionsRequired" : [ "isbn-utils.convert-to-10.get" ],
      "modulePermissions" : [ ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/isbn/validator",
      "permissionsRequired" : [ "isbn-utils.validator.get" ],
      "modulePermissions" : [ ]
    } ]
  }, {
    "id" : "inventory-move",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/items/move",
      "permissionsRequired" : [ "inventory.items.move.item.post" ],
      "modulePermissions" : [ "inventory-storage.items.item.put", "inventory-storage.items.collection.get", "inventory-storage.holdings.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory/holdings/move",
      "permissionsRequired" : [ "inventory.holdings.move.item.post" ],
      "modulePermissions" : [ "inventory-storage.holdings.item.put", "inventory-storage.holdings.collection.get", "inventory-storage.instances.item.get" ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "inventory.items.collection.get",
    "displayName" : "Inventory - get item collection",
    "description" : "Get item collection"
  }, {
    "permissionName" : "inventory.items.collection.delete",
    "displayName" : "Inventory - delete entire item collection",
    "description" : "Delete entire item collection"
  }, {
    "permissionName" : "inventory.items.item.get",
    "displayName" : "Inventory - get individual item",
    "description" : "Get individual item"
  }, {
    "permissionName" : "inventory.items.item.mark-withdrawn.post",
    "displayName" : "Inventory - mark an item as withdrawn",
    "description" : "Mark an item as withdrawn"
  }, {
    "permissionName" : "inventory.items.move.item.post",
    "displayName" : "Inventory - move items to another holdings record",
    "description" : "Move items to another holdings record"
  }, {
    "permissionName" : "inventory.items.item.mark-in-process.post",
    "displayName" : "Inventory - mark an item as in process",
    "description" : "Mark an item as in process"
  }, {
    "permissionName" : "inventory.items.item.mark-in-process-non-requestable.post",
    "displayName" : "Inventory - mark an item as in process (non-requestable)",
    "description" : "Mark an item as in process (non-requestable)"
  }, {
    "permissionName" : "inventory.items.item.mark-intellectual-item.post",
    "displayName" : "Inventory - mark an item as intellectual item",
    "description" : "Mark an item as intellectual item"
  }, {
    "permissionName" : "inventory.items.item.mark-long-missing.post",
    "displayName" : "Inventory - mark an item as long missing",
    "description" : "Mark an item as long missing"
  }, {
    "permissionName" : "inventory.items.item.mark-missing.post",
    "displayName" : "Inventory - mark an item as missing",
    "description" : "Mark an item as missing"
  }, {
    "permissionName" : "inventory.items.item.mark-restricted.post",
    "displayName" : "Inventory - mark an item as restricted",
    "description" : "Mark an item as restricted"
  }, {
    "permissionName" : "inventory.items.item.mark-unavailable.post",
    "displayName" : "Inventory - mark an item as unavailable",
    "description" : "Mark an item as unavailable"
  }, {
    "permissionName" : "inventory.items.item.mark-unknown.post",
    "displayName" : "Inventory - mark an item as unknown",
    "description" : "Mark an item as unknown"
  }, {
    "permissionName" : "inventory.holdings.move.item.post",
    "displayName" : "Inventory - move holdings record to another instance",
    "description" : "Move holdings record to another holdings record"
  }, {
    "permissionName" : "inventory.items.item.post",
    "displayName" : "Inventory - create individual item",
    "description" : "Create individual item"
  }, {
    "permissionName" : "inventory.items.item.put",
    "displayName" : "Inventory - modify item",
    "description" : "Modify item"
  }, {
    "permissionName" : "inventory.items.item.delete",
    "displayName" : "Inventory - delete individual item",
    "description" : "Delete individual item"
  }, {
    "permissionName" : "inventory.instances.collection.get",
    "displayName" : "Inventory - get instance collection",
    "description" : "Get instance collection"
  }, {
    "permissionName" : "inventory.instances.collection.delete",
    "displayName" : "Inventory - delete entire instance collection",
    "description" : "Delete entire instance collection"
  }, {
    "permissionName" : "inventory.instances.item.get",
    "displayName" : "Inventory - get individual instance",
    "description" : "Get individual instance"
  }, {
    "permissionName" : "inventory.instances.item.post",
    "displayName" : "Inventory - create individual instance",
    "description" : "Create individual instance"
  }, {
    "permissionName" : "inventory.instances.batch.post",
    "displayName" : "Inventory - create batch of individual instance",
    "description" : "Create batch of individual instance"
  }, {
    "permissionName" : "inventory.instances.item.put",
    "displayName" : "Inventory - modify instance",
    "description" : "Modify instance"
  }, {
    "permissionName" : "inventory.instances.item.delete",
    "displayName" : "Inventory - delete individual instance",
    "description" : "Delete individual instance"
  }, {
    "permissionName" : "inventory.ingest.mods.post",
    "displayName" : "Inventory - ingest a MODS format file",
    "description" : "Request ingestion of a MODS format file"
  }, {
    "permissionName" : "inventory.ingest.mods.status.get",
    "displayName" : "Inventory - MODS ingest status",
    "description" : "Check the status of a MODS format file ingestion"
  }, {
    "permissionName" : "inventory.config.instances.blocked-fields.get",
    "displayName" : "Inventory - get configuration for blocked fields of instances",
    "description" : "Get configuration for blocked fields of instances"
  }, {
    "permissionName" : "inventory.all",
    "displayName" : "Inventory - all permissions",
    "description" : "Entire set of permissions needed to use the inventory",
    "subPermissions" : [ "inventory.items.collection.get", "inventory.items.item.get", "inventory.items.item.post", "inventory.items.item.put", "inventory.items.item.delete", "inventory.items.collection.delete", "inventory.instances.collection.get", "inventory.instances.item.get", "inventory.instances.item.post", "inventory.instances.batch.post", "inventory.instances.item.put", "inventory.instances.item.delete", "inventory.instances.collection.delete", "inventory.ingest.mods.post", "inventory.ingest.mods.status.get", "inventory.config.instances.blocked-fields.get", "inventory.items.item.mark-withdrawn.post", "inventory.items.item.mark-in-process.post", "inventory.items.item.mark-in-process-non-requestable.post", "inventory.items.item.mark-missing.post", "inventory.items.move.item.post", "inventory.holdings.move.item.post" ]
  }, {
    "permissionName" : "isbn-utils.convert-to-13.get",
    "displayName" : "ISBN utils - convert to ISBN-13 format",
    "description" : "Convert isbn code to ISBN-13 format"
  }, {
    "permissionName" : "isbn-utils.convert-to-10.get",
    "displayName" : "ISBN utils - convert to ISBN-10 format",
    "description" : "Convert isbn code to ISBN-10 format"
  }, {
    "permissionName" : "isbn-utils.validator.get",
    "displayName" : "ISBN utils - validate ISBN code",
    "description" : "Check that isbn code is valid"
  }, {
    "permissionName" : "isbn-utils.all",
    "displayName" : "Isbn-utils - all permissions",
    "description" : "Entire set of permissions needed to use the isbn-utils",
    "subPermissions" : [ "isbn-utils.convert-to-13.get", "isbn-utils.convert-to-10.get", "isbn-utils.validator.get" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-inventory:17.1.0-SNAPSHOT.406",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0 -Dorg.folio.metadata.inventory.storage.type=okapi"
    }, {
      "name" : "KAFKA_HOST",
      "value" : "10.0.2.15"
    }, {
      "name" : "KAFKA_PORT",
      "value" : "9092"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 715827883,
        "PortBindings" : {
          "9403/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-inventory-17.1.0-SNAPSHOT.406] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:28 GMT
Content-Type: text/plain
Content-Length: 50
Connection: keep-alive
vary: origin

Duplicate instId mod-inventory-17.1.0-SNAPSHOT.406
------------------ [mod-inventory-17.1.0-SNAPSHOT.406] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:28 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-inventory-17.1.0-SNAPSHOT.406] Enabling module for tenant ------------------
[{"id":"mod-inventory-17.1.0-SNAPSHOT.406","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:29 GMT
Content-Type: application/json
Content-Length: 77
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 96155us

[ {
  "id" : "mod-inventory-17.1.0-SNAPSHOT.406",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-inventory-storage] Getting descriptor ------------------
------------------ [mod-inventory-storage-22.0.0-SNAPSHOT.595] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:34 GMT
Content-Type: application/json
Content-Length: 98754
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-inventory-storage-22.0.0-SNAPSHOT.595
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 146244us

{
  "id" : "mod-inventory-storage-22.0.0-SNAPSHOT.595",
  "name" : "Inventory Storage Module",
  "provides" : [ {
    "id" : "item-storage",
    "version" : "8.9",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/item-storage/items",
      "permissionsRequired" : [ "inventory-storage.items.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/item-storage/items/{id}",
      "permissionsRequired" : [ "inventory-storage.items.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/item-storage/items",
      "permissionsRequired" : [ "inventory-storage.items.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/item-storage/items/{id}",
      "permissionsRequired" : [ "inventory-storage.items.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/item-storage/items/{id}",
      "permissionsRequired" : [ "inventory-storage.items.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/item-storage/items",
      "permissionsRequired" : [ "inventory-storage.items.collection.delete" ]
    } ]
  }, {
    "id" : "item-storage-batch-sync",
    "version" : "0.6",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/item-storage/batch/synchronous",
      "permissionsRequired" : [ "inventory-storage.items.batch.post" ]
    } ]
  }, {
    "id" : "holdings-storage",
    "version" : "4.6",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-storage/holdings",
      "permissionsRequired" : [ "inventory-storage.holdings.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-storage/holdings/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/holdings-storage/holdings",
      "permissionsRequired" : [ "inventory-storage.holdings.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/holdings-storage/holdings/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/holdings-storage/holdings/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/holdings-storage/holdings",
      "permissionsRequired" : [ "inventory-storage.holdings.collection.delete" ]
    } ]
  }, {
    "id" : "holdings-storage-batch-sync",
    "version" : "0.3",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/holdings-storage/batch/synchronous",
      "permissionsRequired" : [ "inventory-storage.holdings.batch.post" ]
    } ]
  }, {
    "id" : "instance-storage",
    "version" : "7.8",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-storage/instances",
      "permissionsRequired" : [ "inventory-storage.instances.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-storage/instances/{id}",
      "permissionsRequired" : [ "inventory-storage.instances.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-storage/instances",
      "permissionsRequired" : [ "inventory-storage.instances.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-storage/instances/{id}",
      "permissionsRequired" : [ "inventory-storage.instances.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-storage/instances/{id}",
      "permissionsRequired" : [ "inventory-storage.instances.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-storage/instances/{id}/source-record",
      "permissionsRequired" : [ "inventory-storage.instances.source-record.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-storage/instances/{id}/source-record/marc-json",
      "permissionsRequired" : [ "inventory-storage.instances.source-record.marc-json.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-storage/instances/{id}/source-record/marc-json",
      "permissionsRequired" : [ "inventory-storage.instances.source-record.marc-json.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-storage/instances/{id}/source-record/marc-json",
      "permissionsRequired" : [ "inventory-storage.instances.source-record.marc-json.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-storage/instances",
      "permissionsRequired" : [ "inventory-storage.instances.collection.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-storage/instance-relationships",
      "permissionsRequired" : [ "inventory-storage.instance-relationships.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-storage/instance-relationships",
      "permissionsRequired" : [ "inventory-storage.instance-relationships.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-storage/instance-relationships/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-relationships.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-storage/instance-relationships/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-relationships.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-storage/instance-relationships/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-relationships.item.delete" ]
    } ]
  }, {
    "id" : "instance-preceding-succeeding-titles",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/preceding-succeeding-titles",
      "permissionsRequired" : [ "inventory-storage.preceding-succeeding-titles.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/preceding-succeeding-titles/{id}",
      "permissionsRequired" : [ "inventory-storage.preceding-succeeding-titles.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/preceding-succeeding-titles",
      "permissionsRequired" : [ "inventory-storage.preceding-succeeding-titles.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/preceding-succeeding-titles/{id}",
      "permissionsRequired" : [ "inventory-storage.preceding-succeeding-titles.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/preceding-succeeding-titles/{id}",
      "permissionsRequired" : [ "inventory-storage.preceding-succeeding-titles.item.delete" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/preceding-succeeding-titles/instances/{id}",
      "permissionsRequired" : [ "inventory-storage.instances.preceding-succeeding-titles.collection.put" ]
    } ]
  }, {
    "id" : "instance-storage-batch",
    "version" : "0.3",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-storage/batch/instances",
      "permissionsRequired" : [ "inventory-storage.instances.batch.post" ]
    } ]
  }, {
    "id" : "instance-storage-batch-sync",
    "version" : "0.3",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-storage/batch/synchronous",
      "permissionsRequired" : [ "inventory-storage.instances.batch.post" ]
    } ]
  }, {
    "id" : "loan-types",
    "version" : "2.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-types",
      "permissionsRequired" : [ "inventory-storage.loan-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/loan-types/{id}",
      "permissionsRequired" : [ "inventory-storage.loan-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/loan-types",
      "permissionsRequired" : [ "inventory-storage.loan-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/loan-types/{id}",
      "permissionsRequired" : [ "inventory-storage.loan-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/loan-types/{id}",
      "permissionsRequired" : [ "inventory-storage.loan-types.item.delete" ]
    } ]
  }, {
    "id" : "material-types",
    "version" : "2.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/material-types",
      "permissionsRequired" : [ "inventory-storage.material-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/material-types/{id}",
      "permissionsRequired" : [ "inventory-storage.material-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/material-types",
      "permissionsRequired" : [ "inventory-storage.material-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/material-types/{id}",
      "permissionsRequired" : [ "inventory-storage.material-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/material-types/{id}",
      "permissionsRequired" : [ "inventory-storage.material-types.item.delete" ]
    } ]
  }, {
    "id" : "shelf-locations",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/shelf-locations",
      "permissionsRequired" : [ "inventory-storage.shelf-locations.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/shelf-locations/{id}",
      "permissionsRequired" : [ "inventory-storage.shelf-locations.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/shelf-locations",
      "permissionsRequired" : [ "inventory-storage.shelf-locations.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/shelf-locations/{id}",
      "permissionsRequired" : [ "inventory-storage.shelf-locations.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/shelf-locations/{id}",
      "permissionsRequired" : [ "inventory-storage.shelf-locations.item.delete" ]
    } ]
  }, {
    "id" : "location-units",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/location-units/institutions",
      "permissionsRequired" : [ "inventory-storage.location-units.institutions.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/location-units/institutions/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.institutions.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/location-units/institutions",
      "permissionsRequired" : [ "inventory-storage.location-units.institutions.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/location-units/institutions/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.institutions.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/location-units/institutions/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.institutions.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/location-units/campuses",
      "permissionsRequired" : [ "inventory-storage.location-units.campuses.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/location-units/campuses/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.campuses.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/location-units/campuses",
      "permissionsRequired" : [ "inventory-storage.location-units.campuses.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/location-units/campuses/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.campuses.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/location-units/campuses/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.campuses.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/location-units/libraries",
      "permissionsRequired" : [ "inventory-storage.location-units.libraries.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/location-units/libraries/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.libraries.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/location-units/libraries",
      "permissionsRequired" : [ "inventory-storage.location-units.libraries.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/location-units/libraries/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.libraries.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/location-units/libraries/{id}",
      "permissionsRequired" : [ "inventory-storage.location-units.libraries.item.delete" ]
    } ]
  }, {
    "id" : "locations",
    "version" : "3.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/locations",
      "permissionsRequired" : [ "inventory-storage.locations.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/locations/{id}",
      "permissionsRequired" : [ "inventory-storage.locations.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/locations",
      "permissionsRequired" : [ "inventory-storage.locations.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/locations/{id}",
      "permissionsRequired" : [ "inventory-storage.locations.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/locations/{id}",
      "permissionsRequired" : [ "inventory-storage.locations.item.delete" ]
    } ]
  }, {
    "id" : "instance-relationship-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-relationship-types",
      "permissionsRequired" : [ "inventory-storage.instance-relationship-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-relationship-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-relationship-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-relationship-types",
      "permissionsRequired" : [ "inventory-storage.instance-relationship-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-relationship-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-relationship-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-relationship-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-relationship-types.item.delete" ]
    } ]
  }, {
    "id" : "identifier-types",
    "version" : "1.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/identifier-types",
      "permissionsRequired" : [ "inventory-storage.identifier-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/identifier-types/{id}",
      "permissionsRequired" : [ "inventory-storage.identifier-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/identifier-types",
      "permissionsRequired" : [ "inventory-storage.identifier-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/identifier-types/{id}",
      "permissionsRequired" : [ "inventory-storage.identifier-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/identifier-types/{id}",
      "permissionsRequired" : [ "inventory-storage.identifier-types.item.delete" ]
    } ]
  }, {
    "id" : "contributor-types",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/contributor-types",
      "permissionsRequired" : [ "inventory-storage.contributor-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/contributor-types/{id}",
      "permissionsRequired" : [ "inventory-storage.contributor-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/contributor-types",
      "permissionsRequired" : [ "inventory-storage.contributor-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/contributor-types/{id}",
      "permissionsRequired" : [ "inventory-storage.contributor-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/contributor-types/{id}",
      "permissionsRequired" : [ "inventory-storage.contributor-types.item.delete" ]
    } ]
  }, {
    "id" : "contributor-name-types",
    "version" : "1.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/contributor-name-types",
      "permissionsRequired" : [ "inventory-storage.contributor-name-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/contributor-name-types/{id}",
      "permissionsRequired" : [ "inventory-storage.contributor-name-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/contributor-name-types",
      "permissionsRequired" : [ "inventory-storage.contributor-name-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/contributor-name-types/{id}",
      "permissionsRequired" : [ "inventory-storage.contributor-name-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/contributor-name-types/{id}",
      "permissionsRequired" : [ "inventory-storage.contributor-name-types.item.delete" ]
    } ]
  }, {
    "id" : "inventory-record-bulk",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/record-bulk/ids",
      "permissionsRequired" : [ "inventory-storage.record-bulk.ids.get" ]
    } ]
  }, {
    "id" : "instance-formats",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-formats",
      "permissionsRequired" : [ "inventory-storage.instance-formats.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-formats/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-formats.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-formats",
      "permissionsRequired" : [ "inventory-storage.instance-formats.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-formats/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-formats.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-formats/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-formats.item.delete" ]
    } ]
  }, {
    "id" : "instance-types",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-types",
      "permissionsRequired" : [ "inventory-storage.instance-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-types",
      "permissionsRequired" : [ "inventory-storage.instance-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-types.item.delete" ]
    } ]
  }, {
    "id" : "nature-of-content-terms",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/nature-of-content-terms",
      "permissionsRequired" : [ "inventory-storage.nature-of-content-terms.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/nature-of-content-terms/{id}",
      "permissionsRequired" : [ "inventory-storage.nature-of-content-terms.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/nature-of-content-terms",
      "permissionsRequired" : [ "inventory-storage.nature-of-content-terms.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/nature-of-content-terms/{id}",
      "permissionsRequired" : [ "inventory-storage.nature-of-content-terms.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/nature-of-content-terms/{id}",
      "permissionsRequired" : [ "inventory-storage.nature-of-content-terms.item.delete" ]
    } ]
  }, {
    "id" : "classification-types",
    "version" : "1.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/classification-types",
      "permissionsRequired" : [ "inventory-storage.classification-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/classification-types/{id}",
      "permissionsRequired" : [ "inventory-storage.classification-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/classification-types",
      "permissionsRequired" : [ "inventory-storage.classification-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/classification-types/{id}",
      "permissionsRequired" : [ "inventory-storage.classification-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/classification-types/{id}",
      "permissionsRequired" : [ "inventory-storage.classification-types.item.delete" ]
    } ]
  }, {
    "id" : "alternative-title-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/alternative-title-types",
      "permissionsRequired" : [ "inventory-storage.alternative-title-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/alternative-title-types/{id}",
      "permissionsRequired" : [ "inventory-storage.alternative-title-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/alternative-title-types",
      "permissionsRequired" : [ "inventory-storage.alternative-title-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/alternative-title-types/{id}",
      "permissionsRequired" : [ "inventory-storage.alternative-title-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/alternative-title-types/{id}",
      "permissionsRequired" : [ "inventory-storage.alternative-title-types.item.delete" ]
    } ]
  }, {
    "id" : "modes-of-issuance",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/modes-of-issuance",
      "permissionsRequired" : [ "inventory-storage.modes-of-issuance.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/modes-of-issuance/{id}",
      "permissionsRequired" : [ "inventory-storage.modes-of-issuance.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/modes-of-issuance",
      "permissionsRequired" : [ "inventory-storage.modes-of-issuance.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/modes-of-issuance/{id}",
      "permissionsRequired" : [ "inventory-storage.modes-of-issuance.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/modes-of-issuance/{id}",
      "permissionsRequired" : [ "inventory-storage.modes-of-issuance.item.delete" ]
    } ]
  }, {
    "id" : "instance-statuses",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-statuses",
      "permissionsRequired" : [ "inventory-storage.instance-statuses.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-statuses/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-statuses.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-statuses",
      "permissionsRequired" : [ "inventory-storage.instance-statuses.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-statuses/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-statuses.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-statuses/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-statuses.item.delete" ]
    } ]
  }, {
    "id" : "electronic-access-relationships",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/electronic-access-relationships",
      "permissionsRequired" : [ "inventory-storage.electronic-access-relationships.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/electronic-access-relationships/{id}",
      "permissionsRequired" : [ "inventory-storage.electronic-access-relationships.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/electronic-access-relationships",
      "permissionsRequired" : [ "inventory-storage.electronic-access-relationships.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/electronic-access-relationships/{id}",
      "permissionsRequired" : [ "inventory-storage.electronic-access-relationships.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/electronic-access-relationships/{id}",
      "permissionsRequired" : [ "inventory-storage.electronic-access-relationships.item.delete" ]
    } ]
  }, {
    "id" : "statistical-code-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/statistical-code-types",
      "permissionsRequired" : [ "inventory-storage.statistical-code-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/statistical-code-types/{id}",
      "permissionsRequired" : [ "inventory-storage.statistical-code-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/statistical-code-types",
      "permissionsRequired" : [ "inventory-storage.statistical-code-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/statistical-code-types/{id}",
      "permissionsRequired" : [ "inventory-storage.statistical-code-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/statistical-code-types/{id}",
      "permissionsRequired" : [ "inventory-storage.statistical-code-types.item.delete" ]
    } ]
  }, {
    "id" : "statistical-codes",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/statistical-codes",
      "permissionsRequired" : [ "inventory-storage.statistical-codes.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/statistical-codes/{id}",
      "permissionsRequired" : [ "inventory-storage.statistical-codes.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/statistical-codes",
      "permissionsRequired" : [ "inventory-storage.statistical-codes.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/statistical-codes/{id}",
      "permissionsRequired" : [ "inventory-storage.statistical-codes.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/statistical-codes/{id}",
      "permissionsRequired" : [ "inventory-storage.statistical-codes.item.delete" ]
    } ]
  }, {
    "id" : "ill-policies",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/ill-policies",
      "permissionsRequired" : [ "inventory-storage.ill-policies.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/ill-policies/{id}",
      "permissionsRequired" : [ "inventory-storage.ill-policies.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/ill-policies",
      "permissionsRequired" : [ "inventory-storage.ill-policies.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/ill-policies/{id}",
      "permissionsRequired" : [ "inventory-storage.ill-policies.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/ill-policies/{id}",
      "permissionsRequired" : [ "inventory-storage.ill-policies.item.delete" ]
    } ]
  }, {
    "id" : "holdings-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-types",
      "permissionsRequired" : [ "inventory-storage.holdings-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-types/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/holdings-types",
      "permissionsRequired" : [ "inventory-storage.holdings-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/holdings-types/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/holdings-types/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-types.item.delete" ]
    } ]
  }, {
    "id" : "call-number-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/call-number-types",
      "permissionsRequired" : [ "inventory-storage.call-number-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/call-number-types/{id}",
      "permissionsRequired" : [ "inventory-storage.call-number-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/call-number-types",
      "permissionsRequired" : [ "inventory-storage.call-number-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/call-number-types/{id}",
      "permissionsRequired" : [ "inventory-storage.call-number-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/call-number-types/{id}",
      "permissionsRequired" : [ "inventory-storage.call-number-types.item.delete" ]
    } ]
  }, {
    "id" : "instance-note-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-note-types",
      "permissionsRequired" : [ "inventory-storage.instance-note-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-note-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-note-types",
      "permissionsRequired" : [ "inventory-storage.instance-note-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/instance-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-note-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.instance-note-types.item.delete" ]
    } ]
  }, {
    "id" : "holdings-note-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-note-types",
      "permissionsRequired" : [ "inventory-storage.holdings-note-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-note-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/holdings-note-types",
      "permissionsRequired" : [ "inventory-storage.holdings-note-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/holdings-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-note-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/holdings-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-note-types.item.delete" ]
    } ]
  }, {
    "id" : "item-note-types",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/item-note-types",
      "permissionsRequired" : [ "inventory-storage.item-note-types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/item-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.item-note-types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/item-note-types",
      "permissionsRequired" : [ "inventory-storage.item-note-types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/item-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.item-note-types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/item-note-types/{id}",
      "permissionsRequired" : [ "inventory-storage.item-note-types.item.delete" ]
    } ]
  }, {
    "id" : "item-damaged-statuses",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/item-damaged-statuses",
      "permissionsRequired" : [ "inventory-storage.item-damaged-statuses.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/item-damaged-statuses/{id}",
      "permissionsRequired" : [ "inventory-storage.item-damaged-statuses.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/item-damaged-statuses",
      "permissionsRequired" : [ "inventory-storage.item-damaged-statuses.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/item-damaged-statuses/{id}",
      "permissionsRequired" : [ "inventory-storage.item-damaged-statuses.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/item-damaged-statuses/{id}",
      "permissionsRequired" : [ "inventory-storage.item-damaged-statuses.item.delete" ]
    } ]
  }, {
    "id" : "service-points",
    "version" : "3.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/service-points",
      "permissionsRequired" : [ "inventory-storage.service-points.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/service-points/{id}",
      "permissionsRequired" : [ "inventory-storage.service-points.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/service-points",
      "permissionsRequired" : [ "inventory-storage.service-points.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/service-points/{id}",
      "permissionsRequired" : [ "inventory-storage.service-points.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/service-points/{id}",
      "permissionsRequired" : [ "inventory-storage.service-points.item.delete" ]
    } ]
  }, {
    "id" : "service-points-users",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/service-points-users",
      "permissionsRequired" : [ "inventory-storage.service-points-users.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/service-points-users/{id}",
      "permissionsRequired" : [ "inventory-storage.service-points-users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/service-points-users",
      "permissionsRequired" : [ "inventory-storage.service-points-users.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/service-points-users/{id}",
      "permissionsRequired" : [ "inventory-storage.service-points-users.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/service-points-users/{id}",
      "permissionsRequired" : [ "inventory-storage.service-points-users.item.delete" ]
    } ]
  }, {
    "id" : "hrid-settings-storage",
    "version" : "1.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/hrid-settings-storage/hrid-settings",
      "permissionsRequired" : [ "inventory-storage.hrid-settings.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/hrid-settings-storage/hrid-settings",
      "permissionsRequired" : [ "inventory-storage.hrid-settings.item.put" ]
    } ]
  }, {
    "id" : "holdings-sources",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-sources",
      "permissionsRequired" : [ "inventory-storage.holdings-sources.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/holdings-sources/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-sources.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/holdings-sources",
      "permissionsRequired" : [ "inventory-storage.holdings-sources.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/holdings-sources/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-sources.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/holdings-sources/{id}",
      "permissionsRequired" : [ "inventory-storage.holdings-sources.item.delete" ]
    } ]
  }, {
    "id" : "bound-with-parts-storage",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory-storage/bound-with-parts",
      "permissionsRequired" : [ "inventory-storage.bound-with-parts.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory-storage/bound-with-parts/{id}",
      "permissionsRequired" : [ "inventory-storage.bound-with-parts.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory-storage/bound-with-parts",
      "permissionsRequired" : [ "inventory-storage.bound-with-parts.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/inventory-storage/bound-with-parts/{id}",
      "permissionsRequired" : [ "inventory-storage.bound-with-parts.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/inventory-storage/bound-with-parts/{id}",
      "permissionsRequired" : [ "inventory-storage.bound-with-parts.item.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "DELETE", "GET" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "_jsonSchemas",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/jsonSchemas",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "oaipmhview",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/oai-pmh-view/instances",
      "permissionsRequired" : [ "inventory-storage.oai-pmh-view.instances.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/oai-pmh-view/updatedInstanceIds",
      "permissionsRequired" : [ "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/oai-pmh-view/enrichedInstances",
      "permissionsRequired" : [ "inventory-storage.oai-pmh-view.enrichedinstances.collection.post" ]
    } ]
  }, {
    "id" : "inventory-hierarchy",
    "version" : "0.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory-hierarchy/updated-instance-ids",
      "permissionsRequired" : [ "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/inventory-hierarchy/items-and-holdings",
      "permissionsRequired" : [ "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post" ]
    } ]
  }, {
    "id" : "inventory-view",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/inventory-view/instances",
      "permissionsRequired" : [ "inventory-storage.inventory-view.instances.collection.get" ]
    } ]
  }, {
    "id" : "instance-reindex",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/instance-storage/reindex",
      "permissionsRequired" : [ "inventory-storage.instance.reindex.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/instance-storage/reindex/{id}",
      "permissionsRequired" : [ "inventory-storage.instance.reindex.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/instance-storage/reindex/{id}",
      "permissionsRequired" : [ "inventory-storage.instance.reindex.item.delete" ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "inventory-storage.instance-relationships.collection.get",
    "displayName" : "inventory storage - get instance relationships by query",
    "description" : "get instance relationships by query"
  }, {
    "permissionName" : "inventory-storage.instance-relationships.item.get",
    "displayName" : "inventory storage - get instance relationship by id",
    "description" : "get instance relationship by id"
  }, {
    "permissionName" : "inventory-storage.instance-relationships.item.post",
    "displayName" : "inventory storage - create an instance relationship",
    "description" : "create an instance relationship"
  }, {
    "permissionName" : "inventory-storage.instance-relationships.item.put",
    "displayName" : "inventory storage - modify an instance relationship",
    "description" : "modify an instance relationship"
  }, {
    "permissionName" : "inventory-storage.instance-relationships.item.delete",
    "displayName" : "inventory storage - delete an instance relationship",
    "description" : "delete an instance relationship"
  }, {
    "permissionName" : "inventory-storage.items.collection.get",
    "displayName" : "inventory storage - get item collection",
    "description" : "get item collection from storage"
  }, {
    "permissionName" : "inventory-storage.items.collection.delete",
    "displayName" : "inventory storage - delete entire item collection",
    "description" : "delete entire item collection from storage"
  }, {
    "permissionName" : "inventory-storage.items.item.get",
    "displayName" : "inventory storage - get individual item",
    "description" : "get individual item from storage"
  }, {
    "permissionName" : "inventory-storage.items.item.post",
    "displayName" : "inventory storage - create individual item",
    "description" : "create individual item in storage"
  }, {
    "permissionName" : "inventory-storage.items.item.put",
    "displayName" : "inventory storage - modify item",
    "description" : "modify item in storage"
  }, {
    "permissionName" : "inventory-storage.items.item.delete",
    "displayName" : "inventory storage - delete individual item",
    "description" : "delete individual item from storage"
  }, {
    "permissionName" : "inventory-storage.items.batch.post",
    "displayName" : "inventory storage - create a number of items",
    "description" : "create a number of items in storage"
  }, {
    "permissionName" : "inventory-storage.holdings.collection.get",
    "displayName" : "inventory storage - get holdings collection",
    "description" : "get holdings collection from storage"
  }, {
    "permissionName" : "inventory-storage.holdings.collection.delete",
    "displayName" : "inventory storage - delete entire holdings collection",
    "description" : "delete entire holdings collection from storage"
  }, {
    "permissionName" : "inventory-storage.holdings.item.get",
    "displayName" : "inventory storage - get individual holdings record",
    "description" : "get individual holdings record from storage"
  }, {
    "permissionName" : "inventory-storage.holdings.item.post",
    "displayName" : "inventory storage - create individual holdings record",
    "description" : "create individual holdings record in storage"
  }, {
    "permissionName" : "inventory-storage.holdings.item.put",
    "displayName" : "inventory storage - modify holdings record",
    "description" : "modify holdings record in storage"
  }, {
    "permissionName" : "inventory-storage.holdings.item.delete",
    "displayName" : "inventory storage - delete individual holdings record",
    "description" : "delete individual holdings record from storage"
  }, {
    "permissionName" : "inventory-storage.holdings.batch.post",
    "displayName" : "inventory storage - create a number of holdings",
    "description" : "create a number of holdings in storage"
  }, {
    "permissionName" : "inventory-storage.instances.collection.get",
    "displayName" : "inventory storage - get instance collection",
    "description" : "get instance collection from storage"
  }, {
    "permissionName" : "inventory-storage.instances.collection.delete",
    "displayName" : "inventory storage - delete entire instance collection",
    "description" : "delete entire instance collection from storage"
  }, {
    "permissionName" : "inventory-storage.instances.item.get",
    "displayName" : "inventory storage - get individual instance",
    "description" : "get individual instance from storage"
  }, {
    "permissionName" : "inventory-storage.instances.item.post",
    "displayName" : "inventory storage - create individual instance",
    "description" : "create individual instance in storage"
  }, {
    "permissionName" : "inventory-storage.instances.item.put",
    "displayName" : "inventory storage - modify instance",
    "description" : "modify instance in storage"
  }, {
    "permissionName" : "inventory-storage.instances.item.delete",
    "displayName" : "inventory storage - delete individual instance",
    "description" : "delete individual instance from storage"
  }, {
    "permissionName" : "inventory-storage.instances.preceding-succeeding-titles.collection.put",
    "displayName" : "inventory storage - update preceding/succeeding titles related to instance",
    "description" : "update preceding/succeeding titles related to instance from storage"
  }, {
    "permissionName" : "inventory-storage.instances.batch.post",
    "displayName" : "inventory storage - create a number of instances",
    "description" : "create a number of instances in storage"
  }, {
    "permissionName" : "inventory-storage.instances.source-record.delete",
    "displayName" : "inventory storage - delete source record of an individual instance",
    "description" : "delete source record of individual instance from storage"
  }, {
    "permissionName" : "inventory-storage.instances.source-record.marc-json.get",
    "displayName" : "inventory storage - get MARC JSON source record of an individual instance",
    "description" : "get MARC JSON source record of individual instance from storage"
  }, {
    "permissionName" : "inventory-storage.instances.source-record.marc-json.put",
    "displayName" : "inventory storage - set MARC JSON source record of an individual instance",
    "description" : "set MARC JSON source record of individual instance in storage"
  }, {
    "permissionName" : "inventory-storage.instances.source-record.marc-json.delete",
    "displayName" : "inventory storage - delete MARC JSON source record of an individual instance",
    "description" : "delete MARC JSON source record of individual instance in storage"
  }, {
    "permissionName" : "inventory-storage.loan-types.collection.get",
    "displayName" : "inventory storage - get loan-type collection",
    "description" : "get loan-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.loan-types.item.get",
    "displayName" : "inventory storage - get individual loan-type",
    "description" : "get individual loan-type from storage"
  }, {
    "permissionName" : "inventory-storage.loan-types.item.post",
    "displayName" : "inventory storage - create individual loan-type",
    "description" : "create individual loan-type in storage"
  }, {
    "permissionName" : "inventory-storage.loan-types.item.put",
    "displayName" : "inventory storage - modify loan-type",
    "description" : "modify loan-type in storage"
  }, {
    "permissionName" : "inventory-storage.loan-types.item.delete",
    "displayName" : "inventory storage - delete individual loan-type",
    "description" : "delete individual loan-type from storage"
  }, {
    "permissionName" : "inventory-storage.material-types.collection.get",
    "displayName" : "inventory storage - get material-type collection",
    "description" : "get material-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.material-types.item.get",
    "displayName" : "inventory storage - get individual material-type",
    "description" : "get individual material-type from storage"
  }, {
    "permissionName" : "inventory-storage.material-types.item.post",
    "displayName" : "inventory storage - create individual material-type",
    "description" : "create individual material-type in storage"
  }, {
    "permissionName" : "inventory-storage.material-types.item.put",
    "displayName" : "inventory storage - modify material-type",
    "description" : "modify material-type in storage"
  }, {
    "permissionName" : "inventory-storage.material-types.item.delete",
    "displayName" : "inventory storage - delete individual material-type",
    "description" : "delete individual material-type from storage"
  }, {
    "permissionName" : "inventory-storage.shelf-locations.collection.get",
    "displayName" : "inventory storage - get shelf location collection",
    "description" : "get shelf location collection from storage"
  }, {
    "permissionName" : "inventory-storage.shelf-locations.item.get",
    "displayName" : "inventory storage - get individual shelf location",
    "description" : "get individual shelf location from storage"
  }, {
    "permissionName" : "inventory-storage.shelf-locations.item.post",
    "displayName" : "inventory storage - create individual shelf location",
    "description" : "create individual shelf location in storage"
  }, {
    "permissionName" : "inventory-storage.shelf-locations.item.put",
    "displayName" : "inventory storage - modify shelf location",
    "description" : "modify shelf location in storage"
  }, {
    "permissionName" : "inventory-storage.shelf-locations.item.delete",
    "displayName" : "inventory storage - delete individual shelf location",
    "description" : "delete individual shelf location from storage"
  }, {
    "permissionName" : "inventory-storage.location-units.institutions.collection.get",
    "displayName" : "inventory storage - location units - get institution collection",
    "description" : "Get institution collection"
  }, {
    "permissionName" : "inventory-storage.location-units.institutions.item.get",
    "displayName" : "inventory storage - location units - get individual institution",
    "description" : "get individual institution"
  }, {
    "permissionName" : "inventory-storage.location-units.institutions.item.post",
    "displayName" : "inventory storage - location units - create individual institution",
    "description" : "create individual instution"
  }, {
    "permissionName" : "inventory-storage.location-units.institutions.item.put",
    "displayName" : "inventory storage - location units - modify institution",
    "description" : "modify institution"
  }, {
    "permissionName" : "inventory-storage.location-units.institutions.item.delete",
    "displayName" : "inventory storage - location units - delete individual institution",
    "description" : "delete individual institution"
  }, {
    "permissionName" : "inventory-storage.location-units.campuses.collection.get",
    "displayName" : "inventory storage - location units - get campus collection",
    "description" : "Get campus collection"
  }, {
    "permissionName" : "inventory-storage.location-units.campuses.item.get",
    "displayName" : "inventory storage - location units - get individual campus",
    "description" : "get individual campus"
  }, {
    "permissionName" : "inventory-storage.location-units.campuses.item.post",
    "displayName" : "inventory storage - location units - create individual campus",
    "description" : "create individual instution"
  }, {
    "permissionName" : "inventory-storage.location-units.campuses.item.put",
    "displayName" : "inventory storage - location units - modify campus",
    "description" : "modify campus"
  }, {
    "permissionName" : "inventory-storage.location-units.campuses.item.delete",
    "displayName" : "inventory storage - location units - delete individual campus",
    "description" : "delete individual campus"
  }, {
    "permissionName" : "inventory-storage.location-units.libraries.collection.get",
    "displayName" : "inventory storage - location units - get library collection",
    "description" : "Get library collection"
  }, {
    "permissionName" : "inventory-storage.location-units.libraries.item.get",
    "displayName" : "inventory storage - location units - get individual library",
    "description" : "get individual library"
  }, {
    "permissionName" : "inventory-storage.location-units.libraries.item.post",
    "displayName" : "inventory storage - location units - create individual library",
    "description" : "create individual instution"
  }, {
    "permissionName" : "inventory-storage.location-units.libraries.item.put",
    "displayName" : "inventory storage - location units - modify library",
    "description" : "modify library"
  }, {
    "permissionName" : "inventory-storage.location-units.libraries.item.delete",
    "displayName" : "inventory storage - location units - delete individual library",
    "description" : "delete individual library"
  }, {
    "permissionName" : "inventory-storage.locations.collection.get",
    "displayName" : "inventory storage - locations - get location collection",
    "description" : "get location collection"
  }, {
    "permissionName" : "inventory-storage.locations.item.get",
    "displayName" : "inventory storage - locations - get individual location",
    "description" : "get individual location"
  }, {
    "permissionName" : "inventory-storage.locations.item.post",
    "displayName" : "inventory storage - locations - create individual location",
    "description" : "create individual location"
  }, {
    "permissionName" : "inventory-storage.locations.item.put",
    "displayName" : "inventory storage - locations - modify location",
    "description" : "modify location"
  }, {
    "permissionName" : "inventory-storage.locations.item.delete",
    "displayName" : "inventory storage - locations - delete individual location",
    "description" : "delete individual location"
  }, {
    "permissionName" : "inventory-storage.instance-relationship-types.collection.get",
    "displayName" : "inventory storage - get instance-relationship-type collection",
    "description" : "get instance-relationship-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.instance-relationship-types.item.get",
    "displayName" : "inventory storage - get individual instance-relationship-type",
    "description" : "get individual instance-relationship-type from storage"
  }, {
    "permissionName" : "inventory-storage.instance-relationship-types.item.post",
    "displayName" : "inventory storage - create individual instance-relationship-type",
    "description" : "create individual instance-relationship-type in storage"
  }, {
    "permissionName" : "inventory-storage.instance-relationship-types.item.put",
    "displayName" : "inventory storage - modify instance-relationship-type",
    "description" : "modify instance-relationship-type in storage"
  }, {
    "permissionName" : "inventory-storage.instance-relationship-types.item.delete",
    "displayName" : "inventory storage - delete individual instance-relationship-type",
    "description" : "delete individual instance-relationship-type from storage"
  }, {
    "permissionName" : "inventory-storage.preceding-succeeding-titles.collection.get",
    "displayName" : "inventory storage - get preceding-succeeding-title collection",
    "description" : "get preceding-succeeding-title collection from storage"
  }, {
    "permissionName" : "inventory-storage.preceding-succeeding-titles.item.get",
    "displayName" : "inventory storage - get individual preceding-succeeding-title",
    "description" : "get individual preceding-succeeding-title from storage"
  }, {
    "permissionName" : "inventory-storage.preceding-succeeding-titles.item.post",
    "displayName" : "inventory storage - create individual preceding-succeeding-title",
    "description" : "create individual preceding-succeeding-title in storage"
  }, {
    "permissionName" : "inventory-storage.preceding-succeeding-titles.item.put",
    "displayName" : "inventory storage - modify preceding-succeeding-title",
    "description" : "modify preceding-succeeding-title in storage"
  }, {
    "permissionName" : "inventory-storage.preceding-succeeding-titles.item.delete",
    "displayName" : "inventory storage - delete individual preceding-succeeding-title",
    "description" : "delete individual preceding-succeeding-title from storage"
  }, {
    "permissionName" : "inventory-storage.identifier-types.collection.get",
    "displayName" : "inventory storage - get identifier-type collection",
    "description" : "get identifier-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.identifier-types.item.get",
    "displayName" : "inventory storage - get individual identifier-type",
    "description" : "get individual identifier-type from storage"
  }, {
    "permissionName" : "inventory-storage.identifier-types.item.post",
    "displayName" : "inventory storage - create individual identifier-type",
    "description" : "create individual identifier-type in storage"
  }, {
    "permissionName" : "inventory-storage.identifier-types.item.put",
    "displayName" : "inventory storage - modify identifier-type",
    "description" : "modify identifier-type in storage"
  }, {
    "permissionName" : "inventory-storage.identifier-types.item.delete",
    "displayName" : "inventory storage - delete individual identifier-type",
    "description" : "delete individual identifier-type from storage"
  }, {
    "permissionName" : "inventory-storage.contributor-types.collection.get",
    "displayName" : "inventory storage - get contributor-type collection",
    "description" : "get contributor-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.contributor-types.item.get",
    "displayName" : "inventory storage - get individual contributor-type",
    "description" : "get individual contributor-type from storage"
  }, {
    "permissionName" : "inventory-storage.contributor-types.item.post",
    "displayName" : "inventory storage - create individual contributor-type",
    "description" : "create individual contributor-type in storage"
  }, {
    "permissionName" : "inventory-storage.contributor-types.item.put",
    "displayName" : "inventory storage - modify contributor-type",
    "description" : "modify contributor-type in storage"
  }, {
    "permissionName" : "inventory-storage.contributor-types.item.delete",
    "displayName" : "inventory storage - delete individual contributor-type",
    "description" : "delete individual contributor-type from storage"
  }, {
    "permissionName" : "inventory-storage.service-points.collection.get",
    "displayName" : "inventory storage - get service-point collection",
    "description" : "get service-point collection from storage"
  }, {
    "permissionName" : "inventory-storage.service-points.item.get",
    "displayName" : "inventory storage - get individual service-point",
    "description" : "get individual service-point from storage"
  }, {
    "permissionName" : "inventory-storage.service-points.item.post",
    "displayName" : "inventory storage - create individual service-point",
    "description" : "create individual service-point in storage"
  }, {
    "permissionName" : "inventory-storage.service-points.item.put",
    "displayName" : "inventory storage - modify service-point",
    "description" : "modify service-point in storage"
  }, {
    "permissionName" : "inventory-storage.service-points.item.delete",
    "displayName" : "inventory storage - delete individual service-point",
    "description" : "delete individual service-point from storage"
  }, {
    "permissionName" : "inventory-storage.service-points-users.collection.get",
    "displayName" : "inventory storage - get service-point-users collection",
    "description" : "get service-point-users collection from storage"
  }, {
    "permissionName" : "inventory-storage.service-points-users.item.get",
    "displayName" : "inventory storage - get individual service-points-user",
    "description" : "get individual service-points-user from storage"
  }, {
    "permissionName" : "inventory-storage.service-points-users.item.post",
    "displayName" : "inventory storage - create individual service-points-user",
    "description" : "create individual service-points-user in storage"
  }, {
    "permissionName" : "inventory-storage.service-points-users.item.put",
    "displayName" : "inventory storage - modify service-points-user",
    "description" : "modify service-points-user in storage"
  }, {
    "permissionName" : "inventory-storage.service-points-users.item.delete",
    "displayName" : "inventory storage - delete individual service-points-user",
    "description" : "delete individual service-points-user from storage"
  }, {
    "permissionName" : "inventory-storage.contributor-name-types.collection.get",
    "displayName" : "inventory storage - get contributor-name-type collection",
    "description" : "get contributor-name-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.contributor-name-types.item.get",
    "displayName" : "inventory storage - get individual contributor-name-type",
    "description" : "get individual contributor-name-type from storage"
  }, {
    "permissionName" : "inventory-storage.contributor-name-types.item.post",
    "displayName" : "inventory storage - create individual contributor-name-type",
    "description" : "create individual contributor-name-type in storage"
  }, {
    "permissionName" : "inventory-storage.contributor-name-types.item.put",
    "displayName" : "inventory storage - modify contributor-name-type",
    "description" : "modify contributor-name-type in storage"
  }, {
    "permissionName" : "inventory-storage.contributor-name-types.item.delete",
    "displayName" : "inventory storage - delete individual contributor-name-type",
    "description" : "delete individual contributor-name-type from storage"
  }, {
    "permissionName" : "inventory-storage.record-bulk.ids.get",
    "displayName" : "inventory storage - get bulk ids",
    "description" : "get a bulk set of record ids from storage"
  }, {
    "permissionName" : "inventory-storage.instance-formats.collection.get",
    "displayName" : "inventory storage - get formats collection",
    "description" : "get contributor-name-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.instance-formats.item.get",
    "displayName" : "inventory storage - get individual format",
    "description" : "get individual instance format from storage"
  }, {
    "permissionName" : "inventory-storage.instance-formats.item.post",
    "displayName" : "inventory storage - create individual format",
    "description" : "create individual instance format in storage"
  }, {
    "permissionName" : "inventory-storage.instance-formats.item.put",
    "displayName" : "inventory storage - modify format",
    "description" : "modify instance format in storage"
  }, {
    "permissionName" : "inventory-storage.instance-formats.item.delete",
    "displayName" : "inventory storage - delete individual format",
    "description" : "delete individual instance format from storage"
  }, {
    "permissionName" : "inventory-storage.instance-types.collection.get",
    "displayName" : "inventory storage - get instance types collection",
    "description" : "get instance-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.instance-types.item.get",
    "displayName" : "inventory storage - get individual instance type",
    "description" : "get individual instance type from storage"
  }, {
    "permissionName" : "inventory-storage.instance-types.item.post",
    "displayName" : "inventory storage - create individual instance type",
    "description" : "create individual instance type in storage"
  }, {
    "permissionName" : "inventory-storage.instance-types.item.put",
    "displayName" : "inventory storage - modify instance type",
    "description" : "modify instance type in storage"
  }, {
    "permissionName" : "inventory-storage.instance-types.item.delete",
    "displayName" : "inventory storage - delete individual instance type",
    "description" : "delete instance type in storage"
  }, {
    "permissionName" : "inventory-storage.nature-of-content-terms.collection.get",
    "displayName" : "inventory storage - get content terms collection",
    "description" : "get nature-of-content terms collection from storage"
  }, {
    "permissionName" : "inventory-storage.nature-of-content-terms.item.get",
    "displayName" : "inventory storage - get individual content term",
    "description" : "get individual nature-of-content term from storage"
  }, {
    "permissionName" : "inventory-storage.nature-of-content-terms.item.post",
    "displayName" : "inventory storage - create individual content term",
    "description" : "create individual nature-of-content term in storage"
  }, {
    "permissionName" : "inventory-storage.nature-of-content-terms.item.put",
    "displayName" : "inventory storage - modify content term",
    "description" : "modify nature-of-content term in storage"
  }, {
    "permissionName" : "inventory-storage.nature-of-content-terms.item.delete",
    "displayName" : "inventory storage - delete individual content term",
    "description" : "delete nature-of-content term in storage"
  }, {
    "permissionName" : "inventory-storage.classification-types.collection.get",
    "displayName" : "inventory storage - get classification types collection",
    "description" : "get classification types collection from storage"
  }, {
    "permissionName" : "inventory-storage.classification-types.item.get",
    "displayName" : "inventory storage - get individual classification type",
    "description" : "get individual classification type from storage"
  }, {
    "permissionName" : "inventory-storage.classification-types.item.post",
    "displayName" : "inventory storage - create individual classification type",
    "description" : "create individual classification type in storage"
  }, {
    "permissionName" : "inventory-storage.classification-types.item.put",
    "displayName" : "inventory storage - modify classification type",
    "description" : "modify classification type in storage"
  }, {
    "permissionName" : "inventory-storage.classification-types.item.delete",
    "displayName" : "inventory storage - delete individual classification type",
    "description" : "delete individual classification qualifier from storage"
  }, {
    "permissionName" : "inventory-storage.alternative-title-types.collection.get",
    "displayName" : "inventory storage - get alternative-title-type collection",
    "description" : "get alternative-title-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.alternative-title-types.item.get",
    "displayName" : "inventory storage - get individual alternative-title-type",
    "description" : "get individual alternative-title-type from storage"
  }, {
    "permissionName" : "inventory-storage.alternative-title-types.item.post",
    "displayName" : "inventory storage - create individual alternative-title-type",
    "description" : "create individual alternative-title-type in storage"
  }, {
    "permissionName" : "inventory-storage.alternative-title-types.item.put",
    "displayName" : "inventory storage - modify alternative-title-type",
    "description" : "modify alternative-title-type in storage"
  }, {
    "permissionName" : "inventory-storage.alternative-title-types.item.delete",
    "displayName" : "inventory storage - delete individual alternative-title-type",
    "description" : "delete individual alternative-title-type from storage"
  }, {
    "permissionName" : "inventory-storage.modes-of-issuance.collection.get",
    "displayName" : "inventory storage - get modes of issuance collection",
    "description" : "get modes of issuance collection from storage"
  }, {
    "permissionName" : "inventory-storage.modes-of-issuance.item.get",
    "displayName" : "inventory storage - get individual mode of issuance",
    "description" : "get individual mode of issuance from storage"
  }, {
    "permissionName" : "inventory-storage.modes-of-issuance.item.post",
    "displayName" : "inventory storage - create individual mode of issuance",
    "description" : "create individual mode of issuance in storage"
  }, {
    "permissionName" : "inventory-storage.modes-of-issuance.item.put",
    "displayName" : "inventory storage - modify mode of issuance",
    "description" : "modify mode of issuance in storage"
  }, {
    "permissionName" : "inventory-storage.modes-of-issuance.item.delete",
    "displayName" : "inventory storage - delete individual mode of issuance",
    "description" : "delete individual mode of issuance from storage"
  }, {
    "permissionName" : "inventory-storage.instance-statuses.collection.get",
    "displayName" : "inventory storage - get instance status collection",
    "description" : "get instance status collection from storage"
  }, {
    "permissionName" : "inventory-storage.instance-statuses.item.get",
    "displayName" : "inventory storage - get individual instance status",
    "description" : "get individual instance status from storage"
  }, {
    "permissionName" : "inventory-storage.instance-statuses.item.post",
    "displayName" : "inventory storage - create individual instance status",
    "description" : "create individual instance status in storage"
  }, {
    "permissionName" : "inventory-storage.instance-statuses.item.put",
    "displayName" : "inventory storage - modify instance status",
    "description" : "modify instance status in storage"
  }, {
    "permissionName" : "inventory-storage.instance-statuses.item.delete",
    "displayName" : "inventory storage - delete individual instance status",
    "description" : "delete individual instance status from storage"
  }, {
    "permissionName" : "inventory-storage.electronic-access-relationships.collection.get",
    "displayName" : "inventory storage - get URL relationship types collection",
    "description" : "get statistical codes collection from storage"
  }, {
    "permissionName" : "inventory-storage.electronic-access-relationships.item.get",
    "displayName" : "inventory storage - get individual URL relationship type",
    "description" : "get individual statistical code from storage"
  }, {
    "permissionName" : "inventory-storage.electronic-access-relationships.item.post",
    "displayName" : "inventory storage - create individual URL relationship type",
    "description" : "create individual statistical code in storage"
  }, {
    "permissionName" : "inventory-storage.electronic-access-relationships.item.put",
    "displayName" : "inventory storage - modify URL relationship type",
    "description" : "modify statistical code in storage"
  }, {
    "permissionName" : "inventory-storage.electronic-access-relationships.item.delete",
    "displayName" : "inventory storage - delete individual URL relationship",
    "description" : "delete individual URL relationship type from storage"
  }, {
    "permissionName" : "inventory-storage.statistical-code-types.collection.get",
    "displayName" : "inventory storage - get statistical code types collection",
    "description" : "get statistical code types collection from storage"
  }, {
    "permissionName" : "inventory-storage.statistical-code-types.item.get",
    "displayName" : "inventory storage - get individual statistical code type",
    "description" : "get individual statistical code type from storage"
  }, {
    "permissionName" : "inventory-storage.statistical-code-types.item.post",
    "displayName" : "inventory storage - create individual statistical code type",
    "description" : "create individual statistical code type in storage"
  }, {
    "permissionName" : "inventory-storage.statistical-code-types.item.put",
    "displayName" : "inventory storage - modify statistical code type",
    "description" : "modify statistical code type in storage"
  }, {
    "permissionName" : "inventory-storage.statistical-code-types.item.delete",
    "displayName" : "inventory storage - delete individual statistical code type",
    "description" : "delete individual statistical code type from storage"
  }, {
    "permissionName" : "inventory-storage.statistical-codes.collection.get",
    "displayName" : "inventory storage - get statistical codes collection",
    "description" : "get statistical codes collection from storage"
  }, {
    "permissionName" : "inventory-storage.statistical-codes.item.get",
    "displayName" : "inventory storage - get individual statistical code",
    "description" : "get individual statistical code from storage"
  }, {
    "permissionName" : "inventory-storage.statistical-codes.item.post",
    "displayName" : "inventory storage - create individual statistical code",
    "description" : "create individual statistical code in storage"
  }, {
    "permissionName" : "inventory-storage.statistical-codes.item.put",
    "displayName" : "inventory storage - modify statistical code",
    "description" : "modify statistical code in storage"
  }, {
    "permissionName" : "inventory-storage.statistical-codes.item.delete",
    "displayName" : "inventory storage - delete individual statistical code",
    "description" : "delete individual statistical code from storage"
  }, {
    "permissionName" : "inventory-storage.ill-policies.collection.get",
    "displayName" : "inventory storage - get ill-policy collection",
    "description" : "get ill-policy collection from storage"
  }, {
    "permissionName" : "inventory-storage.ill-policies.item.get",
    "displayName" : "inventory storage - get individual ill-policy",
    "description" : "get individual ill-policy from storage"
  }, {
    "permissionName" : "inventory-storage.ill-policies.item.post",
    "displayName" : "inventory storage - create individual ill-policy",
    "description" : "create individual ill-policy in storage"
  }, {
    "permissionName" : "inventory-storage.ill-policies.item.put",
    "displayName" : "inventory storage - modify ill-policy",
    "description" : "modify ill-policy in storage"
  }, {
    "permissionName" : "inventory-storage.ill-policies.item.delete",
    "displayName" : "inventory storage - delete individual ill-policy",
    "description" : "delete individual ill-policy from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-types.collection.get",
    "displayName" : "inventory storage - get holdings-type collection",
    "description" : "get holdings-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-types.item.get",
    "displayName" : "inventory storage - get individual holdings-type",
    "description" : "get individual holdings-type from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-types.item.post",
    "displayName" : "inventory storage - create individual holdings-type",
    "description" : "create individual holdings-type in storage"
  }, {
    "permissionName" : "inventory-storage.holdings-types.item.put",
    "displayName" : "inventory storage - modify holdings-type",
    "description" : "modify holdings-type in storage"
  }, {
    "permissionName" : "inventory-storage.holdings-types.item.delete",
    "displayName" : "inventory storage - delete individual holdings-type",
    "description" : "delete individual holdings-type from storage"
  }, {
    "permissionName" : "inventory-storage.instance-note-types.collection.get",
    "displayName" : "inventory storage - get instance-note-type collection",
    "description" : "get instance-note-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.instance-note-types.item.get",
    "displayName" : "inventory storage - get individual instance-note-type",
    "description" : "get individual instance-note-type from storage"
  }, {
    "permissionName" : "inventory-storage.instance-note-types.item.post",
    "displayName" : "inventory storage - create individual instance-note-type",
    "description" : "create individual instance-note-type in storage"
  }, {
    "permissionName" : "inventory-storage.instance-note-types.item.put",
    "displayName" : "inventory storage - modify instance-note-type",
    "description" : "modify instance-note-type in storage"
  }, {
    "permissionName" : "inventory-storage.instance-note-types.item.delete",
    "displayName" : "inventory storage - delete individual instance-note-type",
    "description" : "delete individual instance-note-type from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-note-types.collection.get",
    "displayName" : "inventory storage - get holdings-note-type collection",
    "description" : "get holdings-note-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-note-types.item.get",
    "displayName" : "inventory storage - get individual holdings-note-type",
    "description" : "get individual holdings-note-type from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-note-types.item.post",
    "displayName" : "inventory storage - create individual holdings-note-type",
    "description" : "create individual holdings-note-type in storage"
  }, {
    "permissionName" : "inventory-storage.holdings-note-types.item.put",
    "displayName" : "inventory storage - modify holdings-note-type",
    "description" : "modify holdings-note-type in storage"
  }, {
    "permissionName" : "inventory-storage.holdings-note-types.item.delete",
    "displayName" : "inventory storage - delete individual holdings-note-type",
    "description" : "delete individual holdings-note-type from storage"
  }, {
    "permissionName" : "inventory-storage.item-note-types.collection.get",
    "displayName" : "inventory storage - get item-note-type collection",
    "description" : "get item-note-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.item-note-types.item.get",
    "displayName" : "inventory storage - get individual item-note-type",
    "description" : "get individual item-note-type from storage"
  }, {
    "permissionName" : "inventory-storage.item-note-types.item.post",
    "displayName" : "inventory storage - create individual item-note-type",
    "description" : "create individual item-note-type in storage"
  }, {
    "permissionName" : "inventory-storage.item-note-types.item.put",
    "displayName" : "inventory storage - modify item-note-type",
    "description" : "modify item-note-type in storage"
  }, {
    "permissionName" : "inventory-storage.item-note-types.item.delete",
    "displayName" : "inventory storage - delete individual item-note-type",
    "description" : "delete individual item-note-type from storage"
  }, {
    "permissionName" : "inventory-storage.item-damaged-statuses.collection.get",
    "displayName" : "inventory storage - get item-damaged-statuses collection",
    "description" : "get item-damaged-statuses collection from storage"
  }, {
    "permissionName" : "inventory-storage.item-damaged-statuses.item.get",
    "displayName" : "inventory storage - get individual item-damaged-status",
    "description" : "get individual item-damaged-status from storage"
  }, {
    "permissionName" : "inventory-storage.item-damaged-statuses.item.post",
    "displayName" : "inventory storage - create individual item-damaged-status",
    "description" : "create individual item-damaged-status in storage"
  }, {
    "permissionName" : "inventory-storage.item-damaged-statuses.item.put",
    "displayName" : "inventory storage - modify item-damaged-status",
    "description" : "modify item-damaged-status in storage"
  }, {
    "permissionName" : "inventory-storage.item-damaged-statuses.item.delete",
    "displayName" : "inventory storage - delete individual item-damaged-status",
    "description" : "delete individual item-damaged-status from storage"
  }, {
    "permissionName" : "inventory-storage.call-number-types.collection.get",
    "displayName" : "inventory storage - get call-number-type collection",
    "description" : "get call-number-type collection from storage"
  }, {
    "permissionName" : "inventory-storage.call-number-types.item.get",
    "displayName" : "inventory storage - get individual call-number-type",
    "description" : "get individual call-number-type from storage"
  }, {
    "permissionName" : "inventory-storage.call-number-types.item.post",
    "displayName" : "inventory storage - create individual call-number-type",
    "description" : "create individual call-number-type in storage"
  }, {
    "permissionName" : "inventory-storage.call-number-types.item.put",
    "displayName" : "inventory storage - modify call-number-type",
    "description" : "modify call-number-type in storage"
  }, {
    "permissionName" : "inventory-storage.call-number-types.item.delete",
    "displayName" : "inventory storage - delete individual call-number-type",
    "description" : "delete individual call-number-type from storage"
  }, {
    "permissionName" : "inventory-storage.hrid-settings.item.get",
    "displayName" : "inventory storage - get HRID settings",
    "description" : "get the HRID settings from storage"
  }, {
    "permissionName" : "inventory-storage.hrid-settings.item.put",
    "displayName" : "inventory storage - modify HRID settings",
    "description" : "modify the HRID settings in storage"
  }, {
    "permissionName" : "inventory-storage.oai-pmh-view.instances.collection.get",
    "displayName" : "inventory storage - get instances for oai pmh",
    "description" : "get instances for oai pmh"
  }, {
    "permissionName" : "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get",
    "displayName" : "inventory storage - get updated instances ids for oai pmh",
    "description" : "get updated instances ids for oai pmh"
  }, {
    "permissionName" : "inventory-storage.oai-pmh-view.enrichedinstances.collection.post",
    "displayName" : "inventory storage - get enriched instances for oai pmh",
    "description" : "get enriched instances for oai pmh"
  }, {
    "permissionName" : "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get",
    "displayName" : "inventory storage - get updated instances ids for inventory storage",
    "description" : "get updated instances ids for inventory storage"
  }, {
    "permissionName" : "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post",
    "displayName" : "inventory storage - get instances holdings and items for inventory storage",
    "description" : "get instances holdings and items for inventory storage"
  }, {
    "permissionName" : "inventory-storage.holdings-sources.collection.get",
    "displayName" : "inventory storage - get holdings-source collection",
    "description" : "get holdings-records-source collection from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-sources.item.get",
    "displayName" : "inventory storage - get individual holdings-source",
    "description" : "get individual holdings-records-source from storage"
  }, {
    "permissionName" : "inventory-storage.holdings-sources.item.post",
    "displayName" : "inventory storage - create individual holdings-source",
    "description" : "create individual holdings-records-source in storage"
  }, {
    "permissionName" : "inventory-storage.holdings-sources.item.put",
    "displayName" : "inventory storage - modify holdings-source",
    "description" : "modify holdings-records-source in storage"
  }, {
    "permissionName" : "inventory-storage.holdings-sources.item.delete",
    "displayName" : "inventory storage - delete individual holdings-source",
    "description" : "delete individual holdings-source from storage"
  }, {
    "permissionName" : "inventory-storage.bound-with-parts.collection.get",
    "displayName" : "inventory storage - get parts of bound-with(s)",
    "description" : "get holdings-records associated with bound-with items"
  }, {
    "permissionName" : "inventory-storage.bound-with-parts.item.get",
    "displayName" : "inventory storage - get a part of a bound-with",
    "description" : "get a holdings-record id associated with a bound-with item"
  }, {
    "permissionName" : "inventory-storage.bound-with-parts.item.post",
    "displayName" : "inventory storage - add a part to a bound-with",
    "description" : "add a holdings record to a bound-with by associating it with the bound-with item"
  }, {
    "permissionName" : "inventory-storage.bound-with-parts.item.put",
    "displayName" : "inventory storage - modify a bound-with part",
    "description" : "replace a holdings-record of a bound-with or move it to a different bound-with"
  }, {
    "permissionName" : "inventory-storage.bound-with-parts.item.delete",
    "displayName" : "inventory storage - remove part of a bound-with",
    "description" : "remove a holdings-record from a bound-with"
  }, {
    "permissionName" : "inventory-storage.instance.reindex.item.delete",
    "displayName" : "inventory storage - cancel reindex job",
    "description" : "cancel a running reindexing job"
  }, {
    "permissionName" : "inventory-storage.instance.reindex.item.get",
    "displayName" : "inventory storage - get reindex job by id",
    "description" : "get reindex job by id"
  }, {
    "permissionName" : "inventory-storage.instance.reindex.post",
    "displayName" : "inventory storage - submit reindex instance job",
    "description" : "submit reindex instance job"
  }, {
    "permissionName" : "inventory-storage.inventory-view.instances.collection.get",
    "displayName" : "inventory view - get instances by query with their holdings and items",
    "description" : "get instances by query with their holdings and items"
  }, {
    "permissionName" : "inventory-storage.all",
    "displayName" : "inventory storage module - all permissions",
    "description" : "Entire set of permissions needed to use the inventory storage module",
    "subPermissions" : [ "inventory-storage.items.collection.get", "inventory-storage.items.item.get", "inventory-storage.items.item.post", "inventory-storage.items.item.put", "inventory-storage.items.item.delete", "inventory-storage.items.collection.delete", "inventory-storage.items.batch.post", "inventory-storage.holdings.collection.get", "inventory-storage.holdings.item.get", "inventory-storage.holdings.item.post", "inventory-storage.holdings.item.put", "inventory-storage.holdings.item.delete", "inventory-storage.holdings.collection.delete", "inventory-storage.holdings.batch.post", "inventory-storage.instances.collection.get", "inventory-storage.instances.item.get", "inventory-storage.instances.item.post", "inventory-storage.instances.item.put", "inventory-storage.instances.item.delete", "inventory-storage.instances.preceding-succeeding-titles.collection.put", "inventory-storage.instances.source-record.delete", "inventory-storage.instances.source-record.marc-json.get", "inventory-storage.instances.source-record.marc-json.put", "inventory-storage.instances.source-record.marc-json.delete", "inventory-storage.instances.collection.delete", "inventory-storage.instances.batch.post", "inventory-storage.loan-types.collection.get", "inventory-storage.loan-types.item.get", "inventory-storage.loan-types.item.post", "inventory-storage.loan-types.item.put", "inventory-storage.loan-types.item.delete", "inventory-storage.material-types.collection.get", "inventory-storage.material-types.item.get", "inventory-storage.material-types.item.post", "inventory-storage.material-types.item.put", "inventory-storage.material-types.item.delete", "inventory-storage.shelf-locations.collection.get", "inventory-storage.shelf-locations.item.get", "inventory-storage.shelf-locations.item.post", "inventory-storage.shelf-locations.item.put", "inventory-storage.shelf-locations.item.delete", "inventory-storage.location-units.institutions.collection.get", "inventory-storage.location-units.institutions.item.get", "inventory-storage.location-units.institutions.item.post", "inventory-storage.location-units.institutions.item.put", "inventory-storage.location-units.institutions.item.delete", "inventory-storage.location-units.campuses.collection.get", "inventory-storage.location-units.campuses.item.get", "inventory-storage.location-units.campuses.item.post", "inventory-storage.location-units.campuses.item.put", "inventory-storage.location-units.campuses.item.delete", "inventory-storage.location-units.libraries.collection.get", "inventory-storage.location-units.libraries.item.get", "inventory-storage.location-units.libraries.item.post", "inventory-storage.location-units.libraries.item.put", "inventory-storage.location-units.libraries.item.delete", "inventory-storage.locations.collection.get", "inventory-storage.locations.item.get", "inventory-storage.locations.item.post", "inventory-storage.locations.item.put", "inventory-storage.locations.item.delete", "inventory-storage.instance-relationships.collection.get", "inventory-storage.instance-relationships.item.get", "inventory-storage.instance-relationships.item.post", "inventory-storage.instance-relationships.item.put", "inventory-storage.instance-relationships.item.delete", "inventory-storage.instance-relationship-types.collection.get", "inventory-storage.instance-relationship-types.item.get", "inventory-storage.instance-relationship-types.item.post", "inventory-storage.instance-relationship-types.item.put", "inventory-storage.instance-relationship-types.item.delete", "inventory-storage.identifier-types.collection.get", "inventory-storage.identifier-types.item.get", "inventory-storage.identifier-types.item.post", "inventory-storage.identifier-types.item.put", "inventory-storage.identifier-types.item.delete", "inventory-storage.contributor-types.collection.get", "inventory-storage.contributor-types.item.get", "inventory-storage.contributor-types.item.post", "inventory-storage.contributor-types.item.put", "inventory-storage.contributor-types.item.delete", "inventory-storage.contributor-name-types.collection.get", "inventory-storage.contributor-name-types.item.get", "inventory-storage.contributor-name-types.item.post", "inventory-storage.contributor-name-types.item.put", "inventory-storage.contributor-name-types.item.delete", "inventory-storage.record-bulk.ids.get", "inventory-storage.instance-formats.collection.get", "inventory-storage.instance-formats.item.get", "inventory-storage.instance-formats.item.post", "inventory-storage.instance-formats.item.put", "inventory-storage.instance-formats.item.delete", "inventory-storage.instance-types.collection.get", "inventory-storage.instance-types.item.get", "inventory-storage.instance-types.item.post", "inventory-storage.instance-types.item.put", "inventory-storage.instance-types.item.delete", "inventory-storage.nature-of-content-terms.collection.get", "inventory-storage.nature-of-content-terms.item.get", "inventory-storage.nature-of-content-terms.item.post", "inventory-storage.nature-of-content-terms.item.put", "inventory-storage.nature-of-content-terms.item.delete", "inventory-storage.classification-types.collection.get", "inventory-storage.classification-types.item.get", "inventory-storage.classification-types.item.post", "inventory-storage.classification-types.item.put", "inventory-storage.classification-types.item.delete", "inventory-storage.alternative-title-types.collection.get", "inventory-storage.alternative-title-types.item.get", "inventory-storage.alternative-title-types.item.post", "inventory-storage.alternative-title-types.item.put", "inventory-storage.alternative-title-types.item.delete", "inventory-storage.modes-of-issuance.collection.get", "inventory-storage.modes-of-issuance.item.get", "inventory-storage.modes-of-issuance.item.post", "inventory-storage.modes-of-issuance.item.put", "inventory-storage.modes-of-issuance.item.delete", "inventory-storage.instance-statuses.collection.get", "inventory-storage.instance-statuses.item.get", "inventory-storage.instance-statuses.item.post", "inventory-storage.instance-statuses.item.put", "inventory-storage.instance-statuses.item.delete", "inventory-storage.electronic-access-relationships.collection.get", "inventory-storage.electronic-access-relationships.item.get", "inventory-storage.electronic-access-relationships.item.post", "inventory-storage.electronic-access-relationships.item.put", "inventory-storage.electronic-access-relationships.item.delete", "inventory-storage.statistical-code-types.collection.get", "inventory-storage.statistical-code-types.item.get", "inventory-storage.statistical-code-types.item.post", "inventory-storage.statistical-code-types.item.put", "inventory-storage.statistical-code-types.item.delete", "inventory-storage.statistical-codes.collection.get", "inventory-storage.statistical-codes.item.get", "inventory-storage.statistical-codes.item.post", "inventory-storage.statistical-codes.item.put", "inventory-storage.statistical-codes.item.delete", "inventory-storage.ill-policies.collection.get", "inventory-storage.ill-policies.item.get", "inventory-storage.ill-policies.item.post", "inventory-storage.ill-policies.item.put", "inventory-storage.ill-policies.item.delete", "inventory-storage.holdings-types.collection.get", "inventory-storage.holdings-types.item.get", "inventory-storage.holdings-types.item.post", "inventory-storage.holdings-types.item.put", "inventory-storage.holdings-types.item.delete", "inventory-storage.call-number-types.collection.get", "inventory-storage.call-number-types.item.get", "inventory-storage.call-number-types.item.post", "inventory-storage.call-number-types.item.put", "inventory-storage.call-number-types.item.delete", "inventory-storage.instance-note-types.collection.get", "inventory-storage.instance-note-types.item.get", "inventory-storage.instance-note-types.item.post", "inventory-storage.instance-note-types.item.put", "inventory-storage.instance-note-types.item.delete", "inventory-storage.holdings-note-types.collection.get", "inventory-storage.holdings-note-types.item.get", "inventory-storage.holdings-note-types.item.post", "inventory-storage.holdings-note-types.item.put", "inventory-storage.holdings-note-types.item.delete", "inventory-storage.item-note-types.collection.get", "inventory-storage.item-note-types.item.get", "inventory-storage.item-note-types.item.post", "inventory-storage.item-note-types.item.put", "inventory-storage.item-note-types.item.delete", "inventory-storage.item-damaged-statuses.collection.get", "inventory-storage.item-damaged-statuses.item.get", "inventory-storage.item-damaged-statuses.item.post", "inventory-storage.item-damaged-statuses.item.put", "inventory-storage.item-damaged-statuses.item.delete", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get", "inventory-storage.service-points.item.post", "inventory-storage.service-points.item.put", "inventory-storage.service-points.item.delete", "inventory-storage.service-points-users.collection.get", "inventory-storage.service-points-users.item.get", "inventory-storage.service-points-users.item.post", "inventory-storage.service-points-users.item.put", "inventory-storage.service-points-users.item.delete", "inventory-storage.hrid-settings.item.get", "inventory-storage.hrid-settings.item.put", "inventory-storage.preceding-succeeding-titles.collection.get", "inventory-storage.preceding-succeeding-titles.item.get", "inventory-storage.preceding-succeeding-titles.item.post", "inventory-storage.preceding-succeeding-titles.item.put", "inventory-storage.preceding-succeeding-titles.item.delete", "inventory-storage.oai-pmh-view.instances.collection.get", "inventory-storage.oai-pmh-view.updatedinstanceids.collection.get", "inventory-storage.oai-pmh-view.enrichedinstances.collection.post", "inventory-storage.holdings-sources.collection.get", "inventory-storage.holdings-sources.get", "inventory-storage.holdings-sources.post", "inventory-storage.holdings-sources.put", "inventory-storage.holdings-sources.delete", "inventory-storage.bound-with-parts.collection.get", "inventory-storage.bound-with-parts.item.get", "inventory-storage.bound-with-parts.item.post", "inventory-storage.bound-with-parts.item.put", "inventory-storage.bound-with-parts.item.delete", "inventory-storage.inventory-hierarchy.updated-instances-ids.collection.get", "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post", "inventory-storage.inventory-view.instances.collection.get", "inventory-storage.inventory-hierarchy.items-and-holdings.collection.post", "inventory-storage.instance.reindex.item.delete", "inventory-storage.instance.reindex.item.get", "inventory-storage.instance.reindex.post" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-inventory-storage:22.0.0-SNAPSHOT.595",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "ENV",
      "value" : "folio"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    }, {
      "name" : "KAFKA_HOST",
      "value" : "kafka"
    }, {
      "name" : "KAFKA_PORT",
      "value" : "9092"
    }, {
      "name" : "REPLICATION_FACTOR",
      "value" : "1"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 715827883,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-inventory-storage-22.0.0-SNAPSHOT.595] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:34 GMT
Content-Type: text/plain
Content-Length: 58
Connection: keep-alive
vary: origin

Duplicate instId mod-inventory-storage-22.0.0-SNAPSHOT.595
------------------ [mod-inventory-storage-22.0.0-SNAPSHOT.595] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:34 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-inventory-storage-22.0.0-SNAPSHOT.595] Enabling module for tenant ------------------
[{"id":"mod-inventory-storage-22.0.0-SNAPSHOT.595","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:34 GMT
Content-Type: application/json
Content-Length: 85
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 41712us

[ {
  "id" : "mod-inventory-storage-22.0.0-SNAPSHOT.595",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-login] Getting descriptor ------------------
------------------ [mod-login-7.5.0-SNAPSHOT.98] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:39 GMT
Content-Type: application/json
Content-Length: 6204
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-login-7.5.0-SNAPSHOT.98
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 48900us

{
  "id" : "mod-login-7.5.0-SNAPSHOT.98",
  "name" : "login",
  "requires" : [ {
    "id" : "users",
    "version" : "15.0"
  } ],
  "provides" : [ {
    "id" : "login",
    "version" : "7.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/log/events",
      "permissionsRequired" : [ "login.event.collection.post" ],
      "modulePermissions" : [ "users.collection.get", "configuration.entries.collection.get", "configuration.entries.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/authn/log/events",
      "permissionsRequired" : [ "login.event.collection.get" ],
      "modulePermissions" : [ "configuration.entries.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/authn/log/events/{id}",
      "permissionsRequired" : [ "login.event.delete" ],
      "modulePermissions" : [ "configuration.entries.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/login",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "auth.signtoken", "auth.signrefreshtoken", "users.collection.get", "users.item.put", "users.item.get", "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/authn/loginAttempts/{id}",
      "permissionsRequired" : [ "login.attempts.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/credentials",
      "permissionsRequired" : [ "login.item.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/authn/credentials",
      "permissionsRequired" : [ "login.item.delete" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/update",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "users.collection.get", "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/password/repeatable",
      "permissionsRequired" : [ "login.password.validate" ],
      "modulePermissions" : [ "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/password-reset-action",
      "permissionsRequired" : [ "login.password-reset-action.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/authn/password-reset-action/{actionId}",
      "permissionsRequired" : [ "login.password-reset-action.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/authn/reset-password",
      "permissionsRequired" : [ "login.password-reset.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/authn/credentials-existence",
      "permissionsRequired" : [ "login.credentials-existence.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "login.item.post",
    "displayName" : "login item post",
    "description" : "Add New Login"
  }, {
    "permissionName" : "login.item.delete",
    "displayName" : "login item delete",
    "description" : "Remove existing login credentials"
  }, {
    "permissionName" : "login.attempts.item.get",
    "displayName" : "login attempt item get",
    "description" : "Read a login attempt entity for user"
  }, {
    "permissionName" : "login.password.validate",
    "displayName" : "login password validate",
    "description" : "Validate password for repeatability"
  }, {
    "permissionName" : "login.password-reset-action.post",
    "displayName" : "login create a new action",
    "description" : "Saves action to storage"
  }, {
    "permissionName" : "login.password-reset-action.get",
    "displayName" : "login get the action by id",
    "description" : "Retrieves action record by id"
  }, {
    "permissionName" : "login.password-reset.post",
    "displayName" : "login password reset",
    "description" : "Resets password for user in record and deletes action record"
  }, {
    "permissionName" : "login.event.collection.post",
    "displayName" : "login save log event",
    "description" : "Saves received event into the storage"
  }, {
    "permissionName" : "login.event.collection.get",
    "displayName" : "login get a list of events",
    "description" : "Get a list of events from storage"
  }, {
    "permissionName" : "login.event.delete",
    "displayName" : "login delete event",
    "description" : "Delete log event"
  }, {
    "permissionName" : "login.credentials-existence.get",
    "displayName" : "Credentials existence get",
    "description" : "Get credentials existence"
  }, {
    "permissionName" : "login.all",
    "displayName" : "login credentials",
    "description" : "All permissions for login credentials",
    "subPermissions" : [ "login.item.post", "login.item.delete", "login.attempts.item.get", "login.password.validate", "login.password-reset-action.get", "login.password-reset-action.post", "login.password-reset.post", "login.password.validate", "login.event.collection.post", "login.event.collection.get", "login.event.delete", "login.credentials-existence.get" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-login:7.5.0-SNAPSHOT.98",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    },
    "dockerCMD" : [ "verify.user=true" ]
  }
}
------------------ [mod-login-7.5.0-SNAPSHOT.98] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:39 GMT
Content-Type: text/plain
Content-Length: 44
Connection: keep-alive
vary: origin

Duplicate instId mod-login-7.5.0-SNAPSHOT.98
------------------ [mod-login-7.5.0-SNAPSHOT.98] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:39 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-login-7.5.0-SNAPSHOT.98] Enabling module for tenant ------------------
[{"id":"mod-login-7.5.0-SNAPSHOT.98","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:39 GMT
Content-Type: application/json
Content-Length: 71
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 90378us

[ {
  "id" : "mod-login-7.5.0-SNAPSHOT.98",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-login-saml] Getting descriptor ------------------
------------------ [mod-login-saml-2.2.2-SNAPSHOT.74] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:44 GMT
Content-Type: application/json
Content-Length: 3136
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-login-saml-2.2.2-SNAPSHOT.74
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 75447us

{
  "id" : "mod-login-saml-2.2.2-SNAPSHOT.74",
  "name" : "SAML login",
  "requires" : [ {
    "id" : "authtoken",
    "version" : "1.0 2.0"
  }, {
    "id" : "users",
    "version" : "14.0 15.0"
  }, {
    "id" : "configuration",
    "version" : "2.0"
  } ],
  "provides" : [ {
    "id" : "login-saml",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/saml/login",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "configuration.entries.collection.get" ],
      "delegateCORS" : true
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/saml/callback",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "auth.signtoken", "configuration.entries.collection.get", "users.collection.get" ],
      "delegateCORS" : true
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/saml/regenerate",
      "permissionsRequired" : [ "login-saml.regenerate" ],
      "modulePermissions" : [ "configuration.entries.collection.get", "configuration.entries.item.post", "configuration.entries.item.put" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/saml/check",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/saml/configuration",
      "permissionsRequired" : [ "login-saml.configuration.get" ],
      "modulePermissions" : [ "configuration.entries.collection.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/saml/configuration",
      "permissionsRequired" : [ "login-saml.configuration.put" ],
      "modulePermissions" : [ "configuration.entries.collection.get", "configuration.entries.item.post", "configuration.entries.item.put" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/saml/validate",
      "permissionsRequired" : [ ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "login-saml.regenerate",
    "displayName" : "SAML sp-metadata regeneration",
    "description" : ""
  }, {
    "permissionName" : "login-saml.configuration.get",
    "displayName" : "SAML configuration: view",
    "description" : "Grants the ability to view SAML configuration",
    "visible" : true
  }, {
    "permissionName" : "login-saml.configuration.put",
    "displayName" : "SAML configuration: modify",
    "description" : "Grants the ability to modify SAML configuration",
    "visible" : true
  }, {
    "permissionName" : "login-saml.all",
    "displayName" : "Login-SAML: administration",
    "description" : "",
    "subPermissions" : [ "login-saml.regenerate", "login-saml.configuration.get", "login-saml.configuration.put" ],
    "visible" : true
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-login-saml:2.2.2-SNAPSHOT.74",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-login-saml-2.2.2-SNAPSHOT.74] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:44 GMT
Content-Type: text/plain
Content-Length: 49
Connection: keep-alive
vary: origin

Duplicate instId mod-login-saml-2.2.2-SNAPSHOT.74
------------------ [mod-login-saml-2.2.2-SNAPSHOT.74] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:44 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-login-saml-2.2.2-SNAPSHOT.74] Enabling module for tenant ------------------
[{"id":"mod-login-saml-2.2.2-SNAPSHOT.74","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:44 GMT
Content-Type: application/json
Content-Length: 76
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 51498us

[ {
  "id" : "mod-login-saml-2.2.2-SNAPSHOT.74",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-notes] Getting descriptor ------------------
------------------ [mod-notes-2.13.0-SNAPSHOT.178] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:49 GMT
Content-Type: application/json
Content-Length: 6693
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-notes-2.13.0-SNAPSHOT.178
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 78768us

{
  "id" : "mod-notes-2.13.0-SNAPSHOT.178",
  "name" : "Notes",
  "requires" : [ {
    "id" : "users",
    "version" : "15.1"
  }, {
    "id" : "configuration",
    "version" : "2.0"
  } ],
  "provides" : [ {
    "id" : "notes",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/notes",
      "permissionsRequired" : [ "notes.collection.get", "notes.domain.all" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/notes",
      "permissionsRequired" : [ "notes.item.post", "notes.domain.all" ],
      "modulePermissions" : [ "users.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/notes/{id}",
      "permissionsRequired" : [ "notes.item.get", "notes.domain.all" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/notes/{id}",
      "permissionsRequired" : [ "notes.item.put", "notes.domain.all" ],
      "modulePermissions" : [ "users.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/notes/{id}",
      "permissionsRequired" : [ "notes.item.delete", "notes.domain.all" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/note-types",
      "permissionsRequired" : [ "note.types.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/note-types/{typeId}",
      "permissionsRequired" : [ "note.types.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/note-types",
      "permissionsRequired" : [ "note.types.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/note-types/{id}",
      "permissionsRequired" : [ "note.types.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/note-types/{id}",
      "permissionsRequired" : [ "note.types.item.delete" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/note-links/type/{type}/id/{id}",
      "permissionsRequired" : [ "note.links.collection.put" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/note-links/domain/{domain}/type/{type}/id/{id}",
      "permissionsRequired" : [ "notes.collection.get.by.status" ]
    } ]
  }, {
    "id" : "_jsonSchemas",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/jsonSchemas",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "_ramls",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/ramls",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "notes.collection.get",
    "displayName" : "Notes - get notes collection",
    "description" : "Get notes collection"
  }, {
    "permissionName" : "notes.item.get",
    "displayName" : "Notes - get individual note from storage",
    "description" : "Get individual note"
  }, {
    "permissionName" : "notes.item.post",
    "displayName" : "Notes - create note",
    "description" : "Create note"
  }, {
    "permissionName" : "notes.item.put",
    "displayName" : "Notes - modify note",
    "description" : "Modify note"
  }, {
    "permissionName" : "notes.item.delete",
    "displayName" : "Notes - delete note",
    "description" : "Delete note"
  }, {
    "permissionName" : "notes.domain.all",
    "displayName" : "Notes - allow access to all domains",
    "description" : "All domains"
  }, {
    "permissionName" : "note.types.item.get",
    "displayName" : "Note types - get individual note type from storage",
    "description" : "Get individual note type"
  }, {
    "permissionName" : "note.types.item.post",
    "displayName" : "Note types - create note type",
    "description" : "Create note type"
  }, {
    "permissionName" : "note.types.item.put",
    "displayName" : "Note types - modify note type",
    "description" : "Modify note type"
  }, {
    "permissionName" : "note.types.item.delete",
    "displayName" : "Note types - delete note type",
    "description" : "Delete note type"
  }, {
    "permissionName" : "note.links.collection.put",
    "displayName" : "Note links - update note links",
    "description" : "Update note links"
  }, {
    "permissionName" : "notes.collection.get.by.status",
    "displayName" : "Notes - get notes collection sorted by status",
    "description" : "Get notes collection by status and domain"
  }, {
    "permissionName" : "notes.allops",
    "displayName" : "Notes module - all CRUD permissions",
    "description" : "Entire set of permissions needed to use the notes modules, but no domain permissions",
    "subPermissions" : [ "notes.collection.get", "notes.item.get", "notes.item.post", "notes.item.put", "notes.item.delete", "note.links.collection.put", "notes.collection.get.by.status" ],
    "visible" : false
  }, {
    "permissionName" : "note.types.allops",
    "displayName" : "Note types - all CRUD permissions",
    "description" : "Entire set of permissions needed to use the note type for note module",
    "subPermissions" : [ "note.types.item.get", "note.types.collection.get", "note.types.item.post", "note.types.item.put", "note.types.item.delete" ],
    "visible" : false
  }, {
    "permissionName" : "notes.all",
    "displayName" : "Notes module - all permissions and all domains",
    "description" : "Entire set of permissions needed to use the notes modules on any domain",
    "subPermissions" : [ "notes.allops", "notes.domain.all", "note.types.allops" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-notes:2.13.0-SNAPSHOT.178",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-notes-2.13.0-SNAPSHOT.178] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:49 GMT
Content-Type: text/plain
Content-Length: 46
Connection: keep-alive
vary: origin

Duplicate instId mod-notes-2.13.0-SNAPSHOT.178
------------------ [mod-notes-2.13.0-SNAPSHOT.178] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:49 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-notes-2.13.0-SNAPSHOT.178] Enabling module for tenant ------------------
[{"id":"mod-notes-2.13.0-SNAPSHOT.178","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:49 GMT
Content-Type: application/json
Content-Length: 73
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 96677us

[ {
  "id" : "mod-notes-2.13.0-SNAPSHOT.178",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-notify] Getting descriptor ------------------
------------------ [mod-notify-2.10.0-SNAPSHOT.106] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:54 GMT
Content-Type: application/json
Content-Length: 4809
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-notify-2.10.0-SNAPSHOT.106
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 55344us

{
  "id" : "mod-notify-2.10.0-SNAPSHOT.106",
  "name" : "Notify",
  "requires" : [ {
    "id" : "users",
    "version" : "15.0"
  }, {
    "id" : "mod-event",
    "version" : "1.0"
  }, {
    "id" : "template-engine",
    "version" : "2.0"
  }, {
    "id" : "message-delivery",
    "version" : "1.0"
  } ],
  "provides" : [ {
    "id" : "notify",
    "version" : "2.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/notify",
      "permissionsRequired" : [ "notify.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/notify",
      "permissionsRequired" : [ "notify.item.post" ],
      "modulePermissions" : [ "event.config.collection.get", "template-request.post", "sender.message-delivery" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/notify/_username/{uid}",
      "permissionsRequired" : [ "notify.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/notify/{id}",
      "permissionsRequired" : [ "notify.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/notify/{id}",
      "permissionsRequired" : [ "notify.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/notify/{id}",
      "permissionsRequired" : [ "notify.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/notify/user/_self",
      "permissionsRequired" : [ "notify.user.collection.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/notify/user/_self",
      "permissionsRequired" : [ "notify.user.collection.delete" ]
    } ]
  }, {
    "id" : "patron-notice",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/patron-notice",
      "permissionsRequired" : [ "patron-notice.post" ],
      "modulePermissions" : [ "template-request.post", "sender.message-delivery" ]
    } ]
  }, {
    "id" : "_jsonSchemas",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/jsonSchemas",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "_ramls",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/ramls",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "notify.collection.get",
    "displayName" : "Notifications - get notify collection",
    "description" : "Get notify collection"
  }, {
    "permissionName" : "notify.item.get",
    "displayName" : "Notifications- get individual notification from storage",
    "description" : "Get individual notification"
  }, {
    "permissionName" : "notify.item.post",
    "displayName" : "Notifications - create notification",
    "description" : "Create notification"
  }, {
    "permissionName" : "notify.item.put",
    "displayName" : "Notifications - modify notification",
    "description" : "Modify notification"
  }, {
    "permissionName" : "notify.item.delete",
    "displayName" : "Notifications - delete notification",
    "description" : "Delete notification"
  }, {
    "permissionName" : "patron-notice.post",
    "displayName" : "Patron Notice",
    "description" : "Post Patron Notice"
  }, {
    "permissionName" : "notify.all",
    "displayName" : "Notifications module - all permissions",
    "description" : "Entire set of permissions needed to use the notify modules",
    "subPermissions" : [ "notify.collection.get", "notify.item.get", "notify.item.post", "notify.item.put", "notify.item.delete" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-notify:2.10.0-SNAPSHOT.106",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-notify-2.10.0-SNAPSHOT.106] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:54 GMT
Content-Type: text/plain
Content-Length: 47
Connection: keep-alive
vary: origin

Duplicate instId mod-notify-2.10.0-SNAPSHOT.106
------------------ [mod-notify-2.10.0-SNAPSHOT.106] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:54 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-notify-2.10.0-SNAPSHOT.106] Enabling module for tenant ------------------
[{"id":"mod-notify-2.10.0-SNAPSHOT.106","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:54 GMT
Content-Type: application/json
Content-Length: 74
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 41842us

[ {
  "id" : "mod-notify-2.10.0-SNAPSHOT.106",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-password-validator] Getting descriptor ------------------
------------------ [mod-password-validator-2.2.0-SNAPSHOT.46] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:23:59 GMT
Content-Type: application/json
Content-Length: 3387
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-password-validator-2.2.0-SNAPSHOT.46
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 67771us

{
  "id" : "mod-password-validator-2.2.0-SNAPSHOT.46",
  "name" : "Password Validator Module",
  "requires" : [ {
    "id" : "users",
    "version" : "15.0"
  } ],
  "provides" : [ {
    "id" : "password-validator",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/password/validate",
      "permissionsRequired" : [ "validation.validate.post" ],
      "modulePermissions" : [ "login.password.validate", "users.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/tenant/rules",
      "permissionsRequired" : [ "validation.rules.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/tenant/rules",
      "permissionsRequired" : [ "validation.rules.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/tenant/rules",
      "permissionsRequired" : [ "validation.rules.item.put" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/tenant/rules/{ruleId}",
      "permissionsRequired" : [ " validation.rules.item.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "1.2",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/_/tenant"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "validation.rules.collection.get",
    "displayName" : "get validation rules collection",
    "description" : "Get a list of validators"
  }, {
    "permissionName" : "validation.validate.post",
    "displayName" : "validate password post",
    "description" : "Validate a password"
  }, {
    "permissionName" : "validation.rules.item.post",
    "displayName" : "create validation rule",
    "description" : "Add a new rule"
  }, {
    "permissionName" : "validation.rules.item.put",
    "displayName" : "modify validation rule",
    "description" : "Modify the rule info"
  }, {
    "permissionName" : "validation.rules.item.get",
    "displayName" : "get validation rule",
    "description" : "Get a rule by id"
  }, {
    "permissionName" : "validation.all",
    "displayName" : "password validator module - all permissions",
    "description" : "All permissions for password validation",
    "subPermissions" : [ "validation.rules.collection.get", "validation.validate.post", "validation.rules.item.post", "validation.rules.item.put", "validation.rules.item.get" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-password-validator:2.2.0-SNAPSHOT.46",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=85.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 536870912,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-password-validator-2.2.0-SNAPSHOT.46] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:59 GMT
Content-Type: text/plain
Content-Length: 57
Connection: keep-alive
vary: origin

Duplicate instId mod-password-validator-2.2.0-SNAPSHOT.46
------------------ [mod-password-validator-2.2.0-SNAPSHOT.46] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:23:59 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-password-validator-2.2.0-SNAPSHOT.46] Enabling module for tenant ------------------
[{"id":"mod-password-validator-2.2.0-SNAPSHOT.46","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:23:59 GMT
Content-Type: application/json
Content-Length: 84
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 46117us

[ {
  "id" : "mod-password-validator-2.2.0-SNAPSHOT.46",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-patron-blocks] Getting descriptor ------------------
------------------ [mod-patron-blocks-1.4.0-SNAPSHOT.58] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:24:04 GMT
Content-Type: application/json
Content-Length: 8401
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-patron-blocks-1.4.0-SNAPSHOT.58
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 94988us

{
  "id" : "mod-patron-blocks-1.4.0-SNAPSHOT.58",
  "name" : "Patron Blocks Module",
  "requires" : [ {
    "id" : "pubsub-event-types",
    "version" : "0.1"
  }, {
    "id" : "pubsub-publishers",
    "version" : "0.1"
  }, {
    "id" : "pubsub-subscribers",
    "version" : "0.1"
  }, {
    "id" : "loan-storage",
    "version" : "7.0"
  }, {
    "id" : "users",
    "version" : "15.1"
  } ],
  "provides" : [ {
    "id" : "automated-patron-blocks",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/automated-patron-blocks/{userId}",
      "permissionsRequired" : [ "automated-patron-blocks.collection.get" ],
      "modulePermissions" : [ "pubsub.event-types.post", "pubsub.publishers.post", "pubsub.subscribers.post", "users.item.get" ]
    } ]
  }, {
    "id" : "user-summary",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/user-summary/{userId}",
      "permissionsRequired" : [ "user-summary.item.get" ]
    } ]
  }, {
    "id" : "patron-blocks-event-handlers",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/fee-fine-balance-changed",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/item-checked-out",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/item-checked-in",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/item-declared-lost",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/item-aged-to-lost",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/item-claimed-returned",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/loan-due-date-changed",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/handlers/loan-closed",
      "permissionsRequired" : [ "pubsub.events.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/synchronization/job",
      "permissionsRequired" : [ "patron-blocks.synchronization.job.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/automated-patron-blocks/synchronization/job/{syncJobId}",
      "permissionsRequired" : [ "patron-blocks.synchronization.job.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant",
      "modulePermissions" : [ "pubsub.event-types.post", "pubsub.publishers.post", "pubsub.subscribers.post" ]
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "patron-block-conditions",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-block-conditions",
      "permissionsRequired" : [ "patron-block-conditions.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-block-conditions/{id}",
      "permissionsRequired" : [ "patron-block-conditions.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/patron-block-conditions/{id}",
      "permissionsRequired" : [ "patron-block-conditions.item.put" ]
    } ]
  }, {
    "id" : "patron-block-limits",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-block-limits",
      "permissionsRequired" : [ "patron-block-limits.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/patron-block-limits/{id}",
      "permissionsRequired" : [ "patron-block-limits.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/patron-block-limits",
      "permissionsRequired" : [ "patron-block-limits.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/patron-block-limits/{id}",
      "permissionsRequired" : [ "patron-block-limits.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/patron-block-limits/{id}",
      "permissionsRequired" : [ "patron-block-limits.item.delete" ]
    } ]
  }, {
    "id" : "_timer",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/automated-patron-blocks/synchronization/start",
      "unit" : "minute",
      "delay" : "1",
      "modulePermissions" : [ "patron-blocks.synchronization-run.post", "circulation-storage.loans.collection.get", "circulation-storage.loans.item.get", "accounts.collection.get", "accounts.item.get" ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "patron-block-conditions.collection.get",
    "displayName" : "Patron block conditions - get patron block condition collection",
    "description" : "Get patron block condition collection"
  }, {
    "permissionName" : "patron-block-conditions.item.get",
    "displayName" : "Patron block conditions - get patron block condition",
    "description" : "Get patron block condition by id"
  }, {
    "permissionName" : "patron-block-conditions.item.put",
    "displayName" : "Patron block conditions - put patron block condition",
    "description" : "Put patron block condition by id"
  }, {
    "permissionName" : "patron-block-limits.collection.get",
    "displayName" : "Patron block limits - get patron block limit collection",
    "description" : "Get patron block limit collection"
  }, {
    "permissionName" : "patron-block-limits.item.get",
    "displayName" : "Patron block limits - get patron block limit",
    "description" : "Get patron block limit by id"
  }, {
    "permissionName" : "patron-block-limits.item.post",
    "displayName" : "Patron block limits - post patron block limit",
    "description" : "Create patron block limit"
  }, {
    "permissionName" : "patron-block-limits.item.put",
    "displayName" : "Patron block limits - put patron block limit",
    "description" : "Put patron block limit by id"
  }, {
    "permissionName" : "patron-block-limits.item.delete",
    "displayName" : "Patron block limits - delete patron block limit",
    "description" : "Delete patron block limit by id"
  }, {
    "permissionName" : "automated-patron-blocks.collection.get",
    "displayName" : "Patron blocks - get blocks for patron",
    "description" : "Get automated patron blocks by user ID"
  }, {
    "permissionName" : "user-summary.item.get",
    "displayName" : "User summary - get UserSummary object",
    "description" : "Get UserSummary object by user ID"
  }, {
    "permissionName" : "patron-blocks.synchronization.job.post",
    "displayName" : "Synchronization job - post Synchronization job",
    "description" : "Post Synchronization job"
  }, {
    "permissionName" : "patron-blocks.synchronization.job.get",
    "displayName" : "Synchronization job - get Synchronization job by ID",
    "description" : "Get Synchronization job"
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-patron-blocks:1.4.0-SNAPSHOT.58",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-patron-blocks-1.4.0-SNAPSHOT.58] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:04 GMT
Content-Type: text/plain
Content-Length: 52
Connection: keep-alive
vary: origin

Duplicate instId mod-patron-blocks-1.4.0-SNAPSHOT.58
------------------ [mod-patron-blocks-1.4.0-SNAPSHOT.58] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:04 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-patron-blocks-1.4.0-SNAPSHOT.58] Enabling module for tenant ------------------
[{"id":"mod-patron-blocks-1.4.0-SNAPSHOT.58","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:24:04 GMT
Content-Type: application/json
Content-Length: 79
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 83270us

[ {
  "id" : "mod-patron-blocks-1.4.0-SNAPSHOT.58",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-permissions] Getting descriptor ------------------
------------------ [mod-permissions-5.15.0-SNAPSHOT.116] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:24:09 GMT
Content-Type: application/json
Content-Length: 5438
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-permissions-5.15.0-SNAPSHOT.116
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 73216us

{
  "id" : "mod-permissions-5.15.0-SNAPSHOT.116",
  "name" : "permissions",
  "provides" : [ {
    "id" : "permissions",
    "version" : "5.3",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/perms/users*",
      "permissionsRequired" : [ "perms.users.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/perms/users*",
      "permissionsRequired" : [ "perms.users.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/perms/users/{id}",
      "permissionsRequired" : [ "perms.users.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/perms/users/{id}",
      "permissionsRequired" : [ "perms.users.item.delete" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/perms/users/{id}/permissions/{perm}",
      "permissionsRequired" : [ "perms.users.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/perms/permissions",
      "permissionsRequired" : [ "perms.permissions.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/perms/permissions/{id}",
      "permissionsRequired" : [ "perms.permissions.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/perms/permissions/{id}",
      "permissionsRequired" : [ "perms.permissions.item.put" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/perms/permissions",
      "permissionsRequired" : [ "perms.permissions.item.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/perms/permissions/{id}",
      "permissionsRequired" : [ "perms.permissions.item.delete " ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/perms/purge-deprecated",
      "permissionsRequired" : [ "perms.permissions.purge-deprecated.post" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "_tenantPermissions",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenantpermissions"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "perms.users.get",
    "displayName" : "permission users read",
    "description" : "Read or list permissions user(s)"
  }, {
    "permissionName" : "perms.users.item.post",
    "displayName" : "permission users item create",
    "description" : "Add a new permissions user"
  }, {
    "permissionName" : "perms.users.item.put",
    "displayName" : "permission users item modify",
    "description" : "Modify a permissions user"
  }, {
    "permissionName" : "perms.users.item.delete",
    "displayName" : "permission users item delete",
    "description" : "Remove a permissions user or remove permissions from a user"
  }, {
    "permissionName" : "perms.permissions.get",
    "displayName" : "permission read",
    "description" : "Read or list permissions"
  }, {
    "permissionName" : "perms.permissions.item.post",
    "displayName" : "permission item create",
    "description" : "Add a new permission"
  }, {
    "permissionName" : "perms.permissions.item.put",
    "displayName" : "permission item modify",
    "description" : "Modify a permission"
  }, {
    "permissionName" : "perms.permissions.item.delete",
    "displayName" : "permission item delete",
    "description" : "Remove a permission"
  }, {
    "permissionName" : "perms.permissions.purge-deprecated.post",
    "displayName" : "purge deprecated permission",
    "description" : "Purge deprecated permissions"
  }, {
    "permissionName" : "perms.permissions",
    "displayName" : "permissions",
    "description" : "All permissions for permission objects",
    "subPermissions" : [ "perms.permissions.get", "perms.permissions.item.post", "perms.permissions.item.put", "perms.permissions.item.delete", "perms.permissions.purge-deprecated.post" ]
  }, {
    "permissionName" : "perms.users",
    "displayName" : "permission users",
    "description" : "All permissions for permission user objects",
    "subPermissions" : [ "perms.users.get", "perms.users.item.post", "perms.users.item.put", "perms.users.item.delete" ]
  }, {
    "permissionName" : "perms.all",
    "displayName" : "perms all",
    "description" : "All permissions for the permissions module",
    "subPermissions" : [ "perms.users", "perms.permissions" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-permissions:5.15.0-SNAPSHOT.116",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 715827883,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-permissions-5.15.0-SNAPSHOT.116] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:09 GMT
Content-Type: text/plain
Content-Length: 52
Connection: keep-alive
vary: origin

Duplicate instId mod-permissions-5.15.0-SNAPSHOT.116
------------------ [mod-permissions-5.15.0-SNAPSHOT.116] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:09 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-permissions-5.15.0-SNAPSHOT.116] Enabling module for tenant ------------------
[{"id":"mod-permissions-5.15.0-SNAPSHOT.116","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:24:09 GMT
Content-Type: application/json
Content-Length: 79
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 74830us

[ {
  "id" : "mod-permissions-5.15.0-SNAPSHOT.116",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-pubsub] Getting descriptor ------------------
------------------ [mod-pubsub-2.4.0-SNAPSHOT.169] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:24:14 GMT
Content-Type: application/json
Content-Length: 7395
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-pubsub-2.4.0-SNAPSHOT.169
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 37885us

{
  "id" : "mod-pubsub-2.4.0-SNAPSHOT.169",
  "name" : "Pubsub",
  "requires" : [ {
    "id" : "users",
    "version" : "15.1"
  }, {
    "id" : "login",
    "version" : "6.0 7.0"
  }, {
    "id" : "permissions",
    "version" : "5.2"
  } ],
  "provides" : [ {
    "id" : "pubsub-event-types",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/pubsub/event-types",
      "permissionsRequired" : [ "pubsub.event-types.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/pubsub/event-types",
      "permissionsRequired" : [ "pubsub.event-types.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}",
      "permissionsRequired" : [ "pubsub.event-types.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}",
      "permissionsRequired" : [ "pubsub.event-types.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}",
      "permissionsRequired" : [ "pubsub.event-types.delete" ]
    } ]
  }, {
    "id" : "pubsub-publishers",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/pubsub/event-types/declare/publisher",
      "permissionsRequired" : [ "pubsub.publishers.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}/publishers",
      "permissionsRequired" : [ "pubsub.publishers.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}/publishers",
      "permissionsRequired" : [ "pubsub.publishers.get" ]
    } ]
  }, {
    "id" : "pubsub-subscribers",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/pubsub/event-types/declare/subscriber",
      "permissionsRequired" : [ "pubsub.subscribers.post" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}/subscribers",
      "permissionsRequired" : [ "pubsub.subscribers.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/pubsub/event-types/{eventTypeName}/subscribers",
      "permissionsRequired" : [ "pubsub.subscribers.get" ]
    } ]
  }, {
    "id" : "pubsub-audit",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/pubsub/history",
      "permissionsRequired" : [ "pubsub.audit.history.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/pubsub/audit-messages/{eventId}/payload",
      "permissionsRequired" : [ "pubsub.audit.message.payload.get" ]
    } ]
  }, {
    "id" : "pubsub-publish",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/pubsub/publish",
      "permissionsRequired" : [ "pubsub.publish.post" ]
    } ]
  }, {
    "id" : "pubsub-messaging-modules",
    "version" : "0.1",
    "handlers" : [ {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/pubsub/messaging-modules",
      "permissionsRequired" : [ "pubsub.messaging-modules.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant",
      "modulePermissions" : [ "users.collection.get", "users.item.post", "users.item.put", "login.item.post", "perms.users.item.post" ]
    }, {
      "methods" : [ "DELETE", "GET" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "pubsub.event-types.get",
    "displayName" : "PubSub - get Event Descriptor",
    "description" : "Get Event Descriptor"
  }, {
    "permissionName" : "pubsub.event-types.post",
    "displayName" : "PubSub - create new Event Type",
    "description" : "Post Event Descriptor"
  }, {
    "permissionName" : "pubsub.event-types.put",
    "displayName" : "PubSub - update Event Descriptor for Event Type",
    "description" : "Put Event Descriptor"
  }, {
    "permissionName" : "pubsub.event-types.delete",
    "displayName" : "PubSub - delete Event Type",
    "description" : "Delete Event Descriptor"
  }, {
    "permissionName" : "pubsub.publishers.post",
    "displayName" : "PubSub - declare publisher",
    "description" : "Post Publisher Descriptor"
  }, {
    "permissionName" : "pubsub.publishers.delete",
    "displayName" : "PubSub - delete publisher declaration",
    "description" : "Delete Publisher"
  }, {
    "permissionName" : "pubsub.publishers.get",
    "displayName" : "PubSub - get publishers",
    "description" : "Get Publishers"
  }, {
    "permissionName" : "pubsub.subscribers.post",
    "displayName" : "PubSub - declare subscriber",
    "description" : "Post Subscriber Descriptor"
  }, {
    "permissionName" : "pubsub.subscribers.delete",
    "displayName" : "PubSub - delete subscriber declaration",
    "description" : "Delete Subscriber"
  }, {
    "permissionName" : "pubsub.subscribers.get",
    "displayName" : "PubSub - get subscribers",
    "description" : "Get Subscribers"
  }, {
    "permissionName" : "pubsub.audit.history.get",
    "displayName" : "PubSub - get history",
    "description" : "Get history"
  }, {
    "permissionName" : "pubsub.audit.message.payload.get",
    "displayName" : "PubSub - get audit message payload",
    "description" : "Get audit message payload"
  }, {
    "permissionName" : "pubsub.publish.post",
    "displayName" : "PubSub - publish event",
    "description" : "Publish event"
  }, {
    "permissionName" : "pubsub.messaging-modules.delete",
    "displayName" : "PubSub - delete publishers and subscribers declarations",
    "description" : "Delete publishers or subscribers"
  }, {
    "permissionName" : "pubsub.events.post",
    "replaces" : [ "source-storage.events.post", "source-records-manager.events.post", "inventory.events.post", "circulation.events.post", "patron-blocks.events.post", "audit-data.events.post" ],
    "displayName" : "PubSub - post event.",
    "description" : "Post all events."
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-pubsub:2.4.0-SNAPSHOT.169",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0 -XX:+HeapDumpOnOutOfMemoryError"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    }, {
      "name" : "KAFKA_HOST",
      "value" : "10.0.2.15"
    }, {
      "name" : "KAFKA_PORT",
      "value" : "9092"
    }, {
      "name" : "OKAPI_URL",
      "value" : "http://10.0.2.15:9130"
    }, {
      "name" : "SYSTEM_USER_NAME",
      "value" : "pub-sub"
    }, {
      "name" : "SYSTEM_USER_PASSWORD",
      "value" : "pubsub"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 1073741824,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-pubsub-2.4.0-SNAPSHOT.169] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:14 GMT
Content-Type: text/plain
Content-Length: 46
Connection: keep-alive
vary: origin

Duplicate instId mod-pubsub-2.4.0-SNAPSHOT.169
------------------ [mod-pubsub-2.4.0-SNAPSHOT.169] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:14 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-pubsub-2.4.0-SNAPSHOT.169] Enabling module for tenant ------------------
[{"id":"mod-pubsub-2.4.0-SNAPSHOT.169","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:24:14 GMT
Content-Type: application/json
Content-Length: 73
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 54879us

[ {
  "id" : "mod-pubsub-2.4.0-SNAPSHOT.169",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-quick-marc] Getting descriptor ------------------
------------------ [mod-quick-marc-2.2.0-SNAPSHOT.122] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:24:19 GMT
Content-Type: application/json
Content-Length: 4088
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-quick-marc-2.2.0-SNAPSHOT.122
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 38437us

{
  "id" : "mod-quick-marc-2.2.0-SNAPSHOT.122",
  "name" : "quickMARC",
  "requires" : [ {
    "id" : "source-manager-parsed-records",
    "version" : "2.0"
  }, {
    "id" : "source-manager-job-executions",
    "version" : "2.0"
  }, {
    "id" : "source-manager-records",
    "version" : "2.0"
  }, {
    "id" : "users",
    "version" : "15.0"
  } ],
  "provides" : [ {
    "id" : "records-editor.records",
    "version" : "1.4",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/records-editor/records",
      "permissionsRequired" : [ "records-editor.records.item.get" ],
      "modulePermissions" : [ "change-manager.parsedrecords.get", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/records-editor/records",
      "permissionsRequired" : [ "records-editor.records.item.post" ],
      "modulePermissions" : [ "change-manager.jobexecutions.post", "change-manager.jobexecutions.put", "change-manager.records.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/records-editor/records/{id}",
      "permissionsRequired" : [ "records-editor.records.item.put" ],
      "modulePermissions" : [ "change-manager.parsedrecords.put" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/records-editor/records/status",
      "permissionsRequired" : [ "records-editor.records.status.item.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "1.2",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant",
      "permissionsRequired" : [ ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/_/tenant",
      "permissionsRequired" : [ ]
    } ]
  }, {
    "id" : "_jsonSchemas",
    "version" : "1.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/_/jsonSchemas",
      "permissionsRequired" : [ ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "records-editor.records.item.get",
    "displayName" : "records-editor - get a record",
    "description" : "Get a record"
  }, {
    "permissionName" : "records-editor.records.item.post",
    "displayName" : "records-editor - create a new record",
    "description" : "Create a new record"
  }, {
    "permissionName" : "records-editor.records.item.put",
    "displayName" : "records-editor - update a record",
    "description" : "Update a record"
  }, {
    "permissionName" : "records-editor.records.status.item.get",
    "displayName" : "records-editor - get record creation status",
    "description" : "Get record creation status"
  }, {
    "permissionName" : "records-editor.all",
    "displayName" : "All records-editor permissions",
    "description" : "All permissions for the records-editor",
    "subPermissions" : [ "records-editor.records.item.get", "records-editor.records.item.post", "records-editor.records.item.put", "records-editor.records.status.item.get" ]
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-quick-marc:2.2.0-SNAPSHOT.122",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=85.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    }, {
      "name" : "KAFKA_HOST",
      "value" : "10.0.2.15"
    }, {
      "name" : "KAFKA_PORT",
      "value" : "9092"
    }, {
      "name" : "ENV",
      "value" : "folio"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 536870912,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-quick-marc-2.2.0-SNAPSHOT.122] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:19 GMT
Content-Type: text/plain
Content-Length: 50
Connection: keep-alive
vary: origin

Duplicate instId mod-quick-marc-2.2.0-SNAPSHOT.122
------------------ [mod-quick-marc-2.2.0-SNAPSHOT.122] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:24:19 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-quick-marc-2.2.0-SNAPSHOT.122] Enabling module for tenant ------------------
[{"id":"mod-quick-marc-2.2.0-SNAPSHOT.122","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:00 GMT
Content-Type: text/plain
Content-Length: 163
Connection: keep-alive
vary: origin

POST request for mod-data-import-converter-storage-1.12.0-SNAPSHOT.169 /_/tenant failed with failed to resolve 'mod-data-import-converter-storage' after 2 queries 
Done!
------------------ [mod-sender] Getting descriptor ------------------
------------------ [mod-sender-1.7.0-SNAPSHOT.30] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:25:05 GMT
Content-Type: application/json
Content-Length: 1068
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-sender-1.7.0-SNAPSHOT.30
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 74019us

{
  "id" : "mod-sender-1.7.0-SNAPSHOT.30",
  "name" : "Mod sender",
  "requires" : [ {
    "id" : "users",
    "version" : "15.0"
  }, {
    "id" : "email",
    "version" : "1.0"
  } ],
  "provides" : [ {
    "id" : "message-delivery",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/message-delivery",
      "permissionsRequired" : [ "sender.message-delivery" ],
      "modulePermissions" : [ "email.message.post", "users.item.get" ]
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "sender.message-delivery",
    "displayName" : "Message delivery",
    "description" : "Send message"
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-sender:1.7.0-SNAPSHOT.30",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 536870912,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-sender-1.7.0-SNAPSHOT.30] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:05 GMT
Content-Type: text/plain
Content-Length: 45
Connection: keep-alive
vary: origin

Duplicate instId mod-sender-1.7.0-SNAPSHOT.30
------------------ [mod-sender-1.7.0-SNAPSHOT.30] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:05 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-sender-1.7.0-SNAPSHOT.30] Enabling module for tenant ------------------
[{"id":"mod-sender-1.7.0-SNAPSHOT.30","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:25:05 GMT
Content-Type: application/json
Content-Length: 72
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 70086us

[ {
  "id" : "mod-sender-1.7.0-SNAPSHOT.30",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-source-record-storage] Getting descriptor ------------------
------------------ [mod-source-record-storage-5.2.1-SNAPSHOT.336] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:25:10 GMT
Content-Type: application/json
Content-Length: 8309
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-source-record-storage-5.2.1-SNAPSHOT.336
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 29690us

{
  "id" : "mod-source-record-storage-5.2.1-SNAPSHOT.336",
  "name" : "Source Record Storage Module",
  "provides" : [ {
    "id" : "source-storage-snapshots",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/snapshots",
      "permissionsRequired" : [ "source-storage.snapshots.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/source-storage/snapshots",
      "permissionsRequired" : [ "source-storage.snapshots.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/snapshots/{jobExecutionId}",
      "permissionsRequired" : [ "source-storage.snapshots.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/source-storage/snapshots/{jobExecutionId}",
      "permissionsRequired" : [ "source-storage.snapshots.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/source-storage/snapshots/{jobExecutionId}",
      "permissionsRequired" : [ "source-storage.snapshots.delete" ],
      "modulePermissions" : [ "inventory.instances.item.delete" ]
    } ]
  }, {
    "id" : "source-storage-records",
    "version" : "3.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/records",
      "permissionsRequired" : [ "source-storage.records.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/source-storage/records",
      "permissionsRequired" : [ "source-storage.records.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/records/{id}",
      "permissionsRequired" : [ "source-storage.records.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/source-storage/records/{id}",
      "permissionsRequired" : [ "source-storage.records.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/source-storage/records/{id}",
      "permissionsRequired" : [ "source-storage.records.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/records/{id}/formatted",
      "permissionsRequired" : [ "source-storage.records.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/source-storage/records/{id}/suppress-from-discovery",
      "permissionsRequired" : [ "source-storage.records.update" ]
    } ]
  }, {
    "id" : "source-storage-source-records",
    "version" : "3.1",
    "handlers" : [ {
      "methods" : [ "GET", "POST" ],
      "pathPattern" : "/source-storage/source-records",
      "permissionsRequired" : [ "source-storage.sourceRecords.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/source-records/{id}",
      "permissionsRequired" : [ "source-storage.sourceRecords.get" ]
    } ]
  }, {
    "id" : "source-storage-test-records",
    "version" : "2.0",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/source-storage/populate-test-marc-records",
      "permissionsRequired" : [ "source-storage.populate.records" ]
    } ]
  }, {
    "id" : "source-storage-stream",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/stream/records",
      "permissionsRequired" : [ "source-storage.records.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/source-storage/stream/source-records",
      "permissionsRequired" : [ "source-storage.sourceRecords.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/source-storage/stream/marc-record-identifiers",
      "permissionsRequired" : [ "source-storage.records.get" ]
    } ]
  }, {
    "id" : "source-storage-batch",
    "version" : "1.1",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/source-storage/batch/records",
      "permissionsRequired" : [ "source-storage.records.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/source-storage/batch/parsed-records",
      "permissionsRequired" : [ "source-storage.records.put" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/source-storage/batch/verified-records",
      "permissionsRequired" : [ "source-storage.verified.records" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "DELETE", "GET" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "source-storage.populate.records",
    "displayName" : "Source Storage - populate storage with test records",
    "description" : "Populate storage with test records"
  }, {
    "permissionName" : "source-storage.snapshots.get",
    "displayName" : "Source Storage - get snapshot(s)",
    "description" : "Get Snapshot(s)"
  }, {
    "permissionName" : "source-storage.snapshots.post",
    "displayName" : "Source Storage - create new snapshot",
    "description" : "Post Snapshot"
  }, {
    "permissionName" : "source-storage.snapshots.put",
    "displayName" : "Source Storage - update snapshot",
    "description" : "Put Snapshot"
  }, {
    "permissionName" : "source-storage.snapshots.delete",
    "displayName" : "Source Storage - delete snapshot and records",
    "description" : "Delete Snapshot and all related Records"
  }, {
    "permissionName" : "source-storage.records.get",
    "displayName" : "Source Storage - get record(s)",
    "description" : "Get Record(s)"
  }, {
    "permissionName" : "source-storage.records.post",
    "displayName" : "Source Storage - create new record",
    "description" : "Post Record"
  }, {
    "permissionName" : "source-storage.records.put",
    "displayName" : "Source Storage - update record",
    "description" : "Put Record"
  }, {
    "permissionName" : "source-storage.record.update",
    "displayName" : "Source Storage - update record",
    "description" : "Update Record's fields"
  }, {
    "permissionName" : "source-storage.records.delete",
    "displayName" : "Source Storage - delete record",
    "description" : "Delete Record"
  }, {
    "permissionName" : "source-storage.sourceRecords.get",
    "displayName" : "Source Storage - get results",
    "description" : "Get Results"
  }, {
    "permissionName" : "source-storage.verified.records",
    "displayName" : "Source Storage - validate marc bib ids in the system",
    "description" : "Return marc bib ids, which doesn't exist in the system"
  }, {
    "permissionName" : "source-storage.all",
    "displayName" : "Source Record Storage - all permissions",
    "description" : "Entire set of permissions needed to manage snapshots and records",
    "subPermissions" : [ "source-storage.populate.records", "source-storage.snapshots.get", "source-storage.snapshots.post", "source-storage.snapshots.put", "source-storage.snapshots.delete", "source-storage.records.get", "source-storage.records.post", "source-storage.records.put", "source-storage.records.delete", "source-storage.record.update", "source-storage.sourceRecords.get", "source-storage.verified.records" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-source-record-storage:5.2.1-SNAPSHOT.336",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0 -Djava.util.logging.config.file=vertx-default-jul-logging.properties"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    }, {
      "name" : "test.mode",
      "value" : "true"
    }, {
      "name" : "KAFKA_HOST",
      "value" : "10.0.2.15"
    }, {
      "name" : "KAFKA_PORT",
      "value" : "9092"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 603725575,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-source-record-storage-5.2.1-SNAPSHOT.336] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:10 GMT
Content-Type: text/plain
Content-Length: 61
Connection: keep-alive
vary: origin

Duplicate instId mod-source-record-storage-5.2.1-SNAPSHOT.336
------------------ [mod-source-record-storage-5.2.1-SNAPSHOT.336] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:10 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-source-record-storage-5.2.1-SNAPSHOT.336] Enabling module for tenant ------------------
[{"id":"mod-source-record-storage-5.2.1-SNAPSHOT.336","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:50 GMT
Content-Type: text/plain
Content-Length: 198
Connection: keep-alive
vary: origin

POST request for mod-source-record-storage-5.2.1-SNAPSHOT.336 /_/tenant failed with finishConnect(..) failed: Connection refused: mod-source-record-storage.jgreben.svc.cluster.local/172.20.165.35:80
Done!
------------------ [mod-tags] Getting descriptor ------------------
------------------ [mod-tags-0.10.0-SNAPSHOT.63] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:25:55 GMT
Content-Type: application/json
Content-Length: 2992
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-tags-0.10.0-SNAPSHOT.63
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 73274us

{
  "id" : "mod-tags-0.10.0-SNAPSHOT.63",
  "name" : "Tags",
  "requires" : [ ],
  "provides" : [ {
    "id" : "tags",
    "version" : "1.0",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/tags",
      "permissionsRequired" : [ "tags.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/tags",
      "permissionsRequired" : [ "tags.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/tags/{id}",
      "permissionsRequired" : [ "tags.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/tags/{id}",
      "permissionsRequired" : [ "tags.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/tags/{id}",
      "permissionsRequired" : [ "tags.item.delete" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "tags.collection.get",
    "displayName" : "Tags - get tags collection",
    "description" : "Get tags collection"
  }, {
    "permissionName" : "tags.item.get",
    "displayName" : "Tags - get individual tag from storage",
    "description" : "Get individual tag"
  }, {
    "permissionName" : "tags.item.post",
    "displayName" : "Tags - create tag",
    "description" : "Create tag"
  }, {
    "permissionName" : "tags.item.put",
    "displayName" : "Tags - modify tag",
    "description" : "Modify tag"
  }, {
    "permissionName" : "tags.item.delete",
    "displayName" : "Tags - delete tag",
    "description" : "Delete tag"
  }, {
    "permissionName" : "tags.all",
    "displayName" : "Tags module - all permissions",
    "description" : "Entire set of permissions needed to use the tags module",
    "subPermissions" : [ "tags.collection.get", "tags.item.get", "tags.item.post", "tags.item.put", "tags.item.delete" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-tags:0.10.0-SNAPSHOT.63",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=85.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 542293850,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-tags-0.10.0-SNAPSHOT.63] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:55 GMT
Content-Type: text/plain
Content-Length: 44
Connection: keep-alive
vary: origin

Duplicate instId mod-tags-0.10.0-SNAPSHOT.63
------------------ [mod-tags-0.10.0-SNAPSHOT.63] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:25:55 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-tags-0.10.0-SNAPSHOT.63] Enabling module for tenant ------------------
[{"id":"mod-tags-0.10.0-SNAPSHOT.63","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:25:55 GMT
Content-Type: application/json
Content-Length: 71
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 47049us

[ {
  "id" : "mod-tags-0.10.0-SNAPSHOT.63",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-template-engine] Getting descriptor ------------------
------------------ [mod-template-engine-1.15.0-SNAPSHOT.72] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:26:00 GMT
Content-Type: application/json
Content-Length: 3867
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-template-engine-1.15.0-SNAPSHOT.72
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 42041us

{
  "id" : "mod-template-engine-1.15.0-SNAPSHOT.72",
  "name" : "Template engine module",
  "requires" : [ {
    "id" : "configuration",
    "version" : "2.0"
  }, {
    "id" : "patron-notice-policy-storage",
    "version" : "0.8"
  } ],
  "provides" : [ {
    "id" : "template-engine",
    "version" : "2.2",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/templates",
      "permissionsRequired" : [ "templates.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/templates",
      "permissionsRequired" : [ "templates.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/templates/{templateId}",
      "permissionsRequired" : [ "templates.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/templates/{templateId}",
      "permissionsRequired" : [ "templates.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/templates/{templateId}",
      "permissionsRequired" : [ "templates.item.delete" ],
      "modulePermissions" : [ "circulation-storage.patron-notice-policies.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/template-request",
      "permissionsRequired" : [ "template-request.post" ],
      "modulePermissions" : [ "configuration.entries.collection.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "templates.collection.get",
    "displayName" : "Templates - get Templates collection",
    "description" : "Get Templates collection"
  }, {
    "permissionName" : "templates.item.get",
    "displayName" : "Templates - get individual tag from storage",
    "description" : "Get individual tag"
  }, {
    "permissionName" : "templates.item.post",
    "displayName" : "Templates - create tag",
    "description" : "Create tag"
  }, {
    "permissionName" : "templates.item.put",
    "displayName" : "Templates - modify tag",
    "description" : "Modify tag"
  }, {
    "permissionName" : "templates.item.delete",
    "displayName" : "Templates - delete tag",
    "description" : "Delete tag"
  }, {
    "permissionName" : "template-request.post",
    "displayName" : "Template request",
    "description" : "Request for template compilation"
  }, {
    "permissionName" : "templates.all",
    "displayName" : "Templates module - all permissions",
    "description" : "Entire set of permissions needed to use the Templates module",
    "subPermissions" : [ "templates.collection.get", "templates.item.get", "templates.item.post", "templates.item.put", "templates.item.delete", "template-request.post" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-template-engine:1.15.0-SNAPSHOT.72",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    },
    "dockerCMD" : [ "verify.user=true" ]
  }
}
------------------ [mod-template-engine-1.15.0-SNAPSHOT.72] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:26:00 GMT
Content-Type: text/plain
Content-Length: 55
Connection: keep-alive
vary: origin

Duplicate instId mod-template-engine-1.15.0-SNAPSHOT.72
------------------ [mod-template-engine-1.15.0-SNAPSHOT.72] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:26:00 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-template-engine-1.15.0-SNAPSHOT.72] Enabling module for tenant ------------------
[{"id":"mod-template-engine-1.15.0-SNAPSHOT.72","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:26:00 GMT
Content-Type: application/json
Content-Length: 82
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 50792us

[ {
  "id" : "mod-template-engine-1.15.0-SNAPSHOT.72",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-users] Getting descriptor ------------------
------------------ [mod-users-18.1.0-SNAPSHOT.166] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:26:05 GMT
Content-Type: application/json
Content-Length: 13601
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-users-18.1.0-SNAPSHOT.166
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 31526us

{
  "id" : "mod-users-18.1.0-SNAPSHOT.166",
  "name" : "users",
  "provides" : [ {
    "id" : "users",
    "version" : "15.3",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/users",
      "permissionsRequired" : [ "users.collection.get" ],
      "permissionsDesired" : [ "users.read.basic", "users.read.restricted" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/users/{id}",
      "permissionsRequired" : [ "users.item.get" ],
      "permissionsDesired" : [ "users.read.basic", "users.read.restricted" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/users",
      "permissionsRequired" : [ "users.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/users/{id}",
      "permissionsRequired" : [ "users.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/users/{id}",
      "permissionsRequired" : [ "users.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/groups",
      "permissionsRequired" : [ "usergroups.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/groups/{id}*",
      "permissionsRequired" : [ "usergroups.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/groups*",
      "permissionsRequired" : [ "usergroups.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/groups/{id}*",
      "permissionsRequired" : [ "usergroups.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/groups/{id}*",
      "permissionsRequired" : [ "usergroups.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/addresstypes",
      "permissionsRequired" : [ "addresstypes.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/addresstypes/{id}",
      "permissionsRequired" : [ "addresstypes.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/addresstypes",
      "permissionsRequired" : [ "addresstypes.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/addresstypes/{id}",
      "permissionsRequired" : [ "addresstypes.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/addresstypes/{id}",
      "permissionsRequired" : [ "addresstypes.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/proxiesfor",
      "permissionsRequired" : [ "proxiesfor.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/proxiesfor/{id}",
      "permissionsRequired" : [ "proxiesfor.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/proxiesfor",
      "permissionsRequired" : [ "proxiesfor.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/proxiesfor/{id}",
      "permissionsRequired" : [ "proxiesfor.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/proxiesfor/{id}",
      "permissionsRequired" : [ "proxiesfor.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/departments",
      "permissionsRequired" : [ "departments.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/departments/{id}",
      "permissionsRequired" : [ "departments.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/departments",
      "permissionsRequired" : [ "departments.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/departments/{id}",
      "permissionsRequired" : [ "departments.item.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/departments/{id}",
      "permissionsRequired" : [ "departments.item.delete" ]
    } ]
  }, {
    "id" : "custom-fields",
    "version" : "2.0",
    "interfaceType" : "multiple",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/custom-fields",
      "permissionsRequired" : [ "user-settings.custom-fields.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/custom-fields",
      "permissionsRequired" : [ "user-settings.custom-fields.item.post" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/custom-fields/{id}",
      "permissionsRequired" : [ "user-settings.custom-fields.item.get" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/custom-fields/{id}",
      "permissionsRequired" : [ "user-settings.custom-fields.item.put" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/custom-fields",
      "permissionsRequired" : [ "user-settings.custom-fields.collection.put" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/custom-fields/{id}",
      "permissionsRequired" : [ "user-settings.custom-fields.item.delete" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/custom-fields/{id}/stats",
      "permissionsRequired" : [ "user-settings.custom-fields.item.stats.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/custom-fields/{id}/options/{optId}/stats",
      "permissionsRequired" : [ "user-settings.custom-fields.item.option.stats.get" ]
    } ]
  }, {
    "id" : "_tenant",
    "version" : "2.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/_/tenant"
    }, {
      "methods" : [ "GET", "DELETE" ],
      "pathPattern" : "/_/tenant/{id}"
    } ]
  }, {
    "id" : "_timer",
    "version" : "1.0",
    "interfaceType" : "system",
    "handlers" : [ {
      "methods" : [ "POST" ],
      "pathPattern" : "/users/expire/timer",
      "unit" : "minute",
      "delay" : "1"
    } ]
  } ],
  "permissionSets" : [ {
    "permissionName" : "users.collection.get",
    "displayName" : "users collection get",
    "description" : "Get a collection of user records"
  }, {
    "permissionName" : "user-settings.custom-fields.collection.put",
    "displayName" : "Custom Fields - put collection",
    "description" : "Put Custom Fields collection"
  }, {
    "permissionName" : "users.item.get",
    "displayName" : "users item get",
    "description" : "Read an individual record in the User module"
  }, {
    "permissionName" : "users.read.basic",
    "displayName" : "users read-basic",
    "description" : "Read non-restricted User data information"
  }, {
    "permissionName" : "users.read.restricted",
    "displayName" : "users read-restricted",
    "description" : "Read restricted User data information"
  }, {
    "permissionName" : "users.item.post",
    "displayName" : "users item post",
    "description" : "Create new records in the User module"
  }, {
    "permissionName" : "users.item.put",
    "displayName" : "users item put",
    "description" : "Edit existing records in the User module"
  }, {
    "permissionName" : "users.item.delete",
    "displayName" : "users item delete",
    "description" : "Delete records from the User module"
  }, {
    "permissionName" : "usergroups.collection.get",
    "displayName" : "usergroups collection get",
    "description" : "Get a list of usergroup records"
  }, {
    "permissionName" : "usergroups.item.get",
    "displayName" : "usergroups item get",
    "description" : "Get a single usergroup item"
  }, {
    "permissionName" : "usergroups.item.post",
    "displayName" : "usergroups item post",
    "description" : "Create new Groups for users"
  }, {
    "permissionName" : "usergroups.item.put",
    "displayName" : "usergroups item put",
    "description" : "Edit existing Groups for users"
  }, {
    "permissionName" : "usergroups.item.delete",
    "displayName" : "usergroups item delete",
    "description" : "Delete Groups for users"
  }, {
    "permissionName" : "addresstypes.collection.get",
    "displayName" : "addresstypes collection get",
    "description" : "Get a list of addresstype records"
  }, {
    "permissionName" : "addresstypes.item.get",
    "displayName" : "addresstypes item get",
    "description" : "Get a single addresstype record"
  }, {
    "permissionName" : "addresstypes.item.post",
    "displayName" : "addresstypes item post",
    "description" : "Create a new addresstype record"
  }, {
    "permissionName" : "addresstypes.item.put",
    "displayName" : "addresstypes item put",
    "description" : "Edit an addresstype record"
  }, {
    "permissionName" : "addresstypes.item.delete",
    "displayName" : "addresstypes item delete",
    "description" : "Delete an addresstype record"
  }, {
    "permissionName" : "proxiesfor.collection.get",
    "displayName" : "proxiesfor collection get",
    "description" : "Get a list of proxyfor records"
  }, {
    "permissionName" : "proxiesfor.item.get",
    "displayName" : "proxiesfor item get",
    "description" : "Get a single proxyfor record"
  }, {
    "permissionName" : "proxiesfor.item.post",
    "displayName" : "proxiesfor item post",
    "description" : "Create a new proxyfor record"
  }, {
    "permissionName" : "proxiesfor.item.put",
    "displayName" : "proxiesfor item put",
    "description" : "Edit a proxyfor record"
  }, {
    "permissionName" : "proxiesfor.item.delete",
    "displayName" : "proxiesfor.item.delete",
    "description" : "Delete a proxyfor record"
  }, {
    "permissionName" : "departments.collection.get",
    "displayName" : "departments collection get",
    "description" : "Get a list of departments records"
  }, {
    "permissionName" : "departments.item.get",
    "displayName" : "departments item get",
    "description" : "Get a single department record"
  }, {
    "permissionName" : "departments.item.post",
    "displayName" : "departments item post",
    "description" : "Create a new department record"
  }, {
    "permissionName" : "departments.item.put",
    "displayName" : "departments item put",
    "description" : "Edit a department record"
  }, {
    "permissionName" : "departments.item.delete",
    "displayName" : "departments.item.delete",
    "description" : "Delete a department record"
  }, {
    "permissionName" : "users.all",
    "displayName" : "users all",
    "description" : "All permissions for the mod-users module",
    "subPermissions" : [ "users.collection.get", "users.item.get", "users.read.basic", "users.read.restricted", "users.item.post", "users.item.put", "users.item.delete", "usergroups.collection.get", "usergroups.item.get", "usergroups.item.post", "usergroups.item.put", "usergroups.item.delete", "addresstypes.collection.get", "addresstypes.item.get", "addresstypes.item.post", "addresstypes.item.put", "addresstypes.item.delete", "proxiesfor.collection.get", "proxiesfor.item.get", "proxiesfor.item.post", "proxiesfor.item.put", "proxiesfor.item.delete", "departments.collection.get", "departments.item.get", "departments.item.post", "departments.item.put", "departments.item.delete" ]
  }, {
    "permissionName" : "user-settings.custom-fields.collection.get",
    "displayName" : "User Custom Fields - get collection",
    "description" : "Get User Custom Fields collection"
  }, {
    "permissionName" : "user-settings.custom-fields.item.post",
    "displayName" : "User Custom Fields - create field",
    "description" : "Create User Custom Field"
  }, {
    "permissionName" : "user-settings.custom-fields.item.get",
    "displayName" : "User Custom Fields - get field",
    "description" : "Get User Custom Field"
  }, {
    "permissionName" : "user-settings.custom-fields.item.put",
    "displayName" : "User Custom Fields - modify field",
    "description" : "Modify User Custom Field"
  }, {
    "permissionName" : "user-settings.custom-fields.item.delete",
    "displayName" : "User Custom Fields - delete field",
    "description" : "Delete User Custom Field"
  }, {
    "permissionName" : "user-settings.custom-fields.item.stats.get",
    "displayName" : "User Custom Fields - get item usage statistic",
    "description" : "Get Custom Field Statistic"
  }, {
    "permissionName" : "user-settings.custom-fields.item.option.stats.get",
    "displayName" : "User Custom Fields - get item option usage statistic",
    "description" : "Get Custom Field Option Statistic"
  }, {
    "permissionName" : "user-settings.custom-fields.all",
    "displayName" : "User Custom Fields module - all permissions",
    "description" : "Entire set of permissions needed to use the user custom fields",
    "subPermissions" : [ "user-settings.custom-fields.collection.get", "user-settings.custom-fields.collection.put", "user-settings.custom-fields.item.post", "user-settings.custom-fields.item.get", "user-settings.custom-fields.item.put", "user-settings.custom-fields.item.delete", "user-settings.custom-fields.item.stats.get", "user-settings.custom-fields.item.option.stats.get" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-users:18.1.0-SNAPSHOT.166",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    }, {
      "name" : "DB_HOST",
      "value" : "postgres"
    }, {
      "name" : "DB_PORT",
      "value" : "5432"
    }, {
      "name" : "DB_USERNAME",
      "value" : "folio_admin"
    }, {
      "name" : "DB_PASSWORD",
      "value" : "folio_admin"
    }, {
      "name" : "DB_DATABASE",
      "value" : "okapi_modules"
    }, {
      "name" : "DB_QUERYTIMEOUT",
      "value" : "60000"
    }, {
      "name" : "DB_CHARSET",
      "value" : "UTF-8"
    }, {
      "name" : "DB_MAXPOOLSIZE",
      "value" : "5"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 536870912,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-users-18.1.0-SNAPSHOT.166] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:26:05 GMT
Content-Type: text/plain
Content-Length: 46
Connection: keep-alive
vary: origin

Duplicate instId mod-users-18.1.0-SNAPSHOT.166
------------------ [mod-users-18.1.0-SNAPSHOT.166] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:26:05 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-users-18.1.0-SNAPSHOT.166] Enabling module for tenant ------------------
[{"id":"mod-users-18.1.0-SNAPSHOT.166","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:26:05 GMT
Content-Type: application/json
Content-Length: 73
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 43923us

[ {
  "id" : "mod-users-18.1.0-SNAPSHOT.166",
  "action" : "uptodate"
} ]
Done!
------------------ [mod-users-bl] Getting descriptor ------------------
------------------ [mod-users-bl-7.1.0-SNAPSHOT.105] Pushing module descriptor ------------------
HTTP/1.1 100 Continue

HTTP/1.1 201 Created
Date: Tue, 24 Aug 2021 18:26:10 GMT
Content-Type: application/json
Content-Length: 9389
Connection: keep-alive
vary: origin
Location: /_/proxy/modules/mod-users-bl-7.1.0-SNAPSHOT.105
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/modules.. : 201 86236us

{
  "id" : "mod-users-bl-7.1.0-SNAPSHOT.105",
  "name" : "users business logic",
  "requires" : [ {
    "id" : "users",
    "version" : "14.3 15.0"
  }, {
    "id" : "permissions",
    "version" : "5.0"
  }, {
    "id" : "login",
    "version" : "6.0 7.0"
  }, {
    "id" : "service-points",
    "version" : "2.1 3.0"
  }, {
    "id" : "service-points-users",
    "version" : "1.0"
  }, {
    "id" : "password-validator",
    "version" : "1.0"
  }, {
    "id" : "authtoken",
    "version" : "2.0"
  }, {
    "id" : "notify",
    "version" : "2.0"
  }, {
    "id" : "configuration",
    "version" : "2.0"
  } ],
  "provides" : [ {
    "id" : "users-bl",
    "version" : "6.1",
    "handlers" : [ {
      "methods" : [ "GET" ],
      "pathPattern" : "/bl-users",
      "permissionsRequired" : [ "users-bl.collection.get" ],
      "modulePermissions" : [ "users.collection.get", "inventory-storage.service-points-users.collection.get", "inventory-storage.service-points-users.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/bl-users/_self",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "users.item.get", "users.collection.get", "perms.users.get", "usergroups.item.get", "inventory-storage.service-points-users.collection.get", "inventory-storage.service-points-users.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/login",
      "permissionsRequired" : [ ],
      "modulePermissions" : [ "users.item.get", "users.collection.get", "perms.users.item.get", "perms.users.get", "usergroups.item.get", "inventory-storage.service-points-users.collection.get", "inventory-storage.service-points-users.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/bl-users/by-username/{id}",
      "permissionsRequired" : [ "users-bl.item.get", "perms.users.get" ],
      "modulePermissions" : [ "users.item.get", "users.collection.get", "perms.users.get", "login.item.get", "inventory-storage.service-points-users.collection.get", "inventory-storage.service-points-users.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/bl-users/by-id/{id}",
      "permissionsRequired" : [ "users-bl.item.get", "perms.users.get" ],
      "modulePermissions" : [ "users.item.get", "users.collection.get", "perms.users.get", "login.item.get", "inventory-storage.service-points-users.collection.get", "inventory-storage.service-points-users.item.get", "inventory-storage.service-points.collection.get", "inventory-storage.service-points.item.get" ]
    }, {
      "methods" : [ "DELETE" ],
      "pathPattern" : "/bl-users/by-id/{id}",
      "permissionsRequired" : [ "users-bl.item.delete" ],
      "modulePermissions" : [ "users.item.get", "users.item.delete", "circulation-storage.loans.collection.get", "circulation-storage.requests.collection.get", "accounts.collection.get", "manualblocks.collection.get", "proxiesfor.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/bl-users/by-id/{id}/open-transactions",
      "permissionsRequired" : [ "users-bl.transactions.get" ],
      "modulePermissions" : [ "users.item.get", "circulation-storage.loans.collection.get", "circulation-storage.requests.collection.get", "accounts.collection.get", "manualblocks.collection.get", "proxiesfor.collection.get" ]
    }, {
      "methods" : [ "GET" ],
      "pathPattern" : "/bl-users/by-username/{name}/open-transactions",
      "permissionsRequired" : [ "users-bl.transactions.get" ],
      "modulePermissions" : [ "users.collection.get", "circulation-storage.loans.collection.get", "circulation-storage.requests.collection.get", "accounts.collection.get", "manualblocks.collection.get", "proxiesfor.collection.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users",
      "permissionsRequired" : [ "users-bl.item.post" ],
      "permissionsDesired" : [ "perms.users.item.post" ],
      "modulePermissions" : [ "users.item.post", "perms.users.item.post", "login.item.post" ]
    }, {
      "methods" : [ "PUT" ],
      "pathPattern" : "/bl-users/{id}",
      "permissionsRequired" : [ "users-bl.item.put" ],
      "permissionsDesired" : [ "perms.users.item.put" ],
      "modulePermissions" : [ "users.edit", "users.item.put", "perms.users.item.put", "login.item.put" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/forgotten/password",
      "permissionsRequired" : [ ],
      "permissionsDesired" : [ ],
      "modulePermissions" : [ "users.edit", "users.item.put", "perms.users.item.put", "login.item.put", "configuration.entries.collection.get", "users.collection.get", "users.item.get", "login.password-reset-action.post", "auth.signtoken", "notify.item.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/forgotten/username",
      "permissionsRequired" : [ ],
      "permissionsDesired" : [ ],
      "modulePermissions" : [ "users.edit", "users.item.put", "perms.users.item.put", "login.item.put", "configuration.entries.collection.get", "users.collection.get", "notify.item.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/settings/myprofile/password",
      "permissionsRequired" : [ ],
      "permissionsDesired" : [ ],
      "modulePermissions" : [ "validation.validate.post", "login.item.put", "users.item.get" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/password-reset/link",
      "permissionsRequired" : [ "users-bl.password-reset-link.generate" ],
      "permissionsDesired" : [ ],
      "modulePermissions" : [ "users.item.get", "configuration.entries.collection.get", "login.password-reset-action.post", "auth.signtoken", "notify.item.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/password-reset/reset",
      "permissionsRequired" : [ "users-bl.password-reset-link.reset" ],
      "permissionsDesired" : [ ],
      "modulePermissions" : [ "login.password-reset-action.get", "users.item.get", "auth.signtoken", "login.password-reset.post", "validation.validate.post", "notify.item.post" ]
    }, {
      "methods" : [ "POST" ],
      "pathPattern" : "/bl-users/password-reset/validate",
      "permissionsRequired" : [ "users-bl.password-reset-link.validate" ],
      "permissionsDesired" : [ ],
      "modulePermissions" : [ "users.item.get", "auth.signtoken", "login.password-reset-action.get" ]
    } ]
  } ],
  "optional" : [ {
    "id" : "loan-storage",
    "version" : "7.1"
  }, {
    "id" : "feesfines",
    "version" : "16.3"
  } ],
  "permissionSets" : [ {
    "permissionName" : "users-bl.collection.get",
    "displayName" : "users-bl collection get",
    "description" : "Get a list of composite user records"
  }, {
    "permissionName" : "users-bl.item.get",
    "displayName" : "users-bl item get",
    "description" : "Get a single composite user record by id"
  }, {
    "permissionName" : "users-bl.item.post",
    "displayName" : "users-bl item post",
    "description" : "Create a new composite user record"
  }, {
    "permissionName" : "users-bl.item.put",
    "displayName" : "users-bl item put",
    "description" : "Modify a composite user record"
  }, {
    "permissionName" : "users-bl.password-reset-link.generate",
    "displayName" : "users-bl password reset link generate",
    "description" : "Generate and send password reset link"
  }, {
    "permissionName" : "users-bl.password-reset-link.validate",
    "displayName" : "users-bl password-reset-link validate",
    "description" : "Validate create/reset password link and log user into system to change password"
  }, {
    "permissionName" : "users-bl.password-reset-link.reset",
    "displayName" : "users-bl password-reset-link reset",
    "description" : "Reset password by link"
  }, {
    "permissionName" : "users-bl.item.delete",
    "displayName" : "users-bl item delete",
    "description" : "Delete a user record after checking for open transactions"
  }, {
    "permissionName" : "users-bl.transactions.get",
    "displayName" : "users-bl transactions get",
    "description" : "Get summary of open transactions of user record"
  }, {
    "permissionName" : "users-bl.all",
    "displayName" : "users-bl all",
    "description" : "All user business-logic permissions",
    "subPermissions" : [ "users-bl.collection.get", "users-bl.item.get", "users-bl.item.post", "users-bl.item.put", "users-bl.item.delete", "users-bl.password-reset-link.generate", "users-bl.password-reset-link.validate", "users-bl.password-reset-link.reset", "users-bl.transactions.get" ],
    "visible" : false
  } ],
  "launchDescriptor" : {
    "dockerImage" : "folioci/mod-users-bl:7.1.0-SNAPSHOT.105",
    "dockerPull" : true,
    "env" : [ {
      "name" : "JAVA_OPTIONS",
      "value" : "-XX:MaxRAMPercentage=66.0"
    } ],
    "dockerArgs" : {
      "HostConfig" : {
        "Memory" : 357913941,
        "PortBindings" : {
          "8081/tcp" : [ {
            "HostPort" : "%p"
          } ]
        }
      }
    }
  }
}
------------------ [mod-users-bl-7.1.0-SNAPSHOT.105] Pushing module deployment descriptor ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:26:10 GMT
Content-Type: text/plain
Content-Length: 48
Connection: keep-alive
vary: origin

Duplicate instId mod-users-bl-7.1.0-SNAPSHOT.105
------------------ [mod-users-bl-7.1.0-SNAPSHOT.105] Creating tenant ------------------
HTTP/1.1 400 Bad Request
Date: Tue, 24 Aug 2021 18:26:10 GMT
Content-Type: text/plain
Content-Length: 23
Connection: keep-alive
vary: origin

Duplicate tenant id sul
------------------ [mod-users-bl-7.1.0-SNAPSHOT.105] Enabling module for tenant ------------------
[{"id":"mod-users-bl-7.1.0-SNAPSHOT.105","action":"enable"}]
http://okapi-jgreben.dev.sul.stanford.edu/_/proxy/tenants/sul/install?deploy=false\&preRelease=true\&tenantParameters=loadSample%3Dfalse%2CloadReference%3Dfalse
HTTP/1.1 200 OK
Date: Tue, 24 Aug 2021 18:26:10 GMT
Content-Type: application/json
Content-Length: 75
Connection: keep-alive
vary: origin
X-Okapi-Trace: POST okapi-4.9.0-SNAPSHOT /_/proxy/tenants/sul/install.. : 200 55121us

[ {
  "id" : "mod-users-bl-7.1.0-SNAPSHOT.105",
  "action" : "uptodate"
} ]
Done!
